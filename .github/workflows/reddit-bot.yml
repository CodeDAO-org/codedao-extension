name: CodeDAO Reddit Bot

on:
  schedule:
    # Every 4 hours for maximum weekend engagement
    - cron: '0 */4 * * *'
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'weekend_thread'
        type: choice
        options:
        - weekend_thread
        - test_connection
        - milestone_post

jobs:
  reddit-bot:
    runs-on: ubuntu-latest
    
    steps:
    - name: Install Reddit Bot Dependencies
      run: |
        pip install praw python-dotenv
    
    - name: Execute Reddit Bot Action
      env:
        REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
        REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
        REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
        REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
        REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        REDDIT_SUBREDDIT: ${{ secrets.REDDIT_SUBREDDIT }}
      run: |
        python -c "
        import os
        import praw
        from datetime import datetime
        
        # Initialize Reddit connection
        reddit = praw.Reddit(
            client_id=os.getenv('REDDIT_CLIENT_ID'),
            client_secret=os.getenv('REDDIT_CLIENT_SECRET'),
            username=os.getenv('REDDIT_USERNAME'),
            password=os.getenv('REDDIT_PASSWORD'),
            user_agent=os.getenv('REDDIT_USER_AGENT')
        )
        
        action = '${{ github.event.inputs.action }}' or 'weekend_thread'
        subreddit_name = os.getenv('REDDIT_SUBREDDIT', 'CodeDAO')
        subreddit = reddit.subreddit(subreddit_name)
        
        print(f'üîå Connected to Reddit as: {reddit.user.me()}')
        print(f'üéØ Target subreddit: r/{subreddit_name}')
        print(f'‚ö° Action: {action}')
        
        if action == 'test_connection':
            print('‚úÖ Reddit bot connection test successful!')
            print(f'üìä Account karma: {reddit.user.me().comment_karma + reddit.user.me().link_karma}')
            
        elif action == 'milestone_post':
            # Simple milestone post
            title = 'üéâ CodeDAO Community Milestone!'
            content = '''**Exciting news from the CodeDAO community!**
            
A new milestone has been reached in our developer ecosystem.

**Join the CodeDAO Community:**
- üåê **Dashboard**: https://codedao-org.github.io/dashboard.html
- üìö **Get Started**: https://codedao-org.github.io/get-started.html
- üí∞ **Earn CODE tokens** for your coding contributions
- ü§ù **Connect with developers** building the future

Keep building, keep earning! üöÄ

*Posted by CodeDAO Bot*'''
            
            post = subreddit.submit(title=title, selftext=content)
            print(f'üéâ Posted milestone: {post.url}')
            print(f'üìä Post ID: {post.id}')
            
                 else:  # weekend_thread (default)
             # Natural, human-like builder thread
             import random
             current_time = datetime.now()
             day_name = current_time.strftime('%A')
             hour = current_time.hour
             
             # Vary titles to feel more natural
             titles = [
                 f'What are you building this {day_name}?',
                 f'{day_name} coding session - what is everyone working on?',
                 f'Share your {day_name} projects!',
                 f'Quick check-in: what is on your screen right now?',
                 f'{day_name} builders thread',
                 f'What are you coding today?'
             ]
             
             # Add time-specific context
             if hour < 12:
                 titles.extend([f'Good morning! What are you starting with today?', f'Morning coffee and code - what is the plan?'])
             elif hour < 17:
                 titles.extend([f'Afternoon check-in - how is the coding going?', f'Midday progress update thread'])
             else:
                 titles.extend([f'Evening builders - what are you working on tonight?', f'Night owl coders, what is keeping you up?'])
             
             title = random.choice(titles)
             
             # More casual, conversational content
             intros = [
                 f'Hey CodeDAO builders! Hope everyone is having a productive {day_name}.',
                 f'Another {day_name}, another chance to build something awesome.',
                 f'What is everyone hacking on this {day_name}?',
                 f'Quick pulse check on what the community is building.',
                 f'{day_name} vibes are strong - let us see those projects!'
             ]
             
             questions = [
                 'Drop a comment with what you are working on:',
                 'Share your current project:',
                 'Tell us about your latest code adventure:',
                 'What is on your development plate:',
                 'Quick update on your builds:'
             ]
             
             bullets = [
                 '‚Ä¢ New features you are shipping',
                 '‚Ä¢ Bugs you finally squashed',  
                 '‚Ä¢ Tech stack experiments',
                 '‚Ä¢ Weekend side projects',
                 '‚Ä¢ Learning something completely new',
                 '‚Ä¢ Refactoring that old messy code',
                 '‚Ä¢ Open source contributions'
             ]
             
             random.shuffle(bullets)
             selected_bullets = bullets[:4]  # Pick 4 random ones
             
             closings = [
                 'No progress is too small to share. We are all here learning together.',
                 'Remember, every line of code gets you closer to your goals.',
                 'The CodeDAO community is here to support each other.',
                 'Whether you are debugging or deploying, drop an update below.',
                 'Let us keep the momentum going and share what we are building!'
             ]
             
             content = f'''{random.choice(intros)}
 
 {random.choice(questions)}
 
 {chr(10).join(selected_bullets)}
 
 {random.choice(closings)}
 
 **Quick links if you need them:**
 Dashboard: https://codedao-org.github.io/dashboard.html
 Get started: https://codedao-org.github.io/get-started.html
 
 Looking forward to seeing what everyone is cooking up! üë®‚Äçüíªüë©‚Äçüíª'''
            
            post = subreddit.submit(title=title, selftext=content)
            print(f'‚úÖ Posted {day_name} builder thread: {post.url}')
            print(f'üìä Post ID: {post.id}')
            print(f'üïê Posted at: {current_time.strftime('%Y-%m-%d %H:%M:%S UTC')}')
            
        print('üéØ Reddit bot execution completed successfully!')
        "
    
    - name: Log Execution Summary
      run: |
        echo "Reddit Bot Execution Summary:"
        echo "Timestamp: $(date)"
        echo "Action: ${{ github.event.inputs.action || 'weekend_thread' }}"
        echo "Status: Completed"
        echo "Track posts at: https://reddit.com/u/${{ secrets.REDDIT_USERNAME }}" 