{"id":"906a32431ca4e6fa1a4c754c7bb4c16e","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../governance/utils/IVotes.sol\";\nimport \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/cryptography/EIP712.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20Permit.sol\";\nimport \"../../../interfaces/IERC5805.sol\";\nimport \"../../../utils/math/Math.sol\";\nimport \"../../../utils/math/SafeCast.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20Votes is ERC20Permit, IERC5805 {\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() public view virtual override returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual override returns (string memory) {\n        // Check that the clock was not modified\n        require(clock() == block.number, \"ERC20Votes: broken clock mode\");\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        unchecked {\n            return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n        }\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_checkpoints[account], timepoint);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n     * It is NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, timepoint);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 timepoint) private view returns (uint256) {\n        // We run a binary search to look for the last (most recent) checkpoint taken before (or at) `timepoint`.\n        //\n        // Initially we check if the block is recent to narrow the search range.\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `timepoint`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `timepoint`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `timepoint`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `timepoint`, but it works out\n        // the same.\n        uint256 length = ckpts.length;\n\n        uint256 low = 0;\n        uint256 high = length;\n\n        if (length > 5) {\n            uint256 mid = length - Math.sqrt(length);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        unchecked {\n            return high == 0 ? 0 : _unsafeAccess(ckpts, high - 1).votes;\n        }\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(address src, address dst, uint256 amount) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n\n        unchecked {\n            Checkpoint memory oldCkpt = pos == 0 ? Checkpoint(0, 0) : _unsafeAccess(ckpts, pos - 1);\n\n            oldWeight = oldCkpt.votes;\n            newWeight = op(oldWeight, delta);\n\n            if (pos > 0 && oldCkpt.fromBlock == clock()) {\n                _unsafeAccess(ckpts, pos - 1).votes = SafeCast.toUint224(newWeight);\n            } else {\n                ckpts.push(Checkpoint({fromBlock: SafeCast.toUint32(clock()), votes: SafeCast.toUint224(newWeight)}));\n            }\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage ckpts, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, ckpts.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/CodeDAOToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract CodeDAOToken {\n    string public name = \"CodeDAO Token\";\n    string public symbol = \"CODE\";\n    uint8 public decimals = 18;\n    uint256 public totalSupply = 100000000000000000000000000;\n    \n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n    \n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    \n    constructor() {\n        balanceOf[0x813343d30065eAe9D1Be6521203f5C0874818C28] = totalSupply;\n        emit Transfer(address(0), 0x813343d30065eAe9D1Be6521203f5C0874818C28, totalSupply);\n    }\n    \n    function approve(address spender, uint256 value) external returns (bool) {\n        allowance[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n    \n    function transferFrom(address from, address to, uint256 value) external returns (bool) {\n        require(balanceOf[from] >= value, \"Insufficient balance\");\n        require(allowance[from][msg.sender] >= value, \"Insufficient allowance\");\n        balanceOf[from] -= value;\n        balanceOf[to] += value;\n        allowance[from][msg.sender] -= value;\n        emit Transfer(from, to, value);\n        return true;\n    }\n    \n    function transfer(address to, uint256 value) external returns (bool) {\n        require(balanceOf[msg.sender] >= value, \"Insufficient balance\");\n        balanceOf[msg.sender] -= value;\n        balanceOf[to] += value;\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n} "},"contracts/MerkleDistributorV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./CodeDAOToken.sol\";\nimport \"./StakingVault.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title MerkleDistributorV2 \n * @notice Cumulative Merkle distributor for airdrops + builder rewards\n * @dev Supports claim-to-stake, gasless claims, and multi-epoch aggregation\n */\ncontract MerkleDistributorV2 is Pausable, ReentrancyGuard, Ownable {\n    CodeDAOToken public immutable token;\n    StakingVault public immutable stakingVault;\n    \n    // Epoch tracking\n    uint256 public currentEpoch;\n    mapping(uint256 => bytes32) public epochRoots;\n    mapping(uint256 => uint256) public epochTotals;\n    mapping(uint256 => string) public epochDescriptions;\n    mapping(uint256 => uint256) public epochExpiry;\n    \n    // Cumulative claims tracking\n    mapping(address => uint256) public claimed;\n    \n    // Gasless relay\n    address public relayer;\n    mapping(address => bool) public hasClaimedGasless;\n    uint256 public gaslessClaimCount;\n    uint256 public constant MAX_GASLESS_CLAIMS = 1000;\n    \n    // Emergency controls\n    address public rootGuardian;\n    mapping(uint256 => uint256) public epochCaps;\n    \n    event EpochSet(uint256 indexed epochId, bytes32 merkleRoot, uint256 totalAmount, string description);\n    event Claimed(address indexed user, uint256 amount, bool autoStaked, uint256 epochId);\n    event GaslessClaimed(address indexed user, uint256 amount, address indexed relayer);\n    event RelayerUpdated(address indexed oldRelayer, address indexed newRelayer);\n    \n    modifier onlyRelayer() {\n        require(msg.sender == relayer, \"Not relayer\");\n        _;\n    }\n    \n    modifier onlyGuardian() {\n        require(msg.sender == rootGuardian || msg.sender == owner(), \"Not guardian\");\n        _;\n    }\n    \n    constructor(\n        address _token,\n        address _stakingVault,\n        address _rootGuardian\n    ) {\n        token = CodeDAOToken(_token);\n        stakingVault = StakingVault(_stakingVault);\n        rootGuardian = _rootGuardian;\n    }\n    \n    /**\n     * @notice Set Merkle root for new epoch (cumulative)\n     * @param epochId Epoch number (must be sequential)\n     * @param merkleRoot Root of Merkle tree with cumulative amounts\n     * @param totalAmount Total tokens allocated for this epoch\n     * @param description Human readable description\n     * @param expiryDays Days until epoch expires (0 = no expiry)\n     */\n    function setEpochRoot(\n        uint256 epochId,\n        bytes32 merkleRoot,\n        uint256 totalAmount,\n        string calldata description,\n        uint256 expiryDays\n    ) external onlyOwner {\n        require(epochId == currentEpoch + 1, \"Must be sequential\");\n        require(merkleRoot != bytes32(0), \"Invalid root\");\n        \n        epochRoots[epochId] = merkleRoot;\n        epochTotals[epochId] = totalAmount;\n        epochDescriptions[epochId] = description;\n        \n        if (expiryDays > 0) {\n            epochExpiry[epochId] = block.timestamp + (expiryDays * 1 days);\n        }\n        \n        // Set conservative cap (150% of stated total)\n        epochCaps[epochId] = (totalAmount * 150) / 100;\n        \n        currentEpoch = epochId;\n        \n        emit EpochSet(epochId, merkleRoot, totalAmount, description);\n    }\n    \n    /**\n     * @notice Claim tokens (with auto-stake option)\n     * @param cumulativeAmount Total lifetime earnings for user\n     * @param autoStake Whether to automatically stake claimed tokens\n     * @param merkleProof Proof of inclusion in latest epoch\n     */\n    function claim(\n        uint256 cumulativeAmount,\n        bool autoStake,\n        bytes32[] calldata merkleProof\n    ) external nonReentrant whenNotPaused {\n        _claim(msg.sender, cumulativeAmount, autoStake, merkleProof, false);\n    }\n    \n    /**\n     * @notice Gasless claim for first-time users (relayer pays gas)\n     * @param user Address to claim for\n     * @param cumulativeAmount Total lifetime earnings\n     * @param autoStake Whether to auto-stake\n     * @param merkleProof Merkle proof\n     */\n    function claimGasless(\n        address user,\n        uint256 cumulativeAmount,\n        bool autoStake,\n        bytes32[] calldata merkleProof\n    ) external onlyRelayer nonReentrant whenNotPaused {\n        require(!hasClaimedGasless[user], \"Already used gasless\");\n        require(gaslessClaimCount < MAX_GASLESS_CLAIMS, \"Gasless quota exceeded\");\n        \n        hasClaimedGasless[user] = true;\n        gaslessClaimCount++;\n        \n        uint256 amount = _claim(user, cumulativeAmount, autoStake, merkleProof, true);\n        \n        emit GaslessClaimed(user, amount, msg.sender);\n    }\n    \n    /**\n     * @notice Batch claim multiple users (for airdrops)\n     */\n    function claimBatch(\n        address[] calldata users,\n        uint256[] calldata cumulativeAmounts,\n        bool autoStake,\n        bytes32[][] calldata merkleProofs\n    ) external nonReentrant whenNotPaused {\n        require(users.length == cumulativeAmounts.length && users.length == merkleProofs.length, \"Array mismatch\");\n        require(users.length <= 20, \"Batch too large\");\n        \n        for (uint256 i = 0; i < users.length; i++) {\n            _claim(users[i], cumulativeAmounts[i], autoStake, merkleProofs[i], false);\n        }\n    }\n    \n    /**\n     * @notice Internal claim logic\n     */\n    function _claim(\n        address user,\n        uint256 cumulativeAmount,\n        bool autoStake,\n        bytes32[] calldata merkleProof,\n        bool isGasless\n    ) internal returns (uint256 claimAmount) {\n        // Check expiry\n        if (epochExpiry[currentEpoch] > 0) {\n            require(block.timestamp <= epochExpiry[currentEpoch], \"Epoch expired\");\n        }\n        \n        // Calculate claimable amount\n        uint256 alreadyClaimed = claimed[user];\n        require(cumulativeAmount > alreadyClaimed, \"Nothing to claim\");\n        \n        claimAmount = cumulativeAmount - alreadyClaimed;\n        \n        // Verify Merkle proof\n        bytes32 leaf = keccak256(abi.encodePacked(user, cumulativeAmount));\n        require(_verifyProof(merkleProof, epochRoots[currentEpoch], leaf), \"Invalid proof\");\n        \n        // Update claimed amount\n        claimed[user] = cumulativeAmount;\n        \n        // Transfer or stake tokens\n        if (autoStake) {\n            // Approve staking vault and stake\n            require(token.transfer(address(stakingVault), claimAmount), \"Transfer failed\");\n            // Note: StakingVault needs to be updated to accept direct deposits\n            // For now, we'll transfer to user and they can stake separately\n            require(token.transfer(user, claimAmount), \"Transfer failed\");\n        } else {\n            require(token.transfer(user, claimAmount), \"Transfer failed\");\n        }\n        \n        emit Claimed(user, claimAmount, autoStake, currentEpoch);\n    }\n    \n    /**\n     * @notice Get claimable amount for user\n     */\n    function getClaimableAmount(address user, uint256 cumulativeAmount) external view returns (uint256) {\n        uint256 alreadyClaimed = claimed[user];\n        if (cumulativeAmount <= alreadyClaimed) return 0;\n        return cumulativeAmount - alreadyClaimed;\n    }\n    \n    /**\n     * @notice Check if user is eligible for gasless claim\n     */\n    function canClaimGasless(address user) external view returns (bool) {\n        return !hasClaimedGasless[user] && gaslessClaimCount < MAX_GASLESS_CLAIMS;\n    }\n    \n    /**\n     * @notice Get epoch information\n     */\n    function getEpochInfo(uint256 epochId) external view returns (\n        bytes32 root,\n        uint256 total,\n        string memory description,\n        uint256 expiry,\n        bool isActive\n    ) {\n        return (\n            epochRoots[epochId],\n            epochTotals[epochId],\n            epochDescriptions[epochId],\n            epochExpiry[epochId],\n            epochId <= currentEpoch && (epochExpiry[epochId] == 0 || block.timestamp <= epochExpiry[epochId])\n        );\n    }\n    \n    /**\n     * @notice Emergency pause by guardian\n     */\n    function emergencyPause() external onlyGuardian {\n        _pause();\n    }\n    \n    /**\n     * @notice Resume after pause\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n    \n    /**\n     * @notice Update relayer address\n     */\n    function setRelayer(address newRelayer) external onlyOwner {\n        address oldRelayer = relayer;\n        relayer = newRelayer;\n        emit RelayerUpdated(oldRelayer, newRelayer);\n    }\n    \n    /**\n     * @notice Update root guardian\n     */\n    function setRootGuardian(address newGuardian) external onlyOwner {\n        rootGuardian = newGuardian;\n    }\n    \n    /**\n     * @notice Emergency withdrawal (only after epoch expiry)\n     */\n    function emergencyWithdraw(uint256 amount) external onlyOwner {\n        require(epochExpiry[currentEpoch] > 0 && block.timestamp > epochExpiry[currentEpoch], \"Epoch not expired\");\n        require(token.transfer(owner(), amount), \"Transfer failed\");\n    }\n    \n    /**\n     * @notice Fund the contract\n     */\n    function fund(uint256 amount) external {\n        require(token.transferFrom(msg.sender, address(this), amount), \"Transfer failed\");\n    }\n    \n    /**\n     * @notice Verify Merkle proof\n     */\n    function _verifyProof(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        bytes32 computedHash = leaf;\n        \n        for (uint256 i = 0; i < proof.length; i++) {\n            bytes32 proofElement = proof[i];\n            \n            if (computedHash <= proofElement) {\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\n            } else {\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\n            }\n        }\n        \n        return computedHash == root;\n    }\n} "},"contracts/StakingVault.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./CodeDAOToken.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\n/**\n * @title StakingVault (sCODE)\n * @notice Liquid staking: stake CODE → receive sCODE 1:1\n * @notice sCODE balance unlocks premium features in CodeDAO platform\n * @dev Also serves as governance token with delegation support\n */\ncontract StakingVault is ERC20, ERC20Permit, ERC20Votes {\n    CodeDAOToken public immutable codeToken;\n    \n    event Stake(address indexed user, uint256 amount);\n    event Unstake(address indexed user, uint256 amount);\n    \n    constructor(address _codeToken) \n        ERC20(\"Staked CodeDAO Token\", \"sCODE\")\n        ERC20Permit(\"Staked CodeDAO Token\")\n    {\n        codeToken = CodeDAOToken(_codeToken);\n    }\n    \n    /**\n     * @notice Stake CODE tokens to receive sCODE 1:1\n     */\n    function stake(uint256 amount) external {\n        require(amount > 0, \"Amount must be > 0\");\n        \n        // Transfer CODE from user to vault\n        require(codeToken.transferFrom(msg.sender, address(this), amount), \"Transfer failed\");\n        \n        // Mint sCODE 1:1\n        _mint(msg.sender, amount);\n        \n        emit Stake(msg.sender, amount);\n    }\n    \n    /**\n     * @notice Unstake sCODE to receive CODE 1:1\n     */\n    function unstake(uint256 amount) external {\n        require(amount > 0, \"Amount must be > 0\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient sCODE\");\n        \n        // Burn sCODE\n        _burn(msg.sender, amount);\n        \n        // Transfer CODE back to user\n        require(codeToken.transfer(msg.sender, amount), \"Transfer failed\");\n        \n        emit Unstake(msg.sender, amount);\n    }\n    \n    /**\n     * @notice Get user's staking tier based on sCODE balance\n     */\n    function getUserTier(address user) external view returns (string memory) {\n        uint256 balance = balanceOf(user);\n        \n        if (balance >= 250_000e18) return \"Partner\";\n        if (balance >= 50_000e18) return \"Pro\"; \n        if (balance >= 10_000e18) return \"Builder\";\n        return \"Free\";\n    }\n    \n    /**\n     * @notice Check if user qualifies for specific tier\n     */\n    function hasMinStake(address user, uint256 minAmount) external view returns (bool) {\n        return balanceOf(user) >= minAmount;\n    }\n\n    // Required overrides for ERC20Votes\n    function _afterTokenTransfer(address from, address to, uint256 amount)\n        internal\n        override(ERC20, ERC20Votes)\n    {\n        super._afterTokenTransfer(from, to, amount);\n    }\n\n    function _mint(address to, uint256 amount)\n        internal\n        override(ERC20, ERC20Votes)\n    {\n        super._mint(to, amount);\n    }\n\n    function _burn(address account, uint256 amount)\n        internal\n        override(ERC20, ERC20Votes)\n    {\n        super._burn(account, amount);\n    }\n} "}},"settings":{"optimizer":{"enabled":true,"runs":10000},"evmVersion":"paris","viaIR":false,"metadata":{"bytecodeHash":"bzzr1"},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/MerkleDistributorV2.sol:161:9:\n    |\n161 |         bool isGasless\n    |         ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5635,"file":"contracts/MerkleDistributorV2.sol","start":5621},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2074],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":2075,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2074,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,2074],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[],"usedEvents":[13]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"135:132:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IVotes","nameLocation":"278:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"291:71:1","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":124,"name":"DelegateChanged","nameLocation":"373:15:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:1","nodeType":"VariableDeclaration","scope":124,"src":"389:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:1","nodeType":"VariableDeclaration","scope":124,"src":"416:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:1","nodeType":"VariableDeclaration","scope":124,"src":"446:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:1"},"src":"367:107:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"480:124:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":133,"name":"DelegateVotesChanged","nameLocation":"615:20:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:1","nodeType":"VariableDeclaration","scope":133,"src":"636:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:1","nodeType":"VariableDeclaration","scope":133,"src":"662:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:1","nodeType":"VariableDeclaration","scope":133,"src":"687:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:1"},"src":"609:98:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"713:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":141,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:1","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"account","nameLocation":"823:7:1","nodeType":"VariableDeclaration","scope":141,"src":"815:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:1"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"855:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:1"},"scope":190,"src":"797:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"870:230:1","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1114:12:1","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"account","nameLocation":"1135:7:1","nodeType":"VariableDeclaration","scope":151,"src":"1127:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"timepoint","nameLocation":"1152:9:1","nodeType":"VariableDeclaration","scope":151,"src":"1144:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1126:36:1"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":151,"src":"1186:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:9:1"},"scope":190,"src":"1105:90:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"1201:481:1","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":159,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1696:18:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"timepoint","nameLocation":"1723:9:1","nodeType":"VariableDeclaration","scope":159,"src":"1715:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:19:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"1757:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1757:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1756:9:1"},"scope":190,"src":"1687:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1772:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1857:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"account","nameLocation":"1875:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1867:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1866:17:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1907:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1906:9:1"},"scope":190,"src":"1848:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1922:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2007:8:1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"delegatee","nameLocation":"2024:9:1","nodeType":"VariableDeclaration","scope":173,"src":"2016:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2015:19:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"2043:0:1"},"scope":190,"src":"1998:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"2050:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2131:13:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"delegatee","nameLocation":"2153:9:1","nodeType":"VariableDeclaration","scope":189,"src":"2145:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"nonce","nameLocation":"2172:5:1","nodeType":"VariableDeclaration","scope":189,"src":"2164:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"expiry","nameLocation":"2187:6:1","nodeType":"VariableDeclaration","scope":189,"src":"2179:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"v","nameLocation":"2201:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2195:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"2195:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"r","nameLocation":"2212:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2204:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2204:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"s","nameLocation":"2223:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2215:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2144:81:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"2234:0:1"},"scope":190,"src":"2122:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"268:1969:1","usedErrors":[],"usedEvents":[124,133]}],"src":"110:2128:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[215]},"id":216,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":215,"linearizedBaseContracts":[215],"name":"IERC5267","nameLocation":"142:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"157:84:2","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":195,"name":"EIP712DomainChanged","nameLocation":"252:19:2","nodeType":"EventDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"271:2:2"},"src":"246:28:2"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"280:140:2","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":214,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:2","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"446:2:2"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"fields","nameLocation":"516:6:2","nodeType":"VariableDeclaration","scope":214,"src":"509:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":198,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"name","nameLocation":"550:4:2","nodeType":"VariableDeclaration","scope":214,"src":"536:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"version","nameLocation":"582:7:2","nodeType":"VariableDeclaration","scope":214,"src":"568:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":202,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"chainId","nameLocation":"611:7:2","nodeType":"VariableDeclaration","scope":214,"src":"603:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:2","nodeType":"VariableDeclaration","scope":214,"src":"632:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"salt","nameLocation":"679:4:2","nodeType":"VariableDeclaration","scope":214,"src":"671:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"extensions","nameLocation":"714:10:2","nodeType":"VariableDeclaration","scope":214,"src":"697:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":211,"nodeType":"ArrayTypeName","src":"697:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:2"},"scope":215,"src":"425:310:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":216,"src":"132:605:2","usedErrors":[],"usedEvents":[195]}],"src":"107:631:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[224],"IERC6372":[239],"IVotes":[190]},"id":225,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":217,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":225,"sourceUnit":191,"src":"132:40:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":225,"sourceUnit":240,"src":"173:24:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":220,"name":"IERC6372","nameLocations":["221:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":239,"src":"221:8:3"},"id":221,"nodeType":"InheritanceSpecifier","src":"221:8:3"},{"baseName":{"id":222,"name":"IVotes","nameLocations":["231:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":190,"src":"231:6:3"},"id":223,"nodeType":"InheritanceSpecifier","src":"231:6:3"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":224,"linearizedBaseContracts":[224,190,239],"name":"IERC5805","nameLocation":"209:8:3","nodeType":"ContractDefinition","nodes":[],"scope":225,"src":"199:41:3","usedErrors":[],"usedEvents":[124,133]}],"src":"107:134:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[239]},"id":240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":226,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":239,"linearizedBaseContracts":[239],"name":"IERC6372","nameLocation":"142:8:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"157:133:4","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"304:5:4","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"309:2:4"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"335:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":229,"name":"uint48","nodeType":"ElementaryTypeName","src":"335:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"334:8:4"},"scope":239,"src":"295:48:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"349:48:4","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":238,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"464:10:4","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"474:2:4"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":238,"src":"500:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":235,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"499:15:4"},"scope":239,"src":"455:60:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":240,"src":"132:385:4","usedErrors":[],"usedEvents":[]}],"src":"107:411:4"},"id":4},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[2074],"Pausable":[347]},"id":348,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":241,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":348,"sourceUnit":2075,"src":"130:30:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":244,"name":"Context","nameLocations":["632:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2074,"src":"632:7:5"},"id":245,"nodeType":"InheritanceSpecifier","src":"632:7:5"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"162:439:5","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":347,"linearizedBaseContracts":[347,2074],"name":"Pausable","nameLocation":"620:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"646:73:5","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":250,"name":"Paused","nameLocation":"730:6:5","nodeType":"EventDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:5","nodeType":"VariableDeclaration","scope":250,"src":"737:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:5"},"src":"724:30:5"},{"anonymous":false,"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"760:70:5","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":255,"name":"Unpaused","nameLocation":"841:8:5","nodeType":"EventDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:5","nodeType":"VariableDeclaration","scope":255,"src":"850:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:5"},"src":"835:32:5"},{"constant":false,"id":257,"mutability":"mutable","name":"_paused","nameLocation":"886:7:5","nodeType":"VariableDeclaration","scope":347,"src":"873:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":256,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":265,"nodeType":"Block","src":"986:32:5","statements":[{"expression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":261,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"996:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":264,"nodeType":"ExpressionStatement","src":"996:15:5"}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"900:67:5","text":" @dev Initializes the contract in unpaused state."},"id":266,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"983:2:5"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"986:0:5"},"scope":347,"src":"972:46:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":273,"nodeType":"Block","src":"1229:47:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":269,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"1239:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"1239:19:5"},{"id":272,"nodeType":"PlaceholderStatement","src":"1268:1:5"}]},"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"1024:175:5","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":274,"name":"whenNotPaused","nameLocation":"1213:13:5","nodeType":"ModifierDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"1226:2:5"},"src":"1204:72:5","virtual":false,"visibility":"internal"},{"body":{"id":281,"nodeType":"Block","src":"1476:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":277,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"1486:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"ExpressionStatement","src":"1486:16:5"},{"id":280,"nodeType":"PlaceholderStatement","src":"1512:1:5"}]},"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"1282:167:5","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":282,"name":"whenPaused","nameLocation":"1463:10:5","nodeType":"ModifierDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[],"src":"1473:2:5"},"src":"1454:66:5","virtual":false,"visibility":"internal"},{"body":{"id":290,"nodeType":"Block","src":"1668:31:5","statements":[{"expression":{"id":288,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1685:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":287,"id":289,"nodeType":"Return","src":"1678:14:5"}]},"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"1526:84:5","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":291,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:5","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[],"src":"1630:2:5"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"1662:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:5"},"scope":347,"src":"1615:84:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":302,"nodeType":"Block","src":"1818:55:5","statements":[{"expression":{"arguments":[{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:5","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":296,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"1837:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":301,"nodeType":"ExpressionStatement","src":"1828:38:5"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"1705:57:5","text":" @dev Throws if the contract is paused."},"id":303,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:5","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[],"src":"1793:2:5"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"1818:0:5"},"scope":347,"src":"1767:106:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"1993:58:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":308,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"2011:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":312,"nodeType":"ExpressionStatement","src":"2003:41:5"}]},"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"1879:61:5","text":" @dev Throws if the contract is not paused."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:5","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"1968:2:5"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"1993:0:5"},"scope":347,"src":"1945:106:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":329,"nodeType":"Block","src":"2235:66:5","statements":[{"expression":{"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":320,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2245:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":323,"nodeType":"ExpressionStatement","src":"2245:14:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":325,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"2281:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":324,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"2274:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"EmitStatement","src":"2269:25:5"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"2057:124:5","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":330,"implemented":true,"kind":"function","modifiers":[{"id":318,"kind":"modifierInvocation","modifierName":{"id":317,"name":"whenNotPaused","nameLocations":["2221:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":274,"src":"2221:13:5"},"nodeType":"ModifierInvocation","src":"2221:13:5"}],"name":"_pause","nameLocation":"2195:6:5","nodeType":"FunctionDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[],"src":"2201:2:5"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"2235:0:5"},"scope":347,"src":"2186:115:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":345,"nodeType":"Block","src":"2481:69:5","statements":[{"expression":{"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":336,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2491:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":339,"nodeType":"ExpressionStatement","src":"2491:15:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":341,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"2530:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":340,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2521:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2521:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":344,"nodeType":"EmitStatement","src":"2516:27:5"}]},"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"2307:121:5","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":346,"implemented":true,"kind":"function","modifiers":[{"id":334,"kind":"modifierInvocation","modifierName":{"id":333,"name":"whenPaused","nameLocations":["2470:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":282,"src":"2470:10:5"},"nodeType":"ModifierInvocation","src":"2470:10:5"}],"name":"_unpause","nameLocation":"2442:8:5","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"2450:2:5"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[],"src":"2481:0:5"},"scope":347,"src":"2433:117:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":348,"src":"602:1950:5","usedErrors":[],"usedEvents":[250,255]}],"src":"105:2448:5"},"id":5},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[412]},"id":413,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":349,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"137:750:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":412,"linearizedBaseContracts":[412],"name":"ReentrancyGuard","nameLocation":"906:15:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":353,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:6","nodeType":"VariableDeclaration","scope":412,"src":"1676:41:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":356,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:6","nodeType":"VariableDeclaration","scope":412,"src":"1723:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":358,"mutability":"mutable","name":"_status","nameLocation":"1783:7:6","nodeType":"VariableDeclaration","scope":412,"src":"1767:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":365,"nodeType":"Block","src":"1811:39:6","statements":[{"expression":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":361,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"1821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":362,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"1831:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":364,"nodeType":"ExpressionStatement","src":"1821:22:6"}]},"id":366,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"1808:2:6"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"1811:0:6"},"scope":412,"src":"1797:53:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":376,"nodeType":"Block","src":"2251:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":369,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2261:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"ExpressionStatement","src":"2261:21:6"},{"id":372,"nodeType":"PlaceholderStatement","src":"2292:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":373,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2303:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":375,"nodeType":"ExpressionStatement","src":"2303:20:6"}]},"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"1856:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":377,"name":"nonReentrant","nameLocation":"2236:12:6","nodeType":"ModifierDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2248:2:6"},"src":"2227:103:6","virtual":false,"visibility":"internal"},{"body":{"id":391,"nodeType":"Block","src":"2375:248:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":381,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"2468:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":382,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"2479:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"ExpressionStatement","src":"2460:63:6"},{"expression":{"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":387,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"2598:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":388,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"2608:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":390,"nodeType":"ExpressionStatement","src":"2598:18:6"}]},"id":392,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:6","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2364:2:6"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"2375:0:6"},"scope":412,"src":"2336:287:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":399,"nodeType":"Block","src":"2667:171:6","statements":[{"expression":{"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":395,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"2809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":396,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":353,"src":"2819:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":398,"nodeType":"ExpressionStatement","src":"2809:22:6"}]},"id":400,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:6","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[],"src":"2656:2:6"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"2667:0:6"},"scope":412,"src":"2629:209:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":410,"nodeType":"Block","src":"3081:43:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":406,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"3098:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":407,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"3109:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":405,"id":409,"nodeType":"Return","src":"3091:26:6"}]},"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"2844:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":411,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:6","nodeType":"FunctionDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[],"src":"3049:2:6"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":411,"src":"3075:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":403,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:6"},"scope":412,"src":"3017:107:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":413,"src":"888:2238:6","usedErrors":[],"usedEvents":[]}],"src":"112:3015:6"},"id":6},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2074],"ERC20":[999],"IERC20":[1077],"IERC20Metadata":[2008]},"id":1000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":414,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":415,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1000,"sourceUnit":1078,"src":"130:22:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1000,"sourceUnit":2009,"src":"153:41:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":417,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1000,"sourceUnit":2075,"src":"195:33:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":419,"name":"Context","nameLocations":["1550:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2074,"src":"1550:7:7"},"id":420,"nodeType":"InheritanceSpecifier","src":"1550:7:7"},{"baseName":{"id":421,"name":"IERC20","nameLocations":["1559:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"1559:6:7"},"id":422,"nodeType":"InheritanceSpecifier","src":"1559:6:7"},{"baseName":{"id":423,"name":"IERC20Metadata","nameLocations":["1567:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":2008,"src":"1567:14:7"},"id":424,"nodeType":"InheritanceSpecifier","src":"1567:14:7"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"230:1301:7","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":999,"linearizedBaseContracts":[999,2008,1077,2074],"name":"ERC20","nameLocation":"1541:5:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":428,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:7","nodeType":"VariableDeclaration","scope":999,"src":"1588:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":427,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":434,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:7","nodeType":"VariableDeclaration","scope":999,"src":"1640:67:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":433,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":432,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":436,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:7","nodeType":"VariableDeclaration","scope":999,"src":"1714:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":438,"mutability":"mutable","name":"_name","nameLocation":"1764:5:7","nodeType":"VariableDeclaration","scope":999,"src":"1749:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":437,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":440,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:7","nodeType":"VariableDeclaration","scope":999,"src":"1775:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":439,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":456,"nodeType":"Block","src":"2036:57:7","statements":[{"expression":{"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":448,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2046:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":449,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"2054:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":451,"nodeType":"ExpressionStatement","src":"2046:13:7"},{"expression":{"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":452,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2069:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":453,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2079:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":455,"nodeType":"ExpressionStatement","src":"2069:17:7"}]},"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"1804:171:7","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":457,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"name_","nameLocation":"2006:5:7","nodeType":"VariableDeclaration","scope":457,"src":"1992:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":442,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:7","nodeType":"VariableDeclaration","scope":457,"src":"2013:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":444,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:7"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"2036:0:7"},"scope":999,"src":"1980:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1995],"body":{"id":466,"nodeType":"Block","src":"2227:29:7","statements":[{"expression":{"id":464,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2244:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":463,"id":465,"nodeType":"Return","src":"2237:12:7"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"2099:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":467,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:7","nodeType":"FunctionDefinition","overrides":{"id":460,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:7"},"parameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"2171:2:7"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":467,"src":"2212:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":461,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:7"},"scope":999,"src":"2158:98:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2001],"body":{"id":476,"nodeType":"Block","src":"2440:31:7","statements":[{"expression":{"id":474,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2457:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":473,"id":475,"nodeType":"Return","src":"2450:14:7"}]},"documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"2262:102:7","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":477,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:7","nodeType":"FunctionDefinition","overrides":{"id":470,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:7"},"parameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"2384:2:7"},"returnParameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":477,"src":"2425:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":471,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:7"},"scope":999,"src":"2369:102:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2007],"body":{"id":486,"nodeType":"Block","src":"3169:26:7","statements":[{"expression":{"hexValue":"3138","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":483,"id":485,"nodeType":"Return","src":"3179:9:7"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2477:622:7","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":487,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:7","nodeType":"FunctionDefinition","overrides":{"id":480,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:7"},"parameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"3121:2:7"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":487,"src":"3162:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":481,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:7"},"scope":999,"src":"3104:91:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1026],"body":{"id":496,"nodeType":"Block","src":"3325:36:7","statements":[{"expression":{"id":494,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3342:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":493,"id":495,"nodeType":"Return","src":"3335:19:7"}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"3201:49:7","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":497,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:7","nodeType":"FunctionDefinition","overrides":{"id":490,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:7"},"parameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"3275:2:7"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":497,"src":"3316:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":491,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:7"},"scope":999,"src":"3255:106:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1034],"body":{"id":510,"nodeType":"Block","src":"3502:42:7","statements":[{"expression":{"baseExpression":{"id":506,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3519:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":508,"indexExpression":{"id":507,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"3529:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":505,"id":509,"nodeType":"Return","src":"3512:25:7"}]},"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"3367:47:7","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":511,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:7","nodeType":"FunctionDefinition","overrides":{"id":502,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:7"},"parameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"account","nameLocation":"3446:7:7","nodeType":"VariableDeclaration","scope":511,"src":"3438:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:7"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":511,"src":"3493:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:7"},"scope":999,"src":"3419:125:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1044],"body":{"id":535,"nodeType":"Block","src":"3825:104:7","statements":[{"assignments":[523],"declarations":[{"constant":false,"id":523,"mutability":"mutable","name":"owner","nameLocation":"3843:5:7","nodeType":"VariableDeclaration","scope":535,"src":"3835:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":526,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":524,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"3851:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:7"},{"expression":{"arguments":[{"id":528,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3883:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":529,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3890:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":530,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3894:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":527,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"3873:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":532,"nodeType":"ExpressionStatement","src":"3873:28:7"},{"expression":{"hexValue":"74727565","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":521,"id":534,"nodeType":"Return","src":"3911:11:7"}]},"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"3550:185:7","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":536,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:7","nodeType":"FunctionDefinition","overrides":{"id":518,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:7"},"parameters":{"id":517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"to","nameLocation":"3766:2:7","nodeType":"VariableDeclaration","scope":536,"src":"3758:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"amount","nameLocation":"3778:6:7","nodeType":"VariableDeclaration","scope":536,"src":"3770:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:7"},"returnParameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":536,"src":"3819:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":519,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:7"},"scope":999,"src":"3740:189:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1054],"body":{"id":553,"nodeType":"Block","src":"4085:51:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":547,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"4102:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":549,"indexExpression":{"id":548,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"4114:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":551,"indexExpression":{"id":550,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"4121:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":546,"id":552,"nodeType":"Return","src":"4095:34:7"}]},"documentation":{"id":537,"nodeType":"StructuredDocumentation","src":"3935:47:7","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":554,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:7","nodeType":"FunctionDefinition","overrides":{"id":543,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:7"},"parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"owner","nameLocation":"4014:5:7","nodeType":"VariableDeclaration","scope":554,"src":"4006:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"spender","nameLocation":"4029:7:7","nodeType":"VariableDeclaration","scope":554,"src":"4021:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:7"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":554,"src":"4076:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":544,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:7"},"scope":999,"src":"3987:149:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1064],"body":{"id":578,"nodeType":"Block","src":"4533:108:7","statements":[{"assignments":[566],"declarations":[{"constant":false,"id":566,"mutability":"mutable","name":"owner","nameLocation":"4551:5:7","nodeType":"VariableDeclaration","scope":578,"src":"4543:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":569,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":567,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"4559:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:7"},{"expression":{"arguments":[{"id":571,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"4590:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":572,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"4597:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":573,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4606:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":570,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"4581:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":575,"nodeType":"ExpressionStatement","src":"4581:32:7"},{"expression":{"hexValue":"74727565","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":564,"id":577,"nodeType":"Return","src":"4623:11:7"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"4142:297:7","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":579,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:7","nodeType":"FunctionDefinition","overrides":{"id":561,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:7"},"parameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"spender","nameLocation":"4469:7:7","nodeType":"VariableDeclaration","scope":579,"src":"4461:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"amount","nameLocation":"4486:6:7","nodeType":"VariableDeclaration","scope":579,"src":"4478:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":558,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:7"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"4527:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":562,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:7"},"scope":999,"src":"4444:197:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1076],"body":{"id":611,"nodeType":"Block","src":"5306:153:7","statements":[{"assignments":[593],"declarations":[{"constant":false,"id":593,"mutability":"mutable","name":"spender","nameLocation":"5324:7:7","nodeType":"VariableDeclaration","scope":611,"src":"5316:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":596,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":594,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"5334:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:7"},{"expression":{"arguments":[{"id":598,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"5372:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":599,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"5378:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":600,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"5387:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":597,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"5356:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"ExpressionStatement","src":"5356:38:7"},{"expression":{"arguments":[{"id":604,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"5414:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":605,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"5420:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":606,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"5424:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":603,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"5404:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":608,"nodeType":"ExpressionStatement","src":"5404:27:7"},{"expression":{"hexValue":"74727565","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":591,"id":610,"nodeType":"Return","src":"5441:11:7"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"4647:551:7","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":612,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:7","nodeType":"FunctionDefinition","overrides":{"id":588,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:7"},"parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"from","nameLocation":"5233:4:7","nodeType":"VariableDeclaration","scope":612,"src":"5225:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"to","nameLocation":"5247:2:7","nodeType":"VariableDeclaration","scope":612,"src":"5239:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"amount","nameLocation":"5259:6:7","nodeType":"VariableDeclaration","scope":612,"src":"5251:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:7"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":612,"src":"5300:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":589,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:7"},"scope":999,"src":"5203:256:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":640,"nodeType":"Block","src":"5948:140:7","statements":[{"assignments":[623],"declarations":[{"constant":false,"id":623,"mutability":"mutable","name":"owner","nameLocation":"5966:5:7","nodeType":"VariableDeclaration","scope":640,"src":"5958:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":626,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":624,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"5974:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:7"},{"expression":{"arguments":[{"id":628,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"6005:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6012:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":631,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"6031:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":632,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6038:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":630,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6021:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":634,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"6049:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":627,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"5996:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"5996:64:7"},{"expression":{"hexValue":"74727565","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":621,"id":639,"nodeType":"Return","src":"6070:11:7"}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"5465:384:7","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":641,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:7","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"spender","nameLocation":"5889:7:7","nodeType":"VariableDeclaration","scope":641,"src":"5881:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:7","nodeType":"VariableDeclaration","scope":641,"src":"5898:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:7"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"5942:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":619,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:7"},"scope":999,"src":"5854:234:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":681,"nodeType":"Block","src":"6674:328:7","statements":[{"assignments":[652],"declarations":[{"constant":false,"id":652,"mutability":"mutable","name":"owner","nameLocation":"6692:5:7","nodeType":"VariableDeclaration","scope":681,"src":"6684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":655,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":653,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6700:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:7"},{"assignments":[657],"declarations":[{"constant":false,"id":657,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:7","nodeType":"VariableDeclaration","scope":681,"src":"6722:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":662,"initialValue":{"arguments":[{"id":659,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"6759:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"6766:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":658,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6749:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":664,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"6792:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":665,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"6812:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":663,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"6784:85:7"},{"id":678,"nodeType":"UncheckedBlock","src":"6879:95:7","statements":[{"expression":{"arguments":[{"id":671,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"6912:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":672,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"6919:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":673,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"6928:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":674,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"6947:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":670,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"6903:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"6903:60:7"}]},{"expression":{"hexValue":"74727565","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":650,"id":680,"nodeType":"Return","src":"6984:11:7"}]},"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"6094:476:7","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":682,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:7","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"spender","nameLocation":"6610:7:7","nodeType":"VariableDeclaration","scope":682,"src":"6602:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:7","nodeType":"VariableDeclaration","scope":682,"src":"6619:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:7"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"6668:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:7"},"scope":999,"src":"6575:427:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":758,"nodeType":"Block","src":"7534:710:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"7552:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:7","typeDescriptions":{}}},"id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":692,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"7544:68:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":703,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7630:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:7","typeDescriptions":{}}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"ExpressionStatement","src":"7622:64:7"},{"expression":{"arguments":[{"id":713,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"7718:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":714,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7724:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":715,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"7728:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":712,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"7697:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"7697:38:7"},{"assignments":[719],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:7","nodeType":"VariableDeclaration","scope":758,"src":"7746:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":723,"initialValue":{"baseExpression":{"id":720,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"7768:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":722,"indexExpression":{"id":721,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"7778:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":725,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"7801:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":726,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"7816:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":730,"nodeType":"ExpressionStatement","src":"7793:72:7"},{"id":745,"nodeType":"UncheckedBlock","src":"7875:273:7","statements":[{"expression":{"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":731,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"7899:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":733,"indexExpression":{"id":732,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"7909:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":734,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"7917:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":735,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"7931:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":738,"nodeType":"ExpressionStatement","src":"7899:38:7"},{"expression":{"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":739,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"8114:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":741,"indexExpression":{"id":740,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8124:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":742,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"8131:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":744,"nodeType":"ExpressionStatement","src":"8114:23:7"}]},{"eventCall":{"arguments":[{"id":747,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"8172:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8178:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"8182:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":746,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"8163:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":751,"nodeType":"EmitStatement","src":"8158:31:7"},{"expression":{"arguments":[{"id":753,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"8220:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":754,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8226:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"8230:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":752,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"8200:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":757,"nodeType":"ExpressionStatement","src":"8200:37:7"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"7008:443:7","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":759,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:7","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"from","nameLocation":"7483:4:7","nodeType":"VariableDeclaration","scope":759,"src":"7475:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"to","nameLocation":"7497:2:7","nodeType":"VariableDeclaration","scope":759,"src":"7489:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"amount","nameLocation":"7509:6:7","nodeType":"VariableDeclaration","scope":759,"src":"7501:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:7"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"7534:0:7"},"scope":999,"src":"7456:788:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":815,"nodeType":"Block","src":"8585:470:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":768,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"8603:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:7","typeDescriptions":{}}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":767,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":776,"nodeType":"ExpressionStatement","src":"8595:65:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:7","typeDescriptions":{}}},"id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":782,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"8704:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"8713:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"8671:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"ExpressionStatement","src":"8671:49:7"},{"expression":{"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":786,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"8731:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":787,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"8747:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"nodeType":"ExpressionStatement","src":"8731:22:7"},{"id":796,"nodeType":"UncheckedBlock","src":"8763:175:7","statements":[{"expression":{"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":790,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"8899:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":792,"indexExpression":{"id":791,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"8909:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":793,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"8921:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":795,"nodeType":"ExpressionStatement","src":"8899:28:7"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:7","typeDescriptions":{}}},"id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":802,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"8973:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"8982:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":797,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"8952:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":805,"nodeType":"EmitStatement","src":"8947:42:7"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:7","typeDescriptions":{}}},"id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"9032:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"9041:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":806,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"9000:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"9000:48:7"}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"8250:265:7","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":816,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:7","nodeType":"FunctionDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"account","nameLocation":"8543:7:7","nodeType":"VariableDeclaration","scope":816,"src":"8535:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"amount","nameLocation":"8560:6:7","nodeType":"VariableDeclaration","scope":816,"src":"8552:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:7"},"returnParameters":{"id":766,"nodeType":"ParameterList","parameters":[],"src":"8585:0:7"},"scope":999,"src":"8520:535:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":887,"nodeType":"Block","src":"9440:594:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":825,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9458:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:7","typeDescriptions":{}}},"id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":833,"nodeType":"ExpressionStatement","src":"9450:67:7"},{"expression":{"arguments":[{"id":835,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9549:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:7","typeDescriptions":{}}},"id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"9570:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":834,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"9528:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":842,"nodeType":"ExpressionStatement","src":"9528:49:7"},{"assignments":[844],"declarations":[{"constant":false,"id":844,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:7","nodeType":"VariableDeclaration","scope":887,"src":"9588:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":843,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":848,"initialValue":{"baseExpression":{"id":845,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"9613:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":847,"indexExpression":{"id":846,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9623:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":850,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"9649:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":851,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"9667:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"ExpressionStatement","src":"9641:71:7"},{"id":868,"nodeType":"UncheckedBlock","src":"9722:194:7","statements":[{"expression":{"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":856,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"9746:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":858,"indexExpression":{"id":857,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9756:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"9767:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":860,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"9784:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":863,"nodeType":"ExpressionStatement","src":"9746:44:7"},{"expression":{"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":864,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"9883:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":865,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"9899:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":867,"nodeType":"ExpressionStatement","src":"9883:22:7"}]},{"eventCall":{"arguments":[{"id":870,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9940:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:7","typeDescriptions":{}}},"id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"9961:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":869,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"9931:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":877,"nodeType":"EmitStatement","src":"9926:42:7"},{"expression":{"arguments":[{"id":879,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9999:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:7","typeDescriptions":{}}},"id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":884,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"10020:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":878,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"9979:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":886,"nodeType":"ExpressionStatement","src":"9979:48:7"}]},"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"9061:309:7","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":888,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:7","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"account","nameLocation":"9398:7:7","nodeType":"VariableDeclaration","scope":888,"src":"9390:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"amount","nameLocation":"9415:6:7","nodeType":"VariableDeclaration","scope":888,"src":"9407:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:7"},"returnParameters":{"id":823,"nodeType":"ParameterList","parameters":[],"src":"9440:0:7"},"scope":999,"src":"9375:659:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":932,"nodeType":"Block","src":"10540:257:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":899,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"10558:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:7","typeDescriptions":{}}},"id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":898,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":907,"nodeType":"ExpressionStatement","src":"10550:68:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":909,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10636:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:7","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":908,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"ExpressionStatement","src":"10628:68:7"},{"expression":{"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":918,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"10707:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":921,"indexExpression":{"id":919,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"10719:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":922,"indexExpression":{"id":920,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10726:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":923,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"10737:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":925,"nodeType":"ExpressionStatement","src":"10707:36:7"},{"eventCall":{"arguments":[{"id":927,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"10767:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":928,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"10774:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"10783:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":926,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"10758:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"EmitStatement","src":"10753:37:7"}]},"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"10040:412:7","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":933,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:7","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"owner","nameLocation":"10483:5:7","nodeType":"VariableDeclaration","scope":933,"src":"10475:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"spender","nameLocation":"10498:7:7","nodeType":"VariableDeclaration","scope":933,"src":"10490:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"amount","nameLocation":"10515:6:7","nodeType":"VariableDeclaration","scope":933,"src":"10507:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:7"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[],"src":"10540:0:7"},"scope":999,"src":"10457:340:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"11168:321:7","statements":[{"assignments":[944],"declarations":[{"constant":false,"id":944,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:7","nodeType":"VariableDeclaration","scope":975,"src":"11178:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":943,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":949,"initialValue":{"arguments":[{"id":946,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"11215:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":947,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"11222:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":945,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"11205:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":950,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"11244:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":951,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:7","memberName":"max","nodeType":"MemberAccess","src":"11264:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":974,"nodeType":"IfStatement","src":"11240:243:7","trueBody":{"id":973,"nodeType":"Block","src":"11283:200:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":958,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"11305:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":959,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"11325:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":963,"nodeType":"ExpressionStatement","src":"11297:68:7"},{"id":972,"nodeType":"UncheckedBlock","src":"11379:94:7","statements":[{"expression":{"arguments":[{"id":965,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"11416:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"11423:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":967,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"11432:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":968,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"11451:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":964,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"11407:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":971,"nodeType":"ExpressionStatement","src":"11407:51:7"}]}]}}]},"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"10803:270:7","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:7","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"owner","nameLocation":"11111:5:7","nodeType":"VariableDeclaration","scope":976,"src":"11103:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"spender","nameLocation":"11126:7:7","nodeType":"VariableDeclaration","scope":976,"src":"11118:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"amount","nameLocation":"11143:6:7","nodeType":"VariableDeclaration","scope":976,"src":"11135:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:7"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"11168:0:7"},"scope":999,"src":"11078:411:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":986,"nodeType":"Block","src":"12162:2:7","statements":[]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"11495:573:7","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":987,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:7","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"from","nameLocation":"12111:4:7","nodeType":"VariableDeclaration","scope":987,"src":"12103:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"to","nameLocation":"12125:2:7","nodeType":"VariableDeclaration","scope":987,"src":"12117:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"amount","nameLocation":"12137:6:7","nodeType":"VariableDeclaration","scope":987,"src":"12129:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:7"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"12162:0:7"},"scope":999,"src":"12073:91:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":997,"nodeType":"Block","src":"12840:2:7","statements":[]},"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"12170:577:7","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":998,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:7","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"from","nameLocation":"12789:4:7","nodeType":"VariableDeclaration","scope":998,"src":"12781:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"to","nameLocation":"12803:2:7","nodeType":"VariableDeclaration","scope":998,"src":"12795:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"amount","nameLocation":"12815:6:7","nodeType":"VariableDeclaration","scope":998,"src":"12807:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:7"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"12840:0:7"},"scope":999,"src":"12752:90:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1000,"src":"1532:11312:7","usedErrors":[],"usedEvents":[1011,1020]}],"src":"105:12740:7"},"id":7},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1077]},"id":1078,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1001,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"131:70:8","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1077,"linearizedBaseContracts":[1077],"name":"IERC20","nameLocation":"212:6:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"225:158:8","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1011,"name":"Transfer","nameLocation":"394:8:8","nodeType":"EventDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:8","nodeType":"VariableDeclaration","scope":1011,"src":"403:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:8","nodeType":"VariableDeclaration","scope":1011,"src":"425:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:8","nodeType":"VariableDeclaration","scope":1011,"src":"445:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:8"},"src":"388:72:8"},{"anonymous":false,"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"466:148:8","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1020,"name":"Approval","nameLocation":"625:8:8","nodeType":"EventDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:8","nodeType":"VariableDeclaration","scope":1020,"src":"634:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:8","nodeType":"VariableDeclaration","scope":1020,"src":"657:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1018,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:8","nodeType":"VariableDeclaration","scope":1020,"src":"682:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:8"},"src":"619:78:8"},{"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"703:66:8","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1026,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:8","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"794:2:8"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1026,"src":"820:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:8"},"scope":1077,"src":"774:55:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"835:72:8","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1034,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:8","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"account","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":1034,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:8"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"971:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:8"},"scope":1077,"src":"912:68:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"986:202:8","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1044,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:8","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"to","nameLocation":"1219:2:8","nodeType":"VariableDeclaration","scope":1044,"src":"1211:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"amount","nameLocation":"1231:6:8","nodeType":"VariableDeclaration","scope":1044,"src":"1223:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:8"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1044,"src":"1257:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1041,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:8"},"scope":1077,"src":"1193:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"1269:264:8","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1054,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:8","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"owner","nameLocation":"1565:5:8","nodeType":"VariableDeclaration","scope":1054,"src":"1557:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"spender","nameLocation":"1580:7:8","nodeType":"VariableDeclaration","scope":1054,"src":"1572:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:8"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"1612:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:8"},"scope":1077,"src":"1538:83:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"1627:642:8","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1064,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:8","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"spender","nameLocation":"2299:7:8","nodeType":"VariableDeclaration","scope":1064,"src":"2291:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"amount","nameLocation":"2316:6:8","nodeType":"VariableDeclaration","scope":1064,"src":"2308:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:8"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"2342:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1061,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:8"},"scope":1077,"src":"2274:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"2354:287:8","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1076,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:8","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"from","nameLocation":"2676:4:8","nodeType":"VariableDeclaration","scope":1076,"src":"2668:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"to","nameLocation":"2690:2:8","nodeType":"VariableDeclaration","scope":1076,"src":"2682:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"amount","nameLocation":"2702:6:8","nodeType":"VariableDeclaration","scope":1076,"src":"2694:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:8"},"returnParameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1076,"src":"2728:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1073,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:8"},"scope":1077,"src":"2646:88:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1078,"src":"202:2534:8","usedErrors":[],"usedEvents":[1011,1020]}],"src":"106:2631:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"Context":[2074],"Counters":[2148],"ECDSA":[3069],"EIP712":[3273],"ERC20":[999],"ERC20Permit":[1249],"IERC20":[1077],"IERC20Metadata":[2008],"IERC20Permit":[2044],"IERC5267":[215],"Math":[4139],"ShortString":[2153],"ShortStrings":[2364],"SignedMath":[5785],"StorageSlot":[2474],"Strings":[2703]},"id":1250,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1079,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"122:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1080,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1250,"sourceUnit":2045,"src":"147:28:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1081,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1250,"sourceUnit":1000,"src":"176:22:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1082,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1250,"sourceUnit":3070,"src":"199:47:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1083,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1250,"sourceUnit":3274,"src":"247:48:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":1084,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1250,"sourceUnit":2149,"src":"296:37:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1086,"name":"ERC20","nameLocations":["886:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"886:5:9"},"id":1087,"nodeType":"InheritanceSpecifier","src":"886:5:9"},{"baseName":{"id":1088,"name":"IERC20Permit","nameLocations":["893:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":2044,"src":"893:12:9"},"id":1089,"nodeType":"InheritanceSpecifier","src":"893:12:9"},{"baseName":{"id":1090,"name":"EIP712","nameLocations":["907:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":3273,"src":"907:6:9"},"id":1091,"nodeType":"InheritanceSpecifier","src":"907:6:9"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"335:517:9","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":true,"id":1249,"linearizedBaseContracts":[1249,3273,215,2044,999,2008,1077,2074],"name":"ERC20Permit","nameLocation":"871:11:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1095,"libraryName":{"id":1092,"name":"Counters","nameLocations":["926:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":2148,"src":"926:8:9"},"nodeType":"UsingForDirective","src":"920:36:9","typeName":{"id":1094,"nodeType":"UserDefinedTypeName","pathNode":{"id":1093,"name":"Counters.Counter","nameLocations":["939:8:9","948:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"939:16:9"},"referencedDeclaration":2080,"src":"939:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":1100,"mutability":"mutable","name":"_nonces","nameLocation":"1007:7:9","nodeType":"VariableDeclaration","scope":1249,"src":"962:52:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2080_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":1099,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"962:36:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2080_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1098,"nodeType":"UserDefinedTypeName","pathNode":{"id":1097,"name":"Counters.Counter","nameLocations":["981:8:9","990:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"981:16:9"},"referencedDeclaration":2080,"src":"981:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":1105,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1098:16:9","nodeType":"VariableDeclaration","scope":1249,"src":"1073:147:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1073:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1135:84:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1102,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1125:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:95:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"1226:254:9","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1108,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1553:32:9","nodeType":"VariableDeclaration","scope":1249,"src":"1537:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1537:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1118,"nodeType":"Block","src":"1867:2:9","statements":[]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"1592:220:9","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1119,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1114,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"1856:4:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1862:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1116,"kind":"baseConstructorSpecifier","modifierName":{"id":1113,"name":"EIP712","nameLocations":["1849:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":3273,"src":"1849:6:9"},"nodeType":"ModifierInvocation","src":"1849:17:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"name","nameLocation":"1843:4:9","nodeType":"VariableDeclaration","scope":1119,"src":"1829:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1110,"name":"string","nodeType":"ElementaryTypeName","src":"1829:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1828:20:9"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"1867:0:9"},"scope":1249,"src":"1817:52:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2029],"body":{"id":1191,"nodeType":"Block","src":"2121:428:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1139,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2139:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2145:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"2139:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1141,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2158:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2139:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2168:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1138,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2131:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2131:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"2131:69:9"},{"assignments":[1147],"declarations":[{"constant":false,"id":1147,"mutability":"mutable","name":"structHash","nameLocation":"2219:10:9","nodeType":"VariableDeclaration","scope":1191,"src":"2211:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2211:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1161,"initialValue":{"arguments":[{"arguments":[{"id":1151,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"2253:16:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1152,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"2271:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2278:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"2287:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1156,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"2304:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1155,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"2294:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1158,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2312:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1149,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2242:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2246:6:9","memberName":"encode","nodeType":"MemberAccess","src":"2242:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2242:79:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1148,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2232:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2232:90:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2211:111:9"},{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"hash","nameLocation":"2341:4:9","nodeType":"VariableDeclaration","scope":1191,"src":"2333:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2333:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1167,"initialValue":{"arguments":[{"id":1165,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"2365:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1164,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"2348:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2348:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2333:43:9"},{"assignments":[1169],"declarations":[{"constant":false,"id":1169,"mutability":"mutable","name":"signer","nameLocation":"2395:6:9","nodeType":"VariableDeclaration","scope":1191,"src":"2387:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1177,"initialValue":{"arguments":[{"id":1172,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"2418:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1173,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2424:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1174,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"2427:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1175,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"2430:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1170,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"2404:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3069_$","typeString":"type(library ECDSA)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2410:7:9","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"2404:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2404:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2387:45:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1179,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2450:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1180,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"2460:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2450:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2467:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2442:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2442:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1184,"nodeType":"ExpressionStatement","src":"2442:58:9"},{"expression":{"arguments":[{"id":1186,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"2520:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1187,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2527:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"2536:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1185,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"2511:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2511:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1190,"nodeType":"ExpressionStatement","src":"2511:31:9"}]},"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"1875:43:9","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1192,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1932:6:9","nodeType":"FunctionDefinition","overrides":{"id":1136,"nodeType":"OverrideSpecifier","overrides":[],"src":"2112:8:9"},"parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"owner","nameLocation":"1956:5:9","nodeType":"VariableDeclaration","scope":1192,"src":"1948:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"spender","nameLocation":"1979:7:9","nodeType":"VariableDeclaration","scope":1192,"src":"1971:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"value","nameLocation":"2004:5:9","nodeType":"VariableDeclaration","scope":1192,"src":"1996:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1996:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"deadline","nameLocation":"2027:8:9","nodeType":"VariableDeclaration","scope":1192,"src":"2019:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"v","nameLocation":"2051:1:9","nodeType":"VariableDeclaration","scope":1192,"src":"2045:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1129,"name":"uint8","nodeType":"ElementaryTypeName","src":"2045:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"r","nameLocation":"2070:1:9","nodeType":"VariableDeclaration","scope":1192,"src":"2062:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2062:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"s","nameLocation":"2089:1:9","nodeType":"VariableDeclaration","scope":1192,"src":"2081:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2081:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1938:158:9"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"2121:0:9"},"scope":1249,"src":"1923:626:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2037],"body":{"id":1207,"nodeType":"Block","src":"2681:48:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1201,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"2698:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2080_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1203,"indexExpression":{"id":1202,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"2706:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2698:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage","typeString":"struct Counters.Counter storage ref"}},"id":1204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2713:7:9","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2092,"src":"2698:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2080_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2080_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1200,"id":1206,"nodeType":"Return","src":"2691:31:9"}]},"documentation":{"id":1193,"nodeType":"StructuredDocumentation","src":"2555:43:9","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1208,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2612:6:9","nodeType":"FunctionDefinition","overrides":{"id":1197,"nodeType":"OverrideSpecifier","overrides":[],"src":"2654:8:9"},"parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"owner","nameLocation":"2627:5:9","nodeType":"VariableDeclaration","scope":1208,"src":"2619:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"2619:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2618:15:9"},"returnParameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1208,"src":"2672:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"2672:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2671:9:9"},"scope":1249,"src":"2603:126:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2043],"body":{"id":1218,"nodeType":"Block","src":"2905:44:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1215,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"2922:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1214,"id":1217,"nodeType":"Return","src":"2915:27:9"}]},"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"2735:43:9","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1219,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2845:16:9","nodeType":"FunctionDefinition","overrides":{"id":1211,"nodeType":"OverrideSpecifier","overrides":[],"src":"2878:8:9"},"parameters":{"id":1210,"nodeType":"ParameterList","parameters":[],"src":"2861:2:9"},"returnParameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1219,"src":"2896:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2896:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2895:9:9"},"scope":1249,"src":"2836:113:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1247,"nodeType":"Block","src":"3157:126:9","statements":[{"assignments":[1231],"declarations":[{"constant":false,"id":1231,"mutability":"mutable","name":"nonce","nameLocation":"3192:5:9","nodeType":"VariableDeclaration","scope":1247,"src":"3167:30:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1230,"nodeType":"UserDefinedTypeName","pathNode":{"id":1229,"name":"Counters.Counter","nameLocations":["3167:8:9","3176:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"3167:16:9"},"referencedDeclaration":2080,"src":"3167:16:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1235,"initialValue":{"baseExpression":{"id":1232,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"3200:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2080_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1234,"indexExpression":{"id":1233,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"3208:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3200:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3167:47:9"},{"expression":{"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1236,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"3224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1237,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3234:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3240:7:9","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2092,"src":"3234:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2080_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2080_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3234:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3224:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1241,"nodeType":"ExpressionStatement","src":"3224:25:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1242,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3259:5:9","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3265:9:9","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2106,"src":"3259:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2080_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2080_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3259:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1246,"nodeType":"ExpressionStatement","src":"3259:17:9"}]},"documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"2955:120:9","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3089:9:9","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"owner","nameLocation":"3107:5:9","nodeType":"VariableDeclaration","scope":1248,"src":"3099:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"3099:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3098:15:9"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"current","nameLocation":"3148:7:9","nodeType":"VariableDeclaration","scope":1248,"src":"3140:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3140:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3139:17:9"},"scope":1249,"src":"3080:203:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1250,"src":"853:2432:9","usedErrors":[2161,2163],"usedEvents":[195,1011,1020]}],"src":"122:3164:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Context":[2074],"Counters":[2148],"ECDSA":[3069],"EIP712":[3273],"ERC20":[999],"ERC20Permit":[1249],"ERC20Votes":[1983],"IERC20":[1077],"IERC20Metadata":[2008],"IERC20Permit":[2044],"IERC5267":[215],"IERC5805":[224],"IERC6372":[239],"IVotes":[190],"Math":[4139],"SafeCast":[5680],"ShortString":[2153],"ShortStrings":[2364],"SignedMath":[5785],"StorageSlot":[2474],"Strings":[2703]},"id":1984,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1251,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"./ERC20Permit.sol","id":1252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1984,"sourceUnit":1250,"src":"146:27:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../../interfaces/IERC5805.sol","id":1253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1984,"sourceUnit":225,"src":"174:42:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":1254,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1984,"sourceUnit":4140,"src":"217:38:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../../utils/math/SafeCast.sol","id":1255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1984,"sourceUnit":5681,"src":"256:42:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1984,"sourceUnit":3070,"src":"299:47:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1258,"name":"ERC20Permit","nameLocations":["1275:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1249,"src":"1275:11:10"},"id":1259,"nodeType":"InheritanceSpecifier","src":"1275:11:10"},{"baseName":{"id":1260,"name":"IERC5805","nameLocations":["1288:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":224,"src":"1288:8:10"},"id":1261,"nodeType":"InheritanceSpecifier","src":"1288:8:10"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":1257,"nodeType":"StructuredDocumentation","src":"348:894:10","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":true,"id":1983,"internalFunctionIDs":{"1953":1,"1967":2},"linearizedBaseContracts":[1983,224,190,239,1249,3273,215,2044,999,2008,1077,2074],"name":"ERC20Votes","nameLocation":"1261:10:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Votes.Checkpoint","id":1266,"members":[{"constant":false,"id":1263,"mutability":"mutable","name":"fromBlock","nameLocation":"1338:9:10","nodeType":"VariableDeclaration","scope":1266,"src":"1331:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1262,"name":"uint32","nodeType":"ElementaryTypeName","src":"1331:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"votes","nameLocation":"1365:5:10","nodeType":"VariableDeclaration","scope":1266,"src":"1357:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1264,"name":"uint224","nodeType":"ElementaryTypeName","src":"1357:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1310:10:10","nodeType":"StructDefinition","scope":1983,"src":"1303:74:10","visibility":"public"},{"constant":true,"id":1271,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1408:20:10","nodeType":"VariableDeclaration","scope":1983,"src":"1383:127:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1383:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1449:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":1268,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1439:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1439:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1275,"mutability":"mutable","name":"_delegates","nameLocation":"1553:10:10","nodeType":"VariableDeclaration","scope":1983,"src":"1517:46:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1274,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1517:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1281,"mutability":"mutable","name":"_checkpoints","nameLocation":"1610:12:10","nodeType":"VariableDeclaration","scope":1983,"src":"1569:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"typeName":{"id":1280,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"1577:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1569:32:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1278,"nodeType":"UserDefinedTypeName","pathNode":{"id":1277,"name":"Checkpoint","nameLocations":["1588:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1266,"src":"1588:10:10"},"referencedDeclaration":1266,"src":"1588:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1279,"nodeType":"ArrayTypeName","src":"1588:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":1285,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1649:23:10","nodeType":"VariableDeclaration","scope":1983,"src":"1628:44:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1283,"nodeType":"UserDefinedTypeName","pathNode":{"id":1282,"name":"Checkpoint","nameLocations":["1628:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1266,"src":"1628:10:10"},"referencedDeclaration":1266,"src":"1628:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1284,"nodeType":"ArrayTypeName","src":"1628:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"private"},{"baseFunctions":[232],"body":{"id":1298,"nodeType":"Block","src":"1880:55:10","statements":[{"expression":{"arguments":[{"expression":{"id":1294,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1915:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1921:6:10","memberName":"number","nodeType":"MemberAccess","src":"1915:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1292,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"1897:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5680_$","typeString":"type(library SafeCast)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1906:8:10","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":4792,"src":"1897:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":1291,"id":1297,"nodeType":"Return","src":"1890:38:10"}]},"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"1679:133:10","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":1299,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"1826:5:10","nodeType":"FunctionDefinition","overrides":{"id":1288,"nodeType":"OverrideSpecifier","overrides":[],"src":"1854:8:10"},"parameters":{"id":1287,"nodeType":"ParameterList","parameters":[],"src":"1831:2:10"},"returnParameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1299,"src":"1872:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1289,"name":"uint48","nodeType":"ElementaryTypeName","src":"1872:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1871:8:10"},"scope":1983,"src":"1817:118:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[238],"body":{"id":1317,"nodeType":"Block","src":"2122:179:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1307,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"2189:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2189:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1309,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2200:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:6:10","memberName":"number","nodeType":"MemberAccess","src":"2200:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2214:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""},"value":"ERC20Votes: broken clock mode"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""}],"id":1306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2181:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1314,"nodeType":"ExpressionStatement","src":"2181:65:10"},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2263:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":1305,"id":1316,"nodeType":"Return","src":"2256:38:10"}]},"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"1941:48:10","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"2056:10:10","nodeType":"FunctionDefinition","overrides":{"id":1302,"nodeType":"OverrideSpecifier","overrides":[],"src":"2089:8:10"},"parameters":{"id":1301,"nodeType":"ParameterList","parameters":[],"src":"2066:2:10"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1318,"src":"2107:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1303,"name":"string","nodeType":"ElementaryTypeName","src":"2107:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2106:15:10"},"scope":1983,"src":"2047:254:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1335,"nodeType":"Block","src":"2476:50:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1329,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"2493:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1331,"indexExpression":{"id":1330,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2506:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1333,"indexExpression":{"id":1332,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"2515:3:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:26:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"functionReturnParameters":1328,"id":1334,"nodeType":"Return","src":"2486:33:10"}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"2307:66:10","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"2387:11:10","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"account","nameLocation":"2407:7:10","nodeType":"VariableDeclaration","scope":1336,"src":"2399:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"pos","nameLocation":"2423:3:10","nodeType":"VariableDeclaration","scope":1336,"src":"2416:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1322,"name":"uint32","nodeType":"ElementaryTypeName","src":"2416:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2398:29:10"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1336,"src":"2457:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1326,"nodeType":"UserDefinedTypeName","pathNode":{"id":1325,"name":"Checkpoint","nameLocations":["2457:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1266,"src":"2457:10:10"},"referencedDeclaration":1266,"src":"2457:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"2456:19:10"},"scope":1983,"src":"2378:148:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1352,"nodeType":"Block","src":"2679:71:10","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1346,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"2714:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1348,"indexExpression":{"id":1347,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"2727:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2714:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2736:6:10","memberName":"length","nodeType":"MemberAccess","src":"2714:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1344,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"2696:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5680_$","typeString":"type(library SafeCast)"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2705:8:10","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4842,"src":"2696:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1343,"id":1351,"nodeType":"Return","src":"2689:54:10"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"2532:64:10","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"2610:14:10","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"account","nameLocation":"2633:7:10","nodeType":"VariableDeclaration","scope":1353,"src":"2625:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"2625:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2624:17:10"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1353,"src":"2671:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1341,"name":"uint32","nodeType":"ElementaryTypeName","src":"2671:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2670:8:10"},"scope":1983,"src":"2601:149:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[167],"body":{"id":1366,"nodeType":"Block","src":"2921:43:10","statements":[{"expression":{"baseExpression":{"id":1362,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2938:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1364,"indexExpression":{"id":1363,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"2949:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2938:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1361,"id":1365,"nodeType":"Return","src":"2931:26:10"}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"2756:77:10","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":1367,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2847:9:10","nodeType":"FunctionDefinition","overrides":{"id":1358,"nodeType":"OverrideSpecifier","overrides":[],"src":"2894:8:10"},"parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"account","nameLocation":"2865:7:10","nodeType":"VariableDeclaration","scope":1367,"src":"2857:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"2857:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2856:17:10"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1367,"src":"2912:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"2912:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:9:10"},"scope":1983,"src":"2838:126:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[141],"body":{"id":1398,"nodeType":"Block","src":"3125:161:10","statements":[{"assignments":[1377],"declarations":[{"constant":false,"id":1377,"mutability":"mutable","name":"pos","nameLocation":"3143:3:10","nodeType":"VariableDeclaration","scope":1398,"src":"3135:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1382,"initialValue":{"expression":{"baseExpression":{"id":1378,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"3149:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1380,"indexExpression":{"id":1379,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"3162:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3149:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3171:6:10","memberName":"length","nodeType":"MemberAccess","src":"3149:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3135:42:10"},{"id":1397,"nodeType":"UncheckedBlock","src":"3187:93:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"3218:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3218:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1387,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"3233:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1389,"indexExpression":{"id":1388,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"3246:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1393,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"3255:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3261:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3255:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:30:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3264:5:10","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"3233:36:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3218:51:10","trueExpression":{"hexValue":"30","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3229:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1375,"id":1396,"nodeType":"Return","src":"3211:58:10"}]}]},"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"2970:68:10","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1399,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3052:8:10","nodeType":"FunctionDefinition","overrides":{"id":1372,"nodeType":"OverrideSpecifier","overrides":[],"src":"3098:8:10"},"parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"account","nameLocation":"3069:7:10","nodeType":"VariableDeclaration","scope":1399,"src":"3061:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"3061:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3060:17:10"},"returnParameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1399,"src":"3116:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"3116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3115:9:10"},"scope":1983,"src":"3043:243:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[151],"body":{"id":1425,"nodeType":"Block","src":"3571:143:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1411,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"3589:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1412,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"3601:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3589:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1410,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3581:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1417,"nodeType":"ExpressionStatement","src":"3581:57:10"},{"expression":{"arguments":[{"baseExpression":{"id":1419,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"3674:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1421,"indexExpression":{"id":1420,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"3687:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3674:21:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1422,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"3697:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1418,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"3655:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3655:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1409,"id":1424,"nodeType":"Return","src":"3648:59:10"}]},"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"3292:169:10","text":" @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"3a46b1a8","id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3475:12:10","nodeType":"FunctionDefinition","overrides":{"id":1406,"nodeType":"OverrideSpecifier","overrides":[],"src":"3544:8:10"},"parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"account","nameLocation":"3496:7:10","nodeType":"VariableDeclaration","scope":1426,"src":"3488:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"timepoint","nameLocation":"3513:9:10","nodeType":"VariableDeclaration","scope":1426,"src":"3505:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"3505:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3487:36:10"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"3562:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"3562:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3561:9:10"},"scope":1983,"src":"3466:248:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[159],"body":{"id":1448,"nodeType":"Block","src":"4070:145:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"4088:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1437,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"4100:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4100:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4088:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4109:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1435,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4080:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4080:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1442,"nodeType":"ExpressionStatement","src":"4080:57:10"},{"expression":{"arguments":[{"id":1444,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"4173:23:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1445,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"4198:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1443,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"4154:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1434,"id":1447,"nodeType":"Return","src":"4147:61:10"}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"3720:251:10","text":" @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n It is NOT the sum of all the delegated votes!\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"8e539e8c","id":1449,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3985:18:10","nodeType":"FunctionDefinition","overrides":{"id":1431,"nodeType":"OverrideSpecifier","overrides":[],"src":"4043:8:10"},"parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"timepoint","nameLocation":"4012:9:10","nodeType":"VariableDeclaration","scope":1449,"src":"4004:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4003:19:10"},"returnParameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1449,"src":"4061:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"4061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4060:9:10"},"scope":1983,"src":"3976:239:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1555,"nodeType":"Block","src":"4405:1789:10","statements":[{"assignments":[1462],"declarations":[{"constant":false,"id":1462,"mutability":"mutable","name":"length","nameLocation":"5501:6:10","nodeType":"VariableDeclaration","scope":1555,"src":"5493:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1465,"initialValue":{"expression":{"id":1463,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"5510:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5516:6:10","memberName":"length","nodeType":"MemberAccess","src":"5510:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5493:29:10"},{"assignments":[1467],"declarations":[{"constant":false,"id":1467,"mutability":"mutable","name":"low","nameLocation":"5541:3:10","nodeType":"VariableDeclaration","scope":1555,"src":"5533:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"5533:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1469,"initialValue":{"hexValue":"30","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5547:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5533:15:10"},{"assignments":[1471],"declarations":[{"constant":false,"id":1471,"mutability":"mutable","name":"high","nameLocation":"5566:4:10","nodeType":"VariableDeclaration","scope":1555,"src":"5558:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"5558:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1473,"initialValue":{"id":1472,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"5573:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5558:21:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1474,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"5594:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5603:1:10","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"5594:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1507,"nodeType":"IfStatement","src":"5590:242:10","trueBody":{"id":1506,"nodeType":"Block","src":"5606:226:10","statements":[{"assignments":[1478],"declarations":[{"constant":false,"id":1478,"mutability":"mutable","name":"mid","nameLocation":"5628:3:10","nodeType":"VariableDeclaration","scope":1506,"src":"5620:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5620:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1485,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1479,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"5634:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1482,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"5653:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1480,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"5643:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4139_$","typeString":"type(library Math)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5648:4:10","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3643,"src":"5643:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5634:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5620:40:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1487,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"5692:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1488,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"5699:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1486,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5678:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1266_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5678:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5704:9:10","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"5678:35:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1491,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5716:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5678:47:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1504,"nodeType":"Block","src":"5776:46:10","statements":[{"expression":{"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1498,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"5794:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"5800:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5806:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5800:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5794:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1503,"nodeType":"ExpressionStatement","src":"5794:13:10"}]},"id":1505,"nodeType":"IfStatement","src":"5674:148:10","trueBody":{"id":1497,"nodeType":"Block","src":"5727:43:10","statements":[{"expression":{"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1493,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5745:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1494,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"5752:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5745:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1496,"nodeType":"ExpressionStatement","src":"5745:10:10"}]}}]}},{"body":{"id":1539,"nodeType":"Block","src":"5861:223:10","statements":[{"assignments":[1512],"declarations":[{"constant":false,"id":1512,"mutability":"mutable","name":"mid","nameLocation":"5883:3:10","nodeType":"VariableDeclaration","scope":1539,"src":"5875:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1511,"name":"uint256","nodeType":"ElementaryTypeName","src":"5875:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1518,"initialValue":{"arguments":[{"id":1515,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"5902:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1516,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5907:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1513,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"5889:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4139_$","typeString":"type(library Math)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5894:7:10","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3339,"src":"5889:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5875:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1520,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"5944:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1521,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"5951:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1519,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"5930:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1266_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5930:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5956:9:10","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"5930:35:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1524,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5968:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5930:47:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1537,"nodeType":"Block","src":"6028:46:10","statements":[{"expression":{"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1531,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"6046:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1532,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"6052:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6058:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6052:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6046:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1536,"nodeType":"ExpressionStatement","src":"6046:13:10"}]},"id":1538,"nodeType":"IfStatement","src":"5926:148:10","trueBody":{"id":1530,"nodeType":"Block","src":"5979:43:10","statements":[{"expression":{"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1526,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5997:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1527,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"6004:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5997:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"nodeType":"ExpressionStatement","src":"5997:10:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1508,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"5849:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1509,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5855:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5849:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1540,"nodeType":"WhileStatement","src":"5842:242:10"},{"id":1554,"nodeType":"UncheckedBlock","src":"6094:94:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1541,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"6125:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6133:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6125:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":1546,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"6155:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1547,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"6162:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6169:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6162:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1545,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6141:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1266_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6141:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6172:5:10","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"6141:36:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6125:52:10","trueExpression":{"hexValue":"30","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6137:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1460,"id":1553,"nodeType":"Return","src":"6118:59:10"}]}]},"documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"4221:73:10","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":1556,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"4308:18:10","nodeType":"FunctionDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"ckpts","nameLocation":"4348:5:10","nodeType":"VariableDeclaration","scope":1556,"src":"4327:26:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1452,"nodeType":"UserDefinedTypeName","pathNode":{"id":1451,"name":"Checkpoint","nameLocations":["4327:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1266,"src":"4327:10:10"},"referencedDeclaration":1266,"src":"4327:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1453,"nodeType":"ArrayTypeName","src":"4327:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"timepoint","nameLocation":"4363:9:10","nodeType":"VariableDeclaration","scope":1556,"src":"4355:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4355:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4326:47:10"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1556,"src":"4396:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"4396:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4395:9:10"},"scope":1983,"src":"4299:1895:10","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[173],"body":{"id":1569,"nodeType":"Block","src":"6336:51:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1564,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"6356:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6356:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1566,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"6370:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1563,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"6346:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"6346:34:10"}]},"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"6200:70:10","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":1570,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"6284:8:10","nodeType":"FunctionDefinition","overrides":{"id":1561,"nodeType":"OverrideSpecifier","overrides":[],"src":"6327:8:10"},"parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"delegatee","nameLocation":"6301:9:10","nodeType":"VariableDeclaration","scope":1570,"src":"6293:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1558,"name":"address","nodeType":"ElementaryTypeName","src":"6293:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6292:19:10"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"6336:0:10"},"scope":1983,"src":"6275:112:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[189],"body":{"id":1629,"nodeType":"Block","src":"6646:392:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1588,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6664:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6670:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"6664:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1590,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"6683:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6664:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6691:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":1587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6656:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1594,"nodeType":"ExpressionStatement","src":"6656:67:10"},{"assignments":[1596],"declarations":[{"constant":false,"id":1596,"mutability":"mutable","name":"signer","nameLocation":"6741:6:10","nodeType":"VariableDeclaration","scope":1629,"src":"6733:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"6733:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1614,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1603,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"6815:20:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1604,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"6837:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1605,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"6848:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1606,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"6855:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1601,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6804:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6808:6:10","memberName":"encode","nodeType":"MemberAccess","src":"6804:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6804:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1600,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6794:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6794:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1599,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"6777:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6777:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1610,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"6878:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1611,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"6893:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1612,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"6908:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1597,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"6750:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3069_$","typeString":"type(library ECDSA)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6756:7:10","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3004,"src":"6750:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:169:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6733:186:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1616,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"6937:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1618,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"6956:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1617,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"6946:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6946:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6937:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6965:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":1615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6929:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1623,"nodeType":"ExpressionStatement","src":"6929:64:10"},{"expression":{"arguments":[{"id":1625,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"7013:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1626,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"7021:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1624,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"7003:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1628,"nodeType":"ExpressionStatement","src":"7003:28:10"}]},"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"6393:66:10","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"6473:13:10","nodeType":"FunctionDefinition","overrides":{"id":1585,"nodeType":"OverrideSpecifier","overrides":[],"src":"6637:8:10"},"parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"delegatee","nameLocation":"6504:9:10","nodeType":"VariableDeclaration","scope":1630,"src":"6496:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1572,"name":"address","nodeType":"ElementaryTypeName","src":"6496:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"nonce","nameLocation":"6531:5:10","nodeType":"VariableDeclaration","scope":1630,"src":"6523:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"6523:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1577,"mutability":"mutable","name":"expiry","nameLocation":"6554:6:10","nodeType":"VariableDeclaration","scope":1630,"src":"6546:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1576,"name":"uint256","nodeType":"ElementaryTypeName","src":"6546:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"v","nameLocation":"6576:1:10","nodeType":"VariableDeclaration","scope":1630,"src":"6570:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1578,"name":"uint8","nodeType":"ElementaryTypeName","src":"6570:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1581,"mutability":"mutable","name":"r","nameLocation":"6595:1:10","nodeType":"VariableDeclaration","scope":1630,"src":"6587:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6587:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"s","nameLocation":"6614:1:10","nodeType":"VariableDeclaration","scope":1630,"src":"6606:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6606:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6486:135:10"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"6646:0:10"},"scope":1983,"src":"6464:574:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1642,"nodeType":"Block","src":"7202:41:10","statements":[{"expression":{"expression":{"arguments":[{"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7224:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1637,"name":"uint224","nodeType":"ElementaryTypeName","src":"7224:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7219:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7219:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7233:3:10","memberName":"max","nodeType":"MemberAccess","src":"7219:17:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1635,"id":1641,"nodeType":"Return","src":"7212:24:10"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"7044:91:10","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":1643,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"7149:10:10","nodeType":"FunctionDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[],"src":"7159:2:10"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1643,"src":"7193:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1633,"name":"uint224","nodeType":"ElementaryTypeName","src":"7193:7:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"7192:9:10"},"scope":1983,"src":"7140:103:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[816],"body":{"id":1674,"nodeType":"Block","src":"7406:211:10","statements":[{"expression":{"arguments":[{"id":1655,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"7428:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1656,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"7437:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1652,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7416:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1983_$","typeString":"type(contract super ERC20Votes)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7422:5:10","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":816,"src":"7416:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7416:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1658,"nodeType":"ExpressionStatement","src":"7416:28:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1660,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"7462:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7462:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1662,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"7479:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7479:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"7462:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7493:50:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":1659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7454:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7454:90:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1667,"nodeType":"ExpressionStatement","src":"7454:90:10"},{"expression":{"arguments":[{"id":1669,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"7572:23:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1670,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"7597:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1671,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"7603:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1668,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"7555:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7555:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1673,"nodeType":"ExpressionStatement","src":"7555:55:10"}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"7249:78:10","text":" @dev Snapshots the totalSupply after it has been increased."},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7341:5:10","nodeType":"FunctionDefinition","overrides":{"id":1650,"nodeType":"OverrideSpecifier","overrides":[],"src":"7397:8:10"},"parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"account","nameLocation":"7355:7:10","nodeType":"VariableDeclaration","scope":1675,"src":"7347:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"7347:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"amount","nameLocation":"7372:6:10","nodeType":"VariableDeclaration","scope":1675,"src":"7364:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"7364:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7346:33:10"},"returnParameters":{"id":1651,"nodeType":"ParameterList","parameters":[],"src":"7406:0:10"},"scope":1983,"src":"7332:285:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[888],"body":{"id":1697,"nodeType":"Block","src":"7780:116:10","statements":[{"expression":{"arguments":[{"id":1687,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"7802:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"7811:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1684,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7790:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1983_$","typeString":"type(contract super ERC20Votes)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7796:5:10","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":888,"src":"7790:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1690,"nodeType":"ExpressionStatement","src":"7790:28:10"},{"expression":{"arguments":[{"id":1692,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"7846:23:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1693,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"7871:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1694,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"7882:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1691,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"7829:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7829:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1696,"nodeType":"ExpressionStatement","src":"7829:60:10"}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"7623:78:10","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":1698,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7715:5:10","nodeType":"FunctionDefinition","overrides":{"id":1682,"nodeType":"OverrideSpecifier","overrides":[],"src":"7771:8:10"},"parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"account","nameLocation":"7729:7:10","nodeType":"VariableDeclaration","scope":1698,"src":"7721:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"7721:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"amount","nameLocation":"7746:6:10","nodeType":"VariableDeclaration","scope":1698,"src":"7738:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"7738:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7720:33:10"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[],"src":"7780:0:10"},"scope":1983,"src":"7706:190:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[998],"body":{"id":1727,"nodeType":"Block","src":"8133:127:10","statements":[{"expression":{"arguments":[{"id":1712,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"8169:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1713,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"8175:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1714,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"8179:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1709,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8143:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1983_$","typeString":"type(contract super ERC20Votes)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8149:19:10","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":998,"src":"8143:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1716,"nodeType":"ExpressionStatement","src":"8143:43:10"},{"expression":{"arguments":[{"arguments":[{"id":1719,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"8224:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1718,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"8214:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8214:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1722,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"8241:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1721,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"8231:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8231:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1724,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"8246:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1717,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"8197:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8197:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1726,"nodeType":"ExpressionStatement","src":"8197:56:10"}]},"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"7902:129:10","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"8045:19:10","nodeType":"FunctionDefinition","overrides":{"id":1707,"nodeType":"OverrideSpecifier","overrides":[],"src":"8124:8:10"},"parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"from","nameLocation":"8073:4:10","nodeType":"VariableDeclaration","scope":1728,"src":"8065:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"to","nameLocation":"8087:2:10","nodeType":"VariableDeclaration","scope":1728,"src":"8079:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"8079:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"amount","nameLocation":"8099:6:10","nodeType":"VariableDeclaration","scope":1728,"src":"8091:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"8091:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:42:10"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[],"src":"8133:0:10"},"scope":1983,"src":"8036:224:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1766,"nodeType":"Block","src":"8505:306:10","statements":[{"assignments":[1737],"declarations":[{"constant":false,"id":1737,"mutability":"mutable","name":"currentDelegate","nameLocation":"8523:15:10","nodeType":"VariableDeclaration","scope":1766,"src":"8515:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"8515:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1741,"initialValue":{"arguments":[{"id":1739,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"8551:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1738,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"8541:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8541:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8515:46:10"},{"assignments":[1743],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"delegatorBalance","nameLocation":"8579:16:10","nodeType":"VariableDeclaration","scope":1766,"src":"8571:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"8571:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1747,"initialValue":{"arguments":[{"id":1745,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"8608:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1744,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"8598:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8598:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8571:47:10"},{"expression":{"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1748,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"8628:10:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1750,"indexExpression":{"id":1749,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"8639:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8628:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1751,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"8652:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8628:33:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1753,"nodeType":"ExpressionStatement","src":"8628:33:10"},{"eventCall":{"arguments":[{"id":1755,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"8693:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1756,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"8704:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1757,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"8721:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1754,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"8677:15:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8677:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1759,"nodeType":"EmitStatement","src":"8672:59:10"},{"expression":{"arguments":[{"id":1761,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"8759:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1762,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"8776:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1763,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"8787:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1760,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"8742:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8742:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"8742:62:10"}]},"documentation":{"id":1729,"nodeType":"StructuredDocumentation","src":"8266:160:10","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"8440:9:10","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"delegator","nameLocation":"8458:9:10","nodeType":"VariableDeclaration","scope":1767,"src":"8450:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1730,"name":"address","nodeType":"ElementaryTypeName","src":"8450:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1733,"mutability":"mutable","name":"delegatee","nameLocation":"8477:9:10","nodeType":"VariableDeclaration","scope":1767,"src":"8469:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"8469:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8449:38:10"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[],"src":"8505:0:10"},"scope":1983,"src":"8431:380:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1837,"nodeType":"Block","src":"8893:521:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1776,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"8907:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1777,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"8914:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8907:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1779,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"8921:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8930:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8921:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8907:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1836,"nodeType":"IfStatement","src":"8903:505:10","trueBody":{"id":1835,"nodeType":"Block","src":"8933:475:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1783,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"8951:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8966:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8958:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1784,"name":"address","nodeType":"ElementaryTypeName","src":"8958:7:10","typeDescriptions":{}}},"id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8951:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1808,"nodeType":"IfStatement","src":"8947:221:10","trueBody":{"id":1807,"nodeType":"Block","src":"8970:198:10","statements":[{"assignments":[1790,1792],"declarations":[{"constant":false,"id":1790,"mutability":"mutable","name":"oldWeight","nameLocation":"8997:9:10","nodeType":"VariableDeclaration","scope":1807,"src":"8989:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"8989:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"newWeight","nameLocation":"9016:9:10","nodeType":"VariableDeclaration","scope":1807,"src":"9008:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"9008:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1800,"initialValue":{"arguments":[{"baseExpression":{"id":1794,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"9046:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1796,"indexExpression":{"id":1795,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"9059:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9046:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1797,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"9065:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1798,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"9076:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1793,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"9029:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8988:95:10"},{"eventCall":{"arguments":[{"id":1802,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"9127:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1803,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"9132:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1804,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"9143:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1801,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"9106:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9106:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"EmitStatement","src":"9101:52:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1809,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"9186:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9193:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"9193:7:10","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9193:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9186:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1834,"nodeType":"IfStatement","src":"9182:216:10","trueBody":{"id":1833,"nodeType":"Block","src":"9205:193:10","statements":[{"assignments":[1816,1818],"declarations":[{"constant":false,"id":1816,"mutability":"mutable","name":"oldWeight","nameLocation":"9232:9:10","nodeType":"VariableDeclaration","scope":1833,"src":"9224:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"9224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"newWeight","nameLocation":"9251:9:10","nodeType":"VariableDeclaration","scope":1833,"src":"9243:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"9243:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1826,"initialValue":{"arguments":[{"baseExpression":{"id":1820,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"9281:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1822,"indexExpression":{"id":1821,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"9294:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9281:17:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1823,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"9300:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1824,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"9306:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1819,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"9264:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9223:90:10"},{"eventCall":{"arguments":[{"id":1828,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"9357:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1829,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"9362:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1830,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"9373:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1827,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"9336:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9336:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1832,"nodeType":"EmitStatement","src":"9331:52:10"}]}}]}}]},"id":1838,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"8826:16:10","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"src","nameLocation":"8851:3:10","nodeType":"VariableDeclaration","scope":1838,"src":"8843:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"8843:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"dst","nameLocation":"8864:3:10","nodeType":"VariableDeclaration","scope":1838,"src":"8856:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"8856:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"amount","nameLocation":"8877:6:10","nodeType":"VariableDeclaration","scope":1838,"src":"8869:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"8869:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8842:42:10"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[],"src":"8893:0:10"},"scope":1983,"src":"8817:597:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1938,"nodeType":"Block","src":"9628:560:10","statements":[{"assignments":[1862],"declarations":[{"constant":false,"id":1862,"mutability":"mutable","name":"pos","nameLocation":"9646:3:10","nodeType":"VariableDeclaration","scope":1938,"src":"9638:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1861,"name":"uint256","nodeType":"ElementaryTypeName","src":"9638:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1865,"initialValue":{"expression":{"id":1863,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"9652:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9658:6:10","memberName":"length","nodeType":"MemberAccess","src":"9652:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9638:26:10"},{"id":1937,"nodeType":"UncheckedBlock","src":"9675:507:10","statements":[{"assignments":[1868],"declarations":[{"constant":false,"id":1868,"mutability":"mutable","name":"oldCkpt","nameLocation":"9717:7:10","nodeType":"VariableDeclaration","scope":1937,"src":"9699:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1867,"nodeType":"UserDefinedTypeName","pathNode":{"id":1866,"name":"Checkpoint","nameLocations":["9699:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1266,"src":"9699:10:10"},"referencedDeclaration":1266,"src":"9699:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"id":1883,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"9727:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9727:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1877,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"9771:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"9778:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9784:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9778:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1876,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9757:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1266_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9757:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9727:59:10","trueExpression":{"arguments":[{"hexValue":"30","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9749:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9752:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1872,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9738:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1266_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9738:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"nodeType":"VariableDeclarationStatement","src":"9699:87:10"},{"expression":{"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1884,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"9801:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1885,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"9813:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":1886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9821:5:10","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"9813:13:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9801:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1888,"nodeType":"ExpressionStatement","src":"9801:25:10"},{"expression":{"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1889,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"9840:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1891,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"9855:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1892,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"9866:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1890,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"9852:2:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9840:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1895,"nodeType":"ExpressionStatement","src":"9840:32:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1896,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"9891:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9897:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9891:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1899,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"9902:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":1900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9910:9:10","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1263,"src":"9902:17:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1901,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9923:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9902:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9891:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1935,"nodeType":"Block","src":"10038:134:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1925,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"10108:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10108:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":1923,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"10090:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5680_$","typeString":"type(library SafeCast)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10099:8:10","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4842,"src":"10090:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10090:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":1930,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"10144:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1928,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"10125:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5680_$","typeString":"type(library SafeCast)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10134:9:10","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4242,"src":"10125:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10125:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1922,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"10067:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1266_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10079:9:10","10118:5:10"],"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"10067:89:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$1266_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}],"expression":{"id":1919,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"10056:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10062:4:10","memberName":"push","nodeType":"MemberAccess","src":"10056:10:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$1266_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,struct ERC20Votes.Checkpoint storage ref)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:101:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"10056:101:10"}]},"id":1936,"nodeType":"IfStatement","src":"9887:285:10","trueBody":{"id":1918,"nodeType":"Block","src":"9932:100:10","statements":[{"expression":{"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1906,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"9964:5:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"9971:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9977:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9971:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1905,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"9950:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1266_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9950:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9980:5:10","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1265,"src":"9950:35:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1914,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"10007:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1912,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"9988:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5680_$","typeString":"type(library SafeCast)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9997:9:10","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4242,"src":"9988:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9988:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9950:67:10","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1917,"nodeType":"ExpressionStatement","src":"9950:67:10"}]}}]}]},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"9429:16:10","nodeType":"FunctionDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"ckpts","nameLocation":"9476:5:10","nodeType":"VariableDeclaration","scope":1939,"src":"9455:26:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1840,"nodeType":"UserDefinedTypeName","pathNode":{"id":1839,"name":"Checkpoint","nameLocations":["9455:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1266,"src":"9455:10:10"},"referencedDeclaration":1266,"src":"9455:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1841,"nodeType":"ArrayTypeName","src":"9455:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1852,"mutability":"mutable","name":"op","nameLocation":"9541:2:10","nodeType":"VariableDeclaration","scope":1939,"src":"9491:52:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":1851,"nodeType":"FunctionTypeName","parameterTypes":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1851,"src":"9500:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"9500:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1851,"src":"9509:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"9509:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9499:18:10"},"returnParameterTypes":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1851,"src":"9532:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"9532:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9531:9:10"},"src":"9491:52:10","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"delta","nameLocation":"9561:5:10","nodeType":"VariableDeclaration","scope":1939,"src":"9553:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"9553:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9445:127:10"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"mutability":"mutable","name":"oldWeight","nameLocation":"9598:9:10","nodeType":"VariableDeclaration","scope":1939,"src":"9590:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1859,"mutability":"mutable","name":"newWeight","nameLocation":"9617:9:10","nodeType":"VariableDeclaration","scope":1939,"src":"9609:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"9609:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:38:10"},"scope":1983,"src":"9420:768:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1952,"nodeType":"Block","src":"10261:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"10278:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1949,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"10282:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10278:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1947,"id":1951,"nodeType":"Return","src":"10271:12:10"}]},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"10203:4:10","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"a","nameLocation":"10216:1:10","nodeType":"VariableDeclaration","scope":1953,"src":"10208:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"10208:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"b","nameLocation":"10227:1:10","nodeType":"VariableDeclaration","scope":1953,"src":"10219:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"10219:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10207:22:10"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1953,"src":"10252:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"10252:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10251:9:10"},"scope":1983,"src":"10194:96:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1966,"nodeType":"Block","src":"10368:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"10385:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1963,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"10389:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10385:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1961,"id":1965,"nodeType":"Return","src":"10378:12:10"}]},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"10305:9:10","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"a","nameLocation":"10323:1:10","nodeType":"VariableDeclaration","scope":1967,"src":"10315:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"10315:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"b","nameLocation":"10334:1:10","nodeType":"VariableDeclaration","scope":1967,"src":"10326:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"10326:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10314:22:10"},"returnParameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"10359:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"10359:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10358:9:10"},"scope":1983,"src":"10296:101:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1981,"nodeType":"Block","src":"10653:126:10","statements":[{"AST":{"nodeType":"YulBlock","src":"10672:101:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10693:1:10","type":"","value":"0"},{"name":"ckpts.slot","nodeType":"YulIdentifier","src":"10696:10:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10686:6:10"},"nodeType":"YulFunctionCall","src":"10686:21:10"},"nodeType":"YulExpressionStatement","src":"10686:21:10"},{"nodeType":"YulAssignment","src":"10720:43:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10749:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10752:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10739:9:10"},"nodeType":"YulFunctionCall","src":"10739:18:10"},{"name":"pos","nodeType":"YulIdentifier","src":"10759:3:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10735:3:10"},"nodeType":"YulFunctionCall","src":"10735:28:10"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"10720:11:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1972,"isOffset":false,"isSlot":true,"src":"10696:10:10","suffix":"slot","valueSize":1},{"declaration":1974,"isOffset":false,"isSlot":false,"src":"10759:3:10","valueSize":1},{"declaration":1978,"isOffset":false,"isSlot":true,"src":"10720:11:10","suffix":"slot","valueSize":1}],"id":1980,"nodeType":"InlineAssembly","src":"10663:110:10"}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"10403:132:10","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":1982,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"10549:13:10","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"ckpts","nameLocation":"10584:5:10","nodeType":"VariableDeclaration","scope":1982,"src":"10563:26:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1970,"nodeType":"UserDefinedTypeName","pathNode":{"id":1969,"name":"Checkpoint","nameLocations":["10563:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1266,"src":"10563:10:10"},"referencedDeclaration":1266,"src":"10563:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1971,"nodeType":"ArrayTypeName","src":"10563:12:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1266_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"pos","nameLocation":"10599:3:10","nodeType":"VariableDeclaration","scope":1982,"src":"10591:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"10591:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10562:41:10"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"result","nameLocation":"10645:6:10","nodeType":"VariableDeclaration","scope":1982,"src":"10626:25:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1977,"nodeType":"UserDefinedTypeName","pathNode":{"id":1976,"name":"Checkpoint","nameLocations":["10626:10:10"],"nodeType":"IdentifierPath","referencedDeclaration":1266,"src":"10626:10:10"},"referencedDeclaration":1266,"src":"10626:10:10","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1266_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"10625:27:10"},"scope":1983,"src":"10540:239:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1984,"src":"1243:9538:10","usedErrors":[2161,2163],"usedEvents":[124,133,195,1011,1020]}],"src":"121:10661:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1077],"IERC20Metadata":[2008]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1985,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1986,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2009,"sourceUnit":1078,"src":"135:23:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1988,"name":"IERC20","nameLocations":["305:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1077,"src":"305:6:11"},"id":1989,"nodeType":"InheritanceSpecifier","src":"305:6:11"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1987,"nodeType":"StructuredDocumentation","src":"160:116:11","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2008,"linearizedBaseContracts":[2008,1077],"name":"IERC20Metadata","nameLocation":"287:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"318:54:11","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1995,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:11","nodeType":"FunctionDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[],"src":"390:2:11"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1995,"src":"416:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1992,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:11"},"scope":2008,"src":"377:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"437:56:11","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2001,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:11","nodeType":"FunctionDefinition","parameters":{"id":1997,"nodeType":"ParameterList","parameters":[],"src":"513:2:11"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2001,"src":"539:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1998,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:11"},"scope":2008,"src":"498:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"560:65:11","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2007,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:11","nodeType":"FunctionDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[],"src":"647:2:11"},"returnParameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2007,"src":"673:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2004,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:11"},"scope":2008,"src":"630:50:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2009,"src":"277:405:11","usedErrors":[],"usedEvents":[1011,1020]}],"src":"110:573:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2044]},"id":2045,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"148:1963:12","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":2044,"linearizedBaseContracts":[2044],"name":"IERC20Permit","nameLocation":"2122:12:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"2141:850:12","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":2029,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:12","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"owner","nameLocation":"3029:5:12","nodeType":"VariableDeclaration","scope":2029,"src":"3021:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"spender","nameLocation":"3052:7:12","nodeType":"VariableDeclaration","scope":2029,"src":"3044:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2015,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"value","nameLocation":"3077:5:12","nodeType":"VariableDeclaration","scope":2029,"src":"3069:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:12","nodeType":"VariableDeclaration","scope":2029,"src":"3092:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"v","nameLocation":"3124:1:12","nodeType":"VariableDeclaration","scope":2029,"src":"3118:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2021,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"r","nameLocation":"3143:1:12","nodeType":"VariableDeclaration","scope":2029,"src":"3135:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"s","nameLocation":"3162:1:12","nodeType":"VariableDeclaration","scope":2029,"src":"3154:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:12"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"3178:0:12"},"scope":2044,"src":"2996:183:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"3185:294:12","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2037,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:12","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"owner","nameLocation":"3508:5:12","nodeType":"VariableDeclaration","scope":2037,"src":"3500:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:12"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"3538:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:12"},"scope":2044,"src":"3484:63:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"3553:128:12","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2043,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:12","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[],"src":"3764:2:12"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2043,"src":"3790:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:12"},"scope":2044,"src":"3739:60:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2045,"src":"2112:1689:12","usedErrors":[],"usedEvents":[]}],"src":"123:3679:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2074]},"id":2075,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2046,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"126:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2074,"linearizedBaseContracts":[2074],"name":"Context","nameLocation":"641:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2055,"nodeType":"Block","src":"717:34:13","statements":[{"expression":{"expression":{"id":2052,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:13","memberName":"sender","nodeType":"MemberAccess","src":"734:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2051,"id":2054,"nodeType":"Return","src":"727:17:13"}]},"id":2056,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:13","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[],"src":"674:2:13"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2056,"src":"708:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:13"},"scope":2074,"src":"655:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2064,"nodeType":"Block","src":"824:32:13","statements":[{"expression":{"expression":{"id":2061,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:13","memberName":"data","nodeType":"MemberAccess","src":"841:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2060,"id":2063,"nodeType":"Return","src":"834:15:13"}]},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:13","nodeType":"FunctionDefinition","parameters":{"id":2057,"nodeType":"ParameterList","parameters":[],"src":"774:2:13"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"808:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2058,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:13"},"scope":2074,"src":"757:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2072,"nodeType":"Block","src":"934:25:13","statements":[{"expression":{"hexValue":"30","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2069,"id":2071,"nodeType":"Return","src":"944:8:13"}]},"id":2073,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:13","nodeType":"FunctionDefinition","parameters":{"id":2066,"nodeType":"ParameterList","parameters":[],"src":"891:2:13"},"returnParameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2073,"src":"925:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:13"},"scope":2074,"src":"862:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2075,"src":"623:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:861:13"},"id":13},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[2148]},"id":2149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2076,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"112:311:14","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2148,"linearizedBaseContracts":[2148],"name":"Counters","nameLocation":"432:8:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":2080,"members":[{"constant":false,"id":2079,"mutability":"mutable","name":"_value","nameLocation":"794:6:14","nodeType":"VariableDeclaration","scope":2080,"src":"786:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:14","nodeType":"StructDefinition","scope":2148,"src":"447:374:14","visibility":"public"},{"body":{"id":2091,"nodeType":"Block","src":"901:38:14","statements":[{"expression":{"expression":{"id":2088,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"918:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:14","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2079,"src":"918:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2087,"id":2090,"nodeType":"Return","src":"911:21:14"}]},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:14","nodeType":"FunctionDefinition","parameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"counter","nameLocation":"860:7:14","nodeType":"VariableDeclaration","scope":2092,"src":"844:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2082,"nodeType":"UserDefinedTypeName","pathNode":{"id":2081,"name":"Counter","nameLocations":["844:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"844:7:14"},"referencedDeclaration":2080,"src":"844:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:14"},"returnParameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2092,"src":"892:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:14"},"scope":2148,"src":"827:112:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2105,"nodeType":"Block","src":"998:70:14","statements":[{"id":2104,"nodeType":"UncheckedBlock","src":"1008:54:14","statements":[{"expression":{"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2098,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"1032:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:14","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2079,"src":"1032:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2103,"nodeType":"ExpressionStatement","src":"1032:19:14"}]}]},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:14","nodeType":"FunctionDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"counter","nameLocation":"980:7:14","nodeType":"VariableDeclaration","scope":2106,"src":"964:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2094,"nodeType":"UserDefinedTypeName","pathNode":{"id":2093,"name":"Counter","nameLocations":["964:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"964:7:14"},"referencedDeclaration":2080,"src":"964:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:14"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[],"src":"998:0:14"},"scope":2148,"src":"945:123:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2133,"nodeType":"Block","src":"1127:176:14","statements":[{"assignments":[2113],"declarations":[{"constant":false,"id":2113,"mutability":"mutable","name":"value","nameLocation":"1145:5:14","nodeType":"VariableDeclaration","scope":2133,"src":"1137:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2116,"initialValue":{"expression":{"id":2114,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"1153:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:14","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2079,"src":"1153:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"1185:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2123,"nodeType":"ExpressionStatement","src":"1177:49:14"},{"id":2132,"nodeType":"UncheckedBlock","src":"1236:61:14","statements":[{"expression":{"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2124,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"1260:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:14","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2079,"src":"1260:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"1277:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ExpressionStatement","src":"1260:26:14"}]}]},"id":2134,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:14","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"counter","nameLocation":"1109:7:14","nodeType":"VariableDeclaration","scope":2134,"src":"1093:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2108,"nodeType":"UserDefinedTypeName","pathNode":{"id":2107,"name":"Counter","nameLocations":["1093:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"1093:7:14"},"referencedDeclaration":2080,"src":"1093:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:14"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[],"src":"1127:0:14"},"scope":2148,"src":"1074:229:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2146,"nodeType":"Block","src":"1358:35:14","statements":[{"expression":{"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2140,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"1368:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:14","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2079,"src":"1368:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2145,"nodeType":"ExpressionStatement","src":"1368:18:14"}]},"id":2147,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:14","nodeType":"FunctionDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"counter","nameLocation":"1340:7:14","nodeType":"VariableDeclaration","scope":2147,"src":"1324:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2136,"nodeType":"UserDefinedTypeName","pathNode":{"id":2135,"name":"Counter","nameLocations":["1324:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2080,"src":"1324:7:14"},"referencedDeclaration":2080,"src":"1324:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2080_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:14"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[],"src":"1358:0:14"},"scope":2148,"src":"1309:84:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2149,"src":"424:971:14","usedErrors":[],"usedEvents":[]}],"src":"87:1309:14"},"id":14},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2153],"ShortStrings":[2364],"StorageSlot":[2474]},"id":2365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2150,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2365,"sourceUnit":2475,"src":"131:27:15","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":2153,"name":"ShortString","nameLocation":"333:11:15","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:15","underlyingType":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"358:876:15","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2364,"linearizedBaseContracts":[2364],"name":"ShortStrings","nameLocation":"1243:12:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2157,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:15","nodeType":"VariableDeclaration","scope":2364,"src":"1325:112:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2161,"name":"StringTooLong","nameLocation":"1450:13:15","nodeType":"ErrorDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"str","nameLocation":"1471:3:15","nodeType":"VariableDeclaration","scope":2161,"src":"1464:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2158,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:15"},"src":"1444:32:15"},{"errorSelector":"b3512b0c","id":2163,"name":"InvalidShortString","nameLocation":"1487:18:15","nodeType":"ErrorDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"1505:2:15"},"src":"1481:27:15"},{"body":{"id":2206,"nodeType":"Block","src":"1767:208:15","statements":[{"assignments":[2173],"declarations":[{"constant":false,"id":2173,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:15","nodeType":"VariableDeclaration","scope":2206,"src":"1777:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2172,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2178,"initialValue":{"arguments":[{"id":2176,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"1803:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2174,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:15","typeDescriptions":{}}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2179,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"1821:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:15","memberName":"length","nodeType":"MemberAccess","src":"1821:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2188,"nodeType":"IfStatement","src":"1817:72:15","trueBody":{"id":2187,"nodeType":"Block","src":"1839:50:15","statements":[{"errorCall":{"arguments":[{"id":2184,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"1874:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2183,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"1860:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2186,"nodeType":"RevertStatement","src":"1853:25:15"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2197,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"1946:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:15","typeDescriptions":{}}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:15","typeDescriptions":{}}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2200,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"1955:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:15","memberName":"length","nodeType":"MemberAccess","src":"1955:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:15","typeDescriptions":{}}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2189,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"1905:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2153_$","typeString":"type(ShortString)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1917:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2153_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1905:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"functionReturnParameters":2171,"id":2205,"nodeType":"Return","src":"1898:70:15"}]},"documentation":{"id":2164,"nodeType":"StructuredDocumentation","src":"1514:170:15","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2207,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:15","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"str","nameLocation":"1726:3:15","nodeType":"VariableDeclaration","scope":2207,"src":"1712:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2165,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:15"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2207,"src":"1754:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"},"typeName":{"id":2169,"nodeType":"UserDefinedTypeName","pathNode":{"id":2168,"name":"ShortString","nameLocations":["1754:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"1754:11:15"},"referencedDeclaration":2153,"src":"1754:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:15"},"scope":2364,"src":"1689:286:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2232,"nodeType":"Block","src":"2133:331:15","statements":[{"assignments":[2217],"declarations":[{"constant":false,"id":2217,"mutability":"mutable","name":"len","nameLocation":"2151:3:15","nodeType":"VariableDeclaration","scope":2232,"src":"2143:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2221,"initialValue":{"arguments":[{"id":2219,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"2168:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}],"id":2218,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"2157:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2153_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:15"},{"assignments":[2223],"declarations":[{"constant":false,"id":2223,"mutability":"mutable","name":"str","nameLocation":"2275:3:15","nodeType":"VariableDeclaration","scope":2232,"src":"2261:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2222,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2228,"initialValue":{"arguments":[{"hexValue":"3332","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2224,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:15"},{"AST":{"nodeType":"YulBlock","src":"2357:81:15","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2378:3:15"},{"name":"len","nodeType":"YulIdentifier","src":"2383:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:15"},"nodeType":"YulFunctionCall","src":"2371:16:15"},"nodeType":"YulExpressionStatement","src":"2371:16:15"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2411:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2416:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:15"},"nodeType":"YulFunctionCall","src":"2407:14:15"},{"name":"sstr","nodeType":"YulIdentifier","src":"2423:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2400:6:15"},"nodeType":"YulFunctionCall","src":"2400:28:15"},"nodeType":"YulExpressionStatement","src":"2400:28:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2217,"isOffset":false,"isSlot":false,"src":"2383:3:15","valueSize":1},{"declaration":2211,"isOffset":false,"isSlot":false,"src":"2423:4:15","valueSize":1},{"declaration":2223,"isOffset":false,"isSlot":false,"src":"2378:3:15","valueSize":1},{"declaration":2223,"isOffset":false,"isSlot":false,"src":"2411:3:15","valueSize":1}],"id":2229,"nodeType":"InlineAssembly","src":"2348:90:15"},{"expression":{"id":2230,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"2454:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2215,"id":2231,"nodeType":"Return","src":"2447:10:15"}]},"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"1981:73:15","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2233,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:15","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:15","nodeType":"VariableDeclaration","scope":2233,"src":"2077:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"},"typeName":{"id":2210,"nodeType":"UserDefinedTypeName","pathNode":{"id":2209,"name":"ShortString","nameLocations":["2077:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"2077:11:15"},"referencedDeclaration":2153,"src":"2077:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:15"},"returnParameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2233,"src":"2118:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2213,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:15"},"scope":2364,"src":"2059:405:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2264,"nodeType":"Block","src":"2606:175:15","statements":[{"assignments":[2243],"declarations":[{"constant":false,"id":2243,"mutability":"mutable","name":"result","nameLocation":"2624:6:15","nodeType":"VariableDeclaration","scope":2264,"src":"2616:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2253,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2248,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"2660:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}],"expression":{"id":2246,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"2641:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2153_$","typeString":"type(ShortString)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2653:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2153_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:15","typeDescriptions":{}}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"2687:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2261,"nodeType":"IfStatement","src":"2683:69:15","trueBody":{"id":2260,"nodeType":"Block","src":"2700:52:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2257,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"2721:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2259,"nodeType":"RevertStatement","src":"2714:27:15"}]}},{"expression":{"id":2262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"2768:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2241,"id":2263,"nodeType":"Return","src":"2761:13:15"}]},"documentation":{"id":2234,"nodeType":"StructuredDocumentation","src":"2470:61:15","text":" @dev Return the length of a `ShortString`."},"id":2265,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:15","nodeType":"FunctionDefinition","parameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:15","nodeType":"VariableDeclaration","scope":2265,"src":"2556:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"},"typeName":{"id":2236,"nodeType":"UserDefinedTypeName","pathNode":{"id":2235,"name":"ShortString","nameLocations":["2556:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"2556:11:15"},"referencedDeclaration":2153,"src":"2556:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:15"},"returnParameters":{"id":2241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2265,"src":"2597:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:15"},"scope":2364,"src":"2536:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2304,"nodeType":"Block","src":"3004:232:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"3024:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2276,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:15","typeDescriptions":{}}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:15","memberName":"length","nodeType":"MemberAccess","src":"3018:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2302,"nodeType":"Block","src":"3102:128:15","statements":[{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2291,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"3142:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2288,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"3116:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2474_$","typeString":"type(library StorageSlot)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3128:13:15","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2451,"src":"3116:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2382_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2382_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3149:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2381,"src":"3116:38:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"3157:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2296,"nodeType":"ExpressionStatement","src":"3116:46:15"},{"expression":{"arguments":[{"id":2299,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"3200:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2297,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"3183:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2153_$","typeString":"type(ShortString)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3195:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2153_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3183:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"functionReturnParameters":2275,"id":2301,"nodeType":"Return","src":"3176:43:15"}]},"id":2303,"nodeType":"IfStatement","src":"3014:216:15","trueBody":{"id":2287,"nodeType":"Block","src":"3044:52:15","statements":[{"expression":{"arguments":[{"id":2284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"3079:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2283,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"3065:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2153_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3065:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"functionReturnParameters":2275,"id":2286,"nodeType":"Return","src":"3058:27:15"}]}}]},"documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"2787:103:15","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2305,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:15","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"value","nameLocation":"2944:5:15","nodeType":"VariableDeclaration","scope":2305,"src":"2930:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2267,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"store","nameLocation":"2966:5:15","nodeType":"VariableDeclaration","scope":2305,"src":"2951:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2269,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:15"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2305,"src":"2991:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"},"typeName":{"id":2273,"nodeType":"UserDefinedTypeName","pathNode":{"id":2272,"name":"ShortString","nameLocations":["2991:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"2991:11:15"},"referencedDeclaration":2153,"src":"2991:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:15"},"scope":2364,"src":"2895:341:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2331,"nodeType":"Block","src":"3476:159:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"3509:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}],"expression":{"id":2316,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"3490:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2153_$","typeString":"type(ShortString)"}},"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3502:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2153_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2320,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"3519:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2329,"nodeType":"Block","src":"3592:37:15","statements":[{"expression":{"id":2327,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"3613:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2315,"id":2328,"nodeType":"Return","src":"3606:12:15"}]},"id":2330,"nodeType":"IfStatement","src":"3486:143:15","trueBody":{"id":2326,"nodeType":"Block","src":"3539:47:15","statements":[{"expression":{"arguments":[{"id":2323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"3569:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}],"id":2322,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"3560:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2153_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2315,"id":2325,"nodeType":"Return","src":"3553:22:15"}]}}]},"documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"3242:120:15","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:15","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"value","nameLocation":"3409:5:15","nodeType":"VariableDeclaration","scope":2332,"src":"3397:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"},"typeName":{"id":2308,"nodeType":"UserDefinedTypeName","pathNode":{"id":2307,"name":"ShortString","nameLocations":["3397:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"3397:11:15"},"referencedDeclaration":2153,"src":"3397:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"store","nameLocation":"3431:5:15","nodeType":"VariableDeclaration","scope":2332,"src":"3416:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2310,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:15"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2332,"src":"3461:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2313,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:15"},"scope":2364,"src":"3367:268:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2362,"nodeType":"Block","src":"4108:175:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"4141:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}],"expression":{"id":2343,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"4122:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2153_$","typeString":"type(ShortString)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4134:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2153_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2347,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"4151:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2360,"nodeType":"Block","src":"4226:51:15","statements":[{"expression":{"expression":{"arguments":[{"id":2356,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"4253:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2354,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:15","typeDescriptions":{}}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4260:6:15","memberName":"length","nodeType":"MemberAccess","src":"4247:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2342,"id":2359,"nodeType":"Return","src":"4240:26:15"}]},"id":2361,"nodeType":"IfStatement","src":"4118:159:15","trueBody":{"id":2353,"nodeType":"Block","src":"4171:49:15","statements":[{"expression":{"arguments":[{"id":2350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"4203:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}],"id":2349,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"4192:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2153_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2342,"id":2352,"nodeType":"Return","src":"4185:24:15"}]}}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"3641:357:15","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:15","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"value","nameLocation":"4047:5:15","nodeType":"VariableDeclaration","scope":2363,"src":"4035:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"},"typeName":{"id":2335,"nodeType":"UserDefinedTypeName","pathNode":{"id":2334,"name":"ShortString","nameLocations":["4035:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"4035:11:15"},"referencedDeclaration":2153,"src":"4035:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"store","nameLocation":"4069:5:15","nodeType":"VariableDeclaration","scope":2363,"src":"4054:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2337,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:15"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"4099:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:15"},"scope":2364,"src":"4003:280:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2365,"src":"1235:3050:15","usedErrors":[2161,2163],"usedEvents":[]}],"src":"106:4180:15"},"id":15},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2474]},"id":2475,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2366,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2367,"nodeType":"StructuredDocumentation","src":"218:1201:16","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":2474,"linearizedBaseContracts":[2474],"name":"StorageSlot","nameLocation":"1428:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2370,"members":[{"constant":false,"id":2369,"mutability":"mutable","name":"value","nameLocation":"1483:5:16","nodeType":"VariableDeclaration","scope":2370,"src":"1475:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2368,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:16","nodeType":"StructDefinition","scope":2474,"src":"1446:49:16","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2373,"members":[{"constant":false,"id":2372,"mutability":"mutable","name":"value","nameLocation":"1535:5:16","nodeType":"VariableDeclaration","scope":2373,"src":"1530:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2371,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:16","nodeType":"StructDefinition","scope":2474,"src":"1501:46:16","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2376,"members":[{"constant":false,"id":2375,"mutability":"mutable","name":"value","nameLocation":"1590:5:16","nodeType":"VariableDeclaration","scope":2376,"src":"1582:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:16","nodeType":"StructDefinition","scope":2474,"src":"1553:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2379,"members":[{"constant":false,"id":2378,"mutability":"mutable","name":"value","nameLocation":"1645:5:16","nodeType":"VariableDeclaration","scope":2379,"src":"1637:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:16","nodeType":"StructDefinition","scope":2474,"src":"1608:49:16","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2382,"members":[{"constant":false,"id":2381,"mutability":"mutable","name":"value","nameLocation":"1698:5:16","nodeType":"VariableDeclaration","scope":2382,"src":"1691:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2380,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:16","nodeType":"StructDefinition","scope":2474,"src":"1663:47:16","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2385,"members":[{"constant":false,"id":2384,"mutability":"mutable","name":"value","nameLocation":"1749:5:16","nodeType":"VariableDeclaration","scope":2385,"src":"1743:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2383,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:16","nodeType":"StructDefinition","scope":2474,"src":"1716:45:16","visibility":"public"},{"body":{"id":2395,"nodeType":"Block","src":"1943:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:16","statements":[{"nodeType":"YulAssignment","src":"2019:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2392,"isOffset":false,"isSlot":true,"src":"2019:6:16","suffix":"slot","valueSize":1},{"declaration":2388,"isOffset":false,"isSlot":false,"src":"2029:4:16","valueSize":1}],"id":2394,"nodeType":"InlineAssembly","src":"1996:47:16"}]},"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"1767:87:16","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:16","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"slot","nameLocation":"1891:4:16","nodeType":"VariableDeclaration","scope":2396,"src":"1883:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:16"},"returnParameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"r","nameLocation":"1940:1:16","nodeType":"VariableDeclaration","scope":2396,"src":"1920:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2370_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2391,"nodeType":"UserDefinedTypeName","pathNode":{"id":2390,"name":"AddressSlot","nameLocations":["1920:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2370,"src":"1920:11:16"},"referencedDeclaration":2370,"src":"1920:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2370_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:16"},"scope":2474,"src":"1859:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2406,"nodeType":"Block","src":"2231:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:16","statements":[{"nodeType":"YulAssignment","src":"2307:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2403,"isOffset":false,"isSlot":true,"src":"2307:6:16","suffix":"slot","valueSize":1},{"declaration":2399,"isOffset":false,"isSlot":false,"src":"2317:4:16","valueSize":1}],"id":2405,"nodeType":"InlineAssembly","src":"2284:47:16"}]},"documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"2055:87:16","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2407,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:16","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"slot","nameLocation":"2179:4:16","nodeType":"VariableDeclaration","scope":2407,"src":"2171:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:16"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"r","nameLocation":"2228:1:16","nodeType":"VariableDeclaration","scope":2407,"src":"2208:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2373_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2402,"nodeType":"UserDefinedTypeName","pathNode":{"id":2401,"name":"BooleanSlot","nameLocations":["2208:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"2208:11:16"},"referencedDeclaration":2373,"src":"2208:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2373_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:16"},"scope":2474,"src":"2147:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2417,"nodeType":"Block","src":"2519:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:16","statements":[{"nodeType":"YulAssignment","src":"2595:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2414,"isOffset":false,"isSlot":true,"src":"2595:6:16","suffix":"slot","valueSize":1},{"declaration":2410,"isOffset":false,"isSlot":false,"src":"2605:4:16","valueSize":1}],"id":2416,"nodeType":"InlineAssembly","src":"2572:47:16"}]},"documentation":{"id":2408,"nodeType":"StructuredDocumentation","src":"2343:87:16","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2418,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:16","nodeType":"FunctionDefinition","parameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"slot","nameLocation":"2467:4:16","nodeType":"VariableDeclaration","scope":2418,"src":"2459:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:16"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"r","nameLocation":"2516:1:16","nodeType":"VariableDeclaration","scope":2418,"src":"2496:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2376_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2413,"nodeType":"UserDefinedTypeName","pathNode":{"id":2412,"name":"Bytes32Slot","nameLocations":["2496:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2376,"src":"2496:11:16"},"referencedDeclaration":2376,"src":"2496:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2376_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:16"},"scope":2474,"src":"2435:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2428,"nodeType":"Block","src":"2807:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:16","statements":[{"nodeType":"YulAssignment","src":"2883:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2425,"isOffset":false,"isSlot":true,"src":"2883:6:16","suffix":"slot","valueSize":1},{"declaration":2421,"isOffset":false,"isSlot":false,"src":"2893:4:16","valueSize":1}],"id":2427,"nodeType":"InlineAssembly","src":"2860:47:16"}]},"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"2631:87:16","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:16","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"slot","nameLocation":"2755:4:16","nodeType":"VariableDeclaration","scope":2429,"src":"2747:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:16"},"returnParameters":{"id":2426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"r","nameLocation":"2804:1:16","nodeType":"VariableDeclaration","scope":2429,"src":"2784:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2379_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2424,"nodeType":"UserDefinedTypeName","pathNode":{"id":2423,"name":"Uint256Slot","nameLocations":["2784:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2379,"src":"2784:11:16"},"referencedDeclaration":2379,"src":"2784:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2379_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:16"},"scope":2474,"src":"2723:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2439,"nodeType":"Block","src":"3092:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:16","statements":[{"nodeType":"YulAssignment","src":"3168:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2436,"isOffset":false,"isSlot":true,"src":"3168:6:16","suffix":"slot","valueSize":1},{"declaration":2432,"isOffset":false,"isSlot":false,"src":"3178:4:16","valueSize":1}],"id":2438,"nodeType":"InlineAssembly","src":"3145:47:16"}]},"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"2919:86:16","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2440,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:16","nodeType":"FunctionDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"slot","nameLocation":"3041:4:16","nodeType":"VariableDeclaration","scope":2440,"src":"3033:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:16"},"returnParameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"r","nameLocation":"3089:1:16","nodeType":"VariableDeclaration","scope":2440,"src":"3070:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2382_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2435,"nodeType":"UserDefinedTypeName","pathNode":{"id":2434,"name":"StringSlot","nameLocations":["3070:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2382,"src":"3070:10:16"},"referencedDeclaration":2382,"src":"3070:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2382_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:16"},"scope":2474,"src":"3010:188:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2450,"nodeType":"Block","src":"3400:112:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:16","statements":[{"nodeType":"YulAssignment","src":"3476:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2447,"isOffset":false,"isSlot":true,"src":"3476:6:16","suffix":"slot","valueSize":1},{"declaration":2443,"isOffset":false,"isSlot":true,"src":"3486:10:16","suffix":"slot","valueSize":1}],"id":2449,"nodeType":"InlineAssembly","src":"3453:53:16"}]},"documentation":{"id":2441,"nodeType":"StructuredDocumentation","src":"3204:101:16","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:16","nodeType":"FunctionDefinition","parameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"store","nameLocation":"3348:5:16","nodeType":"VariableDeclaration","scope":2451,"src":"3333:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2442,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:16"},"returnParameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"r","nameLocation":"3397:1:16","nodeType":"VariableDeclaration","scope":2451,"src":"3378:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2382_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2446,"nodeType":"UserDefinedTypeName","pathNode":{"id":2445,"name":"StringSlot","nameLocations":["3378:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2382,"src":"3378:10:16"},"referencedDeclaration":2382,"src":"3378:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2382_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:16"},"scope":2474,"src":"3310:202:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2461,"nodeType":"Block","src":"3688:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:16","statements":[{"nodeType":"YulAssignment","src":"3764:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2458,"isOffset":false,"isSlot":true,"src":"3764:6:16","suffix":"slot","valueSize":1},{"declaration":2454,"isOffset":false,"isSlot":false,"src":"3774:4:16","valueSize":1}],"id":2460,"nodeType":"InlineAssembly","src":"3741:47:16"}]},"documentation":{"id":2452,"nodeType":"StructuredDocumentation","src":"3518:85:16","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2462,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:16","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"slot","nameLocation":"3638:4:16","nodeType":"VariableDeclaration","scope":2462,"src":"3630:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:16"},"returnParameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"r","nameLocation":"3685:1:16","nodeType":"VariableDeclaration","scope":2462,"src":"3667:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2385_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2457,"nodeType":"UserDefinedTypeName","pathNode":{"id":2456,"name":"BytesSlot","nameLocations":["3667:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2385,"src":"3667:9:16"},"referencedDeclaration":2385,"src":"3667:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2385_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:16"},"scope":2474,"src":"3608:186:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2472,"nodeType":"Block","src":"3991:112:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:16","statements":[{"nodeType":"YulAssignment","src":"4067:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2469,"isOffset":false,"isSlot":true,"src":"4067:6:16","suffix":"slot","valueSize":1},{"declaration":2465,"isOffset":false,"isSlot":true,"src":"4077:10:16","suffix":"slot","valueSize":1}],"id":2471,"nodeType":"InlineAssembly","src":"4044:53:16"}]},"documentation":{"id":2463,"nodeType":"StructuredDocumentation","src":"3800:99:16","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2473,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:16","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"store","nameLocation":"3940:5:16","nodeType":"VariableDeclaration","scope":2473,"src":"3926:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2464,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:16"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"r","nameLocation":"3988:1:16","nodeType":"VariableDeclaration","scope":2473,"src":"3970:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2385_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2468,"nodeType":"UserDefinedTypeName","pathNode":{"id":2467,"name":"BytesSlot","nameLocations":["3970:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2385,"src":"3970:9:16"},"referencedDeclaration":2385,"src":"3970:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2385_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:16"},"scope":2474,"src":"3904:199:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2475,"src":"1420:2685:16","usedErrors":[],"usedEvents":[]}],"src":"193:3913:16"},"id":16},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4139],"SignedMath":[5785],"Strings":[2703]},"id":2704,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2476,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2477,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2704,"sourceUnit":4140,"src":"126:25:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2704,"sourceUnit":5786,"src":"152:31:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"185:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":2703,"linearizedBaseContracts":[2703],"name":"Strings","nameLocation":"228:7:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2482,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:17","nodeType":"VariableDeclaration","scope":2703,"src":"242:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2480,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2485,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:17","nodeType":"VariableDeclaration","scope":2703,"src":"302:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2483,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2532,"nodeType":"Block","src":"518:625:17","statements":[{"id":2531,"nodeType":"UncheckedBlock","src":"528:609:17","statements":[{"assignments":[2494],"declarations":[{"constant":false,"id":2494,"mutability":"mutable","name":"length","nameLocation":"560:6:17","nodeType":"VariableDeclaration","scope":2531,"src":"552:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2501,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"580:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2495,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"569:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4139_$","typeString":"type(library Math)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3976,"src":"569:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:17"},{"assignments":[2503],"declarations":[{"constant":false,"id":2503,"mutability":"mutable","name":"buffer","nameLocation":"618:6:17","nodeType":"VariableDeclaration","scope":2531,"src":"604:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2502,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2508,"initialValue":{"arguments":[{"id":2506,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"638:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2504,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:17"},{"assignments":[2510],"declarations":[{"constant":false,"id":2510,"mutability":"mutable","name":"ptr","nameLocation":"667:3:17","nodeType":"VariableDeclaration","scope":2531,"src":"659:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2511,"nodeType":"VariableDeclarationStatement","src":"659:11:17"},{"AST":{"nodeType":"YulBlock","src":"740:67:17","statements":[{"nodeType":"YulAssignment","src":"758:35:17","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:17","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:17"},"nodeType":"YulFunctionCall","src":"777:15:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:17"},"nodeType":"YulFunctionCall","src":"765:28:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2503,"isOffset":false,"isSlot":false,"src":"769:6:17","valueSize":1},{"declaration":2494,"isOffset":false,"isSlot":false,"src":"785:6:17","valueSize":1},{"declaration":2510,"isOffset":false,"isSlot":false,"src":"758:3:17","valueSize":1}],"id":2512,"nodeType":"InlineAssembly","src":"731:76:17"},{"body":{"id":2527,"nodeType":"Block","src":"833:267:17","statements":[{"expression":{"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:17","subExpression":{"id":2514,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"851:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2516,"nodeType":"ExpressionStatement","src":"851:5:17"},{"AST":{"nodeType":"YulBlock","src":"934:84:17","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:17"},"nodeType":"YulFunctionCall","src":"974:14:17"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:17"},"nodeType":"YulFunctionCall","src":"969:30:17"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:17"},"nodeType":"YulFunctionCall","src":"956:44:17"},"nodeType":"YulExpressionStatement","src":"956:44:17"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2482,"isOffset":false,"isSlot":false,"src":"990:8:17","valueSize":1},{"declaration":2510,"isOffset":false,"isSlot":false,"src":"964:3:17","valueSize":1},{"declaration":2488,"isOffset":false,"isSlot":false,"src":"978:5:17","valueSize":1}],"id":2517,"nodeType":"InlineAssembly","src":"925:93:17"},{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1035:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2521,"nodeType":"ExpressionStatement","src":"1035:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1068:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2526,"nodeType":"IfStatement","src":"1064:21:17","trueBody":{"id":2525,"nodeType":"Break","src":"1080:5:17"}}]},"condition":{"hexValue":"74727565","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2528,"nodeType":"WhileStatement","src":"820:280:17"},{"expression":{"id":2529,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"1120:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2492,"id":2530,"nodeType":"Return","src":"1113:13:17"}]}]},"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"352:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2533,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:17","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"value","nameLocation":"473:5:17","nodeType":"VariableDeclaration","scope":2533,"src":"465:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:17"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2533,"src":"503:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2490,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:17"},"scope":2703,"src":"447:696:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2560,"nodeType":"Block","src":"1313:103:17","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"1354:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:17","trueExpression":{"hexValue":"2d","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"1400:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2552,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"1385:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5785_$","typeString":"type(library SignedMath)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5784,"src":"1385:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2551,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2533,2561],"referencedDeclaration":2533,"src":"1376:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2543,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2541,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:17","typeDescriptions":{}}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2540,"id":2559,"nodeType":"Return","src":"1323:86:17"}]},"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"1149:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:17","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"value","nameLocation":"1268:5:17","nodeType":"VariableDeclaration","scope":2561,"src":"1261:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2535,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:17"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2561,"src":"1298:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2538,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:17"},"scope":2703,"src":"1243:173:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2580,"nodeType":"Block","src":"1595:100:17","statements":[{"id":2579,"nodeType":"UncheckedBlock","src":"1605:84:17","statements":[{"expression":{"arguments":[{"id":2570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"1648:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"1667:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2571,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"1655:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4139_$","typeString":"type(library Math)"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4099,"src":"1655:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2569,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2581,2657,2677],"referencedDeclaration":2657,"src":"1636:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2568,"id":2578,"nodeType":"Return","src":"1629:49:17"}]}]},"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"1422:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2581,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:17","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"value","nameLocation":"1550:5:17","nodeType":"VariableDeclaration","scope":2581,"src":"1542:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:17"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2581,"src":"1580:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2566,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:17"},"scope":2703,"src":"1521:174:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2656,"nodeType":"Block","src":"1908:347:17","statements":[{"assignments":[2592],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:17","nodeType":"VariableDeclaration","scope":2656,"src":"1918:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2591,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2601,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2596,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"1954:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2593,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:17"},{"expression":{"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2602,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"1975:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2604,"indexExpression":{"hexValue":"30","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2607,"nodeType":"ExpressionStatement","src":"1975:15:17"},{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2608,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"2000:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2610,"indexExpression":{"hexValue":"31","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2613,"nodeType":"ExpressionStatement","src":"2000:15:17"},{"body":{"id":2642,"nodeType":"Block","src":"2070:83:17","statements":[{"expression":{"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2628,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"2084:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2630,"indexExpression":{"id":2629,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"2091:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2631,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"2096:8:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2635,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"2105:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2637,"nodeType":"ExpressionStatement","src":"2084:33:17"},{"expression":{"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"2131:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2641,"nodeType":"ExpressionStatement","src":"2131:11:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2622,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"2058:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2643,"initializationExpression":{"assignments":[2615],"declarations":[{"constant":false,"id":2615,"mutability":"mutable","name":"i","nameLocation":"2038:1:17","nodeType":"VariableDeclaration","scope":2643,"src":"2030:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2621,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2617,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"2046:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:17"},"loopExpression":{"expression":{"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:17","subExpression":{"id":2625,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"2067:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2627,"nodeType":"ExpressionStatement","src":"2065:3:17"},"nodeType":"ForStatement","src":"2025:128:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"2170:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2644,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2650,"nodeType":"ExpressionStatement","src":"2162:55:17"},{"expression":{"arguments":[{"id":2653,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"2241:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2651,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:17","typeDescriptions":{}}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2590,"id":2655,"nodeType":"Return","src":"2227:21:17"}]},"documentation":{"id":2582,"nodeType":"StructuredDocumentation","src":"1701:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2657,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:17","nodeType":"FunctionDefinition","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"value","nameLocation":"1847:5:17","nodeType":"VariableDeclaration","scope":2657,"src":"1839:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"length","nameLocation":"1862:6:17","nodeType":"VariableDeclaration","scope":2657,"src":"1854:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:17"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2657,"src":"1893:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2588,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:17"},"scope":2703,"src":"1818:437:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2676,"nodeType":"Block","src":"2480:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2670,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"2525:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2668,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:17","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:17","typeDescriptions":{}}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2673,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"2533:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2665,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2581,2657,2677],"referencedDeclaration":2657,"src":"2497:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2664,"id":2675,"nodeType":"Return","src":"2490:59:17"}]},"documentation":{"id":2658,"nodeType":"StructuredDocumentation","src":"2261:141:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2677,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:17","nodeType":"FunctionDefinition","parameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"addr","nameLocation":"2436:4:17","nodeType":"VariableDeclaration","scope":2677,"src":"2428:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2659,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:17"},"returnParameters":{"id":2664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2677,"src":"2465:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2662,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:17"},"scope":2703,"src":"2407:149:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2701,"nodeType":"Block","src":"2711:66:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2690,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"2744:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2688,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:17","typeDescriptions":{}}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2687,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2696,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"2767:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2694,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:17","typeDescriptions":{}}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2693,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2686,"id":2700,"nodeType":"Return","src":"2721:49:17"}]},"documentation":{"id":2678,"nodeType":"StructuredDocumentation","src":"2562:66:17","text":" @dev Returns true if the two strings are equal."},"id":2702,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:17","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"a","nameLocation":"2662:1:17","nodeType":"VariableDeclaration","scope":2702,"src":"2648:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2679,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"b","nameLocation":"2679:1:17","nodeType":"VariableDeclaration","scope":2702,"src":"2665:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2681,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:17"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2702,"src":"2705:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2684,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:17"},"scope":2703,"src":"2633:144:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2704,"src":"220:2559:17","usedErrors":[],"usedEvents":[]}],"src":"101:2679:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3069],"Math":[4139],"SignedMath":[5785],"Strings":[2703]},"id":3070,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2705,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:18"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3070,"sourceUnit":2704,"src":"137:24:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2707,"nodeType":"StructuredDocumentation","src":"163:205:18","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3069,"linearizedBaseContracts":[3069],"name":"ECDSA","nameLocation":"377:5:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2713,"members":[{"id":2708,"name":"NoError","nameLocation":"417:7:18","nodeType":"EnumValue","src":"417:7:18"},{"id":2709,"name":"InvalidSignature","nameLocation":"434:16:18","nodeType":"EnumValue","src":"434:16:18"},{"id":2710,"name":"InvalidSignatureLength","nameLocation":"460:22:18","nodeType":"EnumValue","src":"460:22:18"},{"id":2711,"name":"InvalidSignatureS","nameLocation":"492:17:18","nodeType":"EnumValue","src":"492:17:18"},{"id":2712,"name":"InvalidSignatureV","nameLocation":"519:17:18","nodeType":"EnumValue","src":"519:17:18"}],"name":"RecoverError","nameLocation":"394:12:18","nodeType":"EnumDefinition","src":"389:175:18"},{"body":{"id":2756,"nodeType":"Block","src":"624:457:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2719,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"638:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2720,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"647:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2713_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2708,"src":"647:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2725,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"734:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2726,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"743:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2713_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2709,"src":"743:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2734,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"843:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2735,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"852:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2713_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"852:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"965:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2744,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"974:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2713_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2711,"src":"974:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2752,"nodeType":"IfStatement","src":"961:114:18","trueBody":{"id":2751,"nodeType":"Block","src":"1006:69:18","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2747,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2750,"nodeType":"ExpressionStatement","src":"1020:44:18"}]}},"id":2753,"nodeType":"IfStatement","src":"839:236:18","trueBody":{"id":2742,"nodeType":"Block","src":"889:66:18","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2738,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2741,"nodeType":"ExpressionStatement","src":"903:41:18"}]}},"id":2754,"nodeType":"IfStatement","src":"730:345:18","trueBody":{"id":2733,"nodeType":"Block","src":"774:59:18","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2729,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2732,"nodeType":"ExpressionStatement","src":"788:34:18"}]}},"id":2755,"nodeType":"IfStatement","src":"634:441:18","trueBody":{"id":2724,"nodeType":"Block","src":"669:55:18","statements":[{"functionReturnParameters":2718,"id":2723,"nodeType":"Return","src":"683:7:18"}]}}]},"id":2757,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:18","nodeType":"FunctionDefinition","parameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"error","nameLocation":"604:5:18","nodeType":"VariableDeclaration","scope":2757,"src":"591:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2715,"nodeType":"UserDefinedTypeName","pathNode":{"id":2714,"name":"RecoverError","nameLocations":["591:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2713,"src":"591:12:18"},"referencedDeclaration":2713,"src":"591:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:18"},"returnParameters":{"id":2718,"nodeType":"ParameterList","parameters":[],"src":"624:0:18"},"scope":3069,"src":"570:511:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2802,"nodeType":"Block","src":"2249:626:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2770,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"2263:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:18","memberName":"length","nodeType":"MemberAccess","src":"2263:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2800,"nodeType":"Block","src":"2788:81:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:18","typeDescriptions":{}}},"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2796,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"2822:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2713_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"2822:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}}],"id":2798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2769,"id":2799,"nodeType":"Return","src":"2802:56:18"}]},"id":2801,"nodeType":"IfStatement","src":"2259:610:18","trueBody":{"id":2791,"nodeType":"Block","src":"2287:495:18","statements":[{"assignments":[2775],"declarations":[{"constant":false,"id":2775,"mutability":"mutable","name":"r","nameLocation":"2309:1:18","nodeType":"VariableDeclaration","scope":2791,"src":"2301:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2776,"nodeType":"VariableDeclarationStatement","src":"2301:9:18"},{"assignments":[2778],"declarations":[{"constant":false,"id":2778,"mutability":"mutable","name":"s","nameLocation":"2332:1:18","nodeType":"VariableDeclaration","scope":2791,"src":"2324:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2779,"nodeType":"VariableDeclarationStatement","src":"2324:9:18"},{"assignments":[2781],"declarations":[{"constant":false,"id":2781,"mutability":"mutable","name":"v","nameLocation":"2353:1:18","nodeType":"VariableDeclaration","scope":2791,"src":"2347:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2780,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2782,"nodeType":"VariableDeclarationStatement","src":"2347:7:18"},{"AST":{"nodeType":"YulBlock","src":"2555:171:18","statements":[{"nodeType":"YulAssignment","src":"2573:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:18"},"nodeType":"YulFunctionCall","src":"2584:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:18"},"nodeType":"YulFunctionCall","src":"2578:27:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:18"}]},{"nodeType":"YulAssignment","src":"2622:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:18"},"nodeType":"YulFunctionCall","src":"2633:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:18"},"nodeType":"YulFunctionCall","src":"2627:27:18"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:18"}]},{"nodeType":"YulAssignment","src":"2671:41:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:18","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:18"},"nodeType":"YulFunctionCall","src":"2690:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:18"},"nodeType":"YulFunctionCall","src":"2684:27:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:18"},"nodeType":"YulFunctionCall","src":"2676:36:18"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2775,"isOffset":false,"isSlot":false,"src":"2573:1:18","valueSize":1},{"declaration":2778,"isOffset":false,"isSlot":false,"src":"2622:1:18","valueSize":1},{"declaration":2762,"isOffset":false,"isSlot":false,"src":"2588:9:18","valueSize":1},{"declaration":2762,"isOffset":false,"isSlot":false,"src":"2637:9:18","valueSize":1},{"declaration":2762,"isOffset":false,"isSlot":false,"src":"2694:9:18","valueSize":1},{"declaration":2781,"isOffset":false,"isSlot":false,"src":"2671:1:18","valueSize":1}],"id":2783,"nodeType":"InlineAssembly","src":"2546:180:18"},{"expression":{"arguments":[{"id":2785,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"2757:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2786,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"2763:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2787,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"2766:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2788,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"2769:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2784,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2803,2877,2971],"referencedDeclaration":2971,"src":"2746:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2769,"id":2790,"nodeType":"Return","src":"2739:32:18"}]}}]},"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"1087:1053:18","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2803,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:18","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"hash","nameLocation":"2173:4:18","nodeType":"VariableDeclaration","scope":2803,"src":"2165:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"signature","nameLocation":"2192:9:18","nodeType":"VariableDeclaration","scope":2803,"src":"2179:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2761,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:18"},"returnParameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2803,"src":"2226:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2764,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2803,"src":"2235:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2767,"nodeType":"UserDefinedTypeName","pathNode":{"id":2766,"name":"RecoverError","nameLocations":["2235:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2713,"src":"2235:12:18"},"referencedDeclaration":2713,"src":"2235:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:18"},"scope":3069,"src":"2145:730:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2829,"nodeType":"Block","src":"3748:140:18","statements":[{"assignments":[2814,2817],"declarations":[{"constant":false,"id":2814,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:18","nodeType":"VariableDeclaration","scope":2829,"src":"3759:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2813,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"error","nameLocation":"3791:5:18","nodeType":"VariableDeclaration","scope":2829,"src":"3778:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2816,"nodeType":"UserDefinedTypeName","pathNode":{"id":2815,"name":"RecoverError","nameLocations":["3778:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2713,"src":"3778:12:18"},"referencedDeclaration":2713,"src":"3778:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2822,"initialValue":{"arguments":[{"id":2819,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"3811:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2820,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"3817:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2818,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2803,2877,2971],"referencedDeclaration":2803,"src":"3800:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:18"},{"expression":{"arguments":[{"id":2824,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"3849:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}],"id":2823,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"3837:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2713_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2826,"nodeType":"ExpressionStatement","src":"3837:18:18"},{"expression":{"id":2827,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"3872:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2812,"id":2828,"nodeType":"Return","src":"3865:16:18"}]},"documentation":{"id":2804,"nodeType":"StructuredDocumentation","src":"2881:775:18","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:18","nodeType":"FunctionDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"hash","nameLocation":"3686:4:18","nodeType":"VariableDeclaration","scope":2830,"src":"3678:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"signature","nameLocation":"3705:9:18","nodeType":"VariableDeclaration","scope":2830,"src":"3692:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2807,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:18"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2830,"src":"3739:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2810,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:18"},"scope":3069,"src":"3661:227:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2876,"nodeType":"Block","src":"4245:203:18","statements":[{"assignments":[2846],"declarations":[{"constant":false,"id":2846,"mutability":"mutable","name":"s","nameLocation":"4263:1:18","nodeType":"VariableDeclaration","scope":2876,"src":"4255:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2853,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2847,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"4267:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:18","typeDescriptions":{}}},"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:18"},{"assignments":[2855],"declarations":[{"constant":false,"id":2855,"mutability":"mutable","name":"v","nameLocation":"4363:1:18","nodeType":"VariableDeclaration","scope":2876,"src":"4357:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2854,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2868,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2860,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"4382:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:18","typeDescriptions":{}}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:18","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2856,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:18","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:18"},{"expression":{"arguments":[{"id":2870,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"4427:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2871,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"4433:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2872,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"4436:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2873,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"4439:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2869,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2803,2877,2971],"referencedDeclaration":2971,"src":"4416:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2844,"id":2875,"nodeType":"Return","src":"4409:32:18"}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"3894:243:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2877,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:18","nodeType":"FunctionDefinition","parameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"hash","nameLocation":"4170:4:18","nodeType":"VariableDeclaration","scope":2877,"src":"4162:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"r","nameLocation":"4184:1:18","nodeType":"VariableDeclaration","scope":2877,"src":"4176:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2837,"mutability":"mutable","name":"vs","nameLocation":"4195:2:18","nodeType":"VariableDeclaration","scope":2877,"src":"4187:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:18"},"returnParameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2877,"src":"4222:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2839,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2877,"src":"4231:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2842,"nodeType":"UserDefinedTypeName","pathNode":{"id":2841,"name":"RecoverError","nameLocations":["4231:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2713,"src":"4231:12:18"},"referencedDeclaration":2713,"src":"4231:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:18"},"scope":3069,"src":"4142:306:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2906,"nodeType":"Block","src":"4699:136:18","statements":[{"assignments":[2890,2893],"declarations":[{"constant":false,"id":2890,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:18","nodeType":"VariableDeclaration","scope":2906,"src":"4710:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2893,"mutability":"mutable","name":"error","nameLocation":"4742:5:18","nodeType":"VariableDeclaration","scope":2906,"src":"4729:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2892,"nodeType":"UserDefinedTypeName","pathNode":{"id":2891,"name":"RecoverError","nameLocations":["4729:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2713,"src":"4729:12:18"},"referencedDeclaration":2713,"src":"4729:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2899,"initialValue":{"arguments":[{"id":2895,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"4762:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2896,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"4768:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2897,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"4771:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2894,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2803,2877,2971],"referencedDeclaration":2877,"src":"4751:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:18"},{"expression":{"arguments":[{"id":2901,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"4796:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}],"id":2900,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"4784:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2713_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2903,"nodeType":"ExpressionStatement","src":"4784:18:18"},{"expression":{"id":2904,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"4819:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2888,"id":2905,"nodeType":"Return","src":"4812:16:18"}]},"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"4454:154:18","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2907,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:18","nodeType":"FunctionDefinition","parameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"hash","nameLocation":"4638:4:18","nodeType":"VariableDeclaration","scope":2907,"src":"4630:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2882,"mutability":"mutable","name":"r","nameLocation":"4652:1:18","nodeType":"VariableDeclaration","scope":2907,"src":"4644:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2884,"mutability":"mutable","name":"vs","nameLocation":"4663:2:18","nodeType":"VariableDeclaration","scope":2907,"src":"4655:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:18"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2907,"src":"4690:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2886,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:18"},"scope":3069,"src":"4613:222:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2970,"nodeType":"Block","src":"5120:1345:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2926,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"6016:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:18","typeDescriptions":{}}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2939,"nodeType":"IfStatement","src":"6004:161:18","trueBody":{"id":2938,"nodeType":"Block","src":"6089:76:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:18","typeDescriptions":{}}},"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2934,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"6123:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2713_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2711,"src":"6123:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}}],"id":2936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2923,"id":2937,"nodeType":"Return","src":"6103:51:18"}]}},{"assignments":[2941],"declarations":[{"constant":false,"id":2941,"mutability":"mutable","name":"signer","nameLocation":"6267:6:18","nodeType":"VariableDeclaration","scope":2970,"src":"6259:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2940,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2948,"initialValue":{"arguments":[{"id":2943,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"6286:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2944,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"6292:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2945,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"6295:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2946,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"6298:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2942,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:18","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"6314:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2950,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:18","typeDescriptions":{}}},"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2964,"nodeType":"IfStatement","src":"6310:101:18","trueBody":{"id":2963,"nodeType":"Block","src":"6336:75:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:18","typeDescriptions":{}}},"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2959,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"6370:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2713_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2709,"src":"6370:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}}],"id":2961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2923,"id":2962,"nodeType":"Return","src":"6350:50:18"}]}},{"expression":{"components":[{"id":2965,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"6429:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2966,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"6437:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2713_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2708,"src":"6437:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}}],"id":2968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2923,"id":2969,"nodeType":"Return","src":"6421:37:18"}]},"documentation":{"id":2908,"nodeType":"StructuredDocumentation","src":"4841:163:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2971,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:18","nodeType":"FunctionDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"hash","nameLocation":"5037:4:18","nodeType":"VariableDeclaration","scope":2971,"src":"5029:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2909,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"v","nameLocation":"5049:1:18","nodeType":"VariableDeclaration","scope":2971,"src":"5043:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2911,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"r","nameLocation":"5060:1:18","nodeType":"VariableDeclaration","scope":2971,"src":"5052:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2916,"mutability":"mutable","name":"s","nameLocation":"5071:1:18","nodeType":"VariableDeclaration","scope":2971,"src":"5063:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:18"},"returnParameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2971,"src":"5097:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2971,"src":"5106:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2921,"nodeType":"UserDefinedTypeName","pathNode":{"id":2920,"name":"RecoverError","nameLocations":["5106:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2713,"src":"5106:12:18"},"referencedDeclaration":2713,"src":"5106:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:18"},"scope":3069,"src":"5009:1456:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3003,"nodeType":"Block","src":"6692:138:18","statements":[{"assignments":[2986,2989],"declarations":[{"constant":false,"id":2986,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:18","nodeType":"VariableDeclaration","scope":3003,"src":"6703:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2985,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2989,"mutability":"mutable","name":"error","nameLocation":"6735:5:18","nodeType":"VariableDeclaration","scope":3003,"src":"6722:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2988,"nodeType":"UserDefinedTypeName","pathNode":{"id":2987,"name":"RecoverError","nameLocations":["6722:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2713,"src":"6722:12:18"},"referencedDeclaration":2713,"src":"6722:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2996,"initialValue":{"arguments":[{"id":2991,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"6755:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2992,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"6761:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2993,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"6764:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2994,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"6767:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2990,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2803,2877,2971],"referencedDeclaration":2971,"src":"6744:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2713_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:18"},{"expression":{"arguments":[{"id":2998,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"6791:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2713","typeString":"enum ECDSA.RecoverError"}],"id":2997,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"6779:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2713_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3000,"nodeType":"ExpressionStatement","src":"6779:18:18"},{"expression":{"id":3001,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"6814:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2984,"id":3002,"nodeType":"Return","src":"6807:16:18"}]},"documentation":{"id":2972,"nodeType":"StructuredDocumentation","src":"6471:122:18","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:18","nodeType":"FunctionDefinition","parameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"hash","nameLocation":"6623:4:18","nodeType":"VariableDeclaration","scope":3004,"src":"6615:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"v","nameLocation":"6635:1:18","nodeType":"VariableDeclaration","scope":3004,"src":"6629:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2975,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"r","nameLocation":"6646:1:18","nodeType":"VariableDeclaration","scope":3004,"src":"6638:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"s","nameLocation":"6657:1:18","nodeType":"VariableDeclaration","scope":3004,"src":"6649:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:18"},"returnParameters":{"id":2984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3004,"src":"6683:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2982,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:18"},"scope":3069,"src":"6598:232:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3013,"nodeType":"Block","src":"7206:310:18","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:18","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:18","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:18"},"nodeType":"YulFunctionCall","src":"7376:48:18"},"nodeType":"YulExpressionStatement","src":"7376:48:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:18","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:18"},"nodeType":"YulFunctionCall","src":"7437:18:18"},"nodeType":"YulExpressionStatement","src":"7437:18:18"},{"nodeType":"YulAssignment","src":"7468:32:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:18","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:18"},"nodeType":"YulFunctionCall","src":"7479:21:18"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3007,"isOffset":false,"isSlot":false,"src":"7450:4:18","valueSize":1},{"declaration":3010,"isOffset":false,"isSlot":false,"src":"7468:7:18","valueSize":1}],"id":3012,"nodeType":"InlineAssembly","src":"7353:157:18"}]},"documentation":{"id":3005,"nodeType":"StructuredDocumentation","src":"6836:279:18","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3014,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:18","nodeType":"FunctionDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"hash","nameLocation":"7160:4:18","nodeType":"VariableDeclaration","scope":3014,"src":"7152:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:18"},"returnParameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"message","nameLocation":"7197:7:18","nodeType":"VariableDeclaration","scope":3014,"src":"7189:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:18"},"scope":3069,"src":"7120:396:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3035,"nodeType":"Block","src":"7881:116:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":3028,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"7976:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:18","memberName":"length","nodeType":"MemberAccess","src":"7976:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3026,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"7959:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2703_$","typeString":"type(library Strings)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2533,"src":"7959:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3031,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"7987:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3023,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3022,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3021,"id":3034,"nodeType":"Return","src":"7891:99:18"}]},"documentation":{"id":3015,"nodeType":"StructuredDocumentation","src":"7522:274:18","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3036,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:18","nodeType":"FunctionDefinition","parameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"s","nameLocation":"7846:1:18","nodeType":"VariableDeclaration","scope":3036,"src":"7833:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3016,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:18"},"returnParameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3036,"src":"7872:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:18"},"scope":3069,"src":"7801:196:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3047,"nodeType":"Block","src":"8443:290:18","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:18"},"nodeType":"YulFunctionCall","src":"8530:11:18"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:18"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:18","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:18"},"nodeType":"YulFunctionCall","src":"8554:23:18"},"nodeType":"YulExpressionStatement","src":"8554:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:18","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:18"},"nodeType":"YulFunctionCall","src":"8597:14:18"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:18"},"nodeType":"YulFunctionCall","src":"8590:39:18"},"nodeType":"YulExpressionStatement","src":"8590:39:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:18"},"nodeType":"YulFunctionCall","src":"8649:14:18"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:18"},"nodeType":"YulFunctionCall","src":"8642:34:18"},"nodeType":"YulExpressionStatement","src":"8642:34:18"},{"nodeType":"YulAssignment","src":"8689:28:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:18","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:18"},"nodeType":"YulFunctionCall","src":"8697:20:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3044,"isOffset":false,"isSlot":false,"src":"8689:4:18","valueSize":1},{"declaration":3039,"isOffset":false,"isSlot":false,"src":"8613:15:18","valueSize":1},{"declaration":3041,"isOffset":false,"isSlot":false,"src":"8665:10:18","valueSize":1}],"id":3046,"nodeType":"InlineAssembly","src":"8496:231:18"}]},"documentation":{"id":3037,"nodeType":"StructuredDocumentation","src":"8003:328:18","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":3048,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:18","nodeType":"FunctionDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:18","nodeType":"VariableDeclaration","scope":3048,"src":"8361:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3041,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:18","nodeType":"VariableDeclaration","scope":3048,"src":"8386:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:18"},"returnParameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"data","nameLocation":"8437:4:18","nodeType":"VariableDeclaration","scope":3048,"src":"8429:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:18"},"scope":3069,"src":"8336:397:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3067,"nodeType":"Block","src":"9048:80:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3062,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"9104:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3063,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"9115:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3059,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3058,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3057,"id":3066,"nodeType":"Return","src":"9058:63:18"}]},"documentation":{"id":3049,"nodeType":"StructuredDocumentation","src":"8739:193:18","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":3068,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:18","nodeType":"FunctionDefinition","parameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"validator","nameLocation":"8986:9:18","nodeType":"VariableDeclaration","scope":3068,"src":"8978:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"data","nameLocation":"9010:4:18","nodeType":"VariableDeclaration","scope":3068,"src":"8997:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3052,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:18"},"returnParameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"9039:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:18"},"scope":3069,"src":"8937:191:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3070,"src":"369:8761:18","usedErrors":[],"usedEvents":[]}],"src":"112:9019:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[3069],"EIP712":[3273],"IERC5267":[215],"Math":[4139],"ShortString":[2153],"ShortStrings":[2364],"SignedMath":[5785],"StorageSlot":[2474],"Strings":[2703]},"id":3274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3071,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":3072,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3274,"sourceUnit":3070,"src":"138:21:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3073,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3274,"sourceUnit":2365,"src":"160:29:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3074,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3274,"sourceUnit":216,"src":"190:39:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3076,"name":"IERC5267","nameLocations":["1837:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":215,"src":"1837:8:19"},"id":3077,"nodeType":"InheritanceSpecifier","src":"1837:8:19"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3075,"nodeType":"StructuredDocumentation","src":"231:1577:19","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":3273,"linearizedBaseContracts":[3273,215],"name":"EIP712","nameLocation":"1827:6:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3079,"libraryName":{"id":3078,"name":"ShortStrings","nameLocations":["1858:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2364,"src":"1858:12:19"},"nodeType":"UsingForDirective","src":"1852:25:19"},{"constant":true,"id":3084,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:19","nodeType":"VariableDeclaration","scope":3273,"src":"1883:141:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3081,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:95:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3086,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:19","nodeType":"VariableDeclaration","scope":3273,"src":"2223:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3088,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:19","nodeType":"VariableDeclaration","scope":3273,"src":"2277:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3090,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:19","nodeType":"VariableDeclaration","scope":3273,"src":"2323:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3089,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3092,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:19","nodeType":"VariableDeclaration","scope":3273,"src":"2367:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3094,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:19","nodeType":"VariableDeclaration","scope":3273,"src":"2410:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3097,"mutability":"immutable","name":"_name","nameLocation":"2487:5:19","nodeType":"VariableDeclaration","scope":3273,"src":"2457:35:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"},"typeName":{"id":3096,"nodeType":"UserDefinedTypeName","pathNode":{"id":3095,"name":"ShortString","nameLocations":["2457:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"2457:11:19"},"referencedDeclaration":2153,"src":"2457:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3100,"mutability":"immutable","name":"_version","nameLocation":"2528:8:19","nodeType":"VariableDeclaration","scope":3273,"src":"2498:38:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"},"typeName":{"id":3099,"nodeType":"UserDefinedTypeName","pathNode":{"id":3098,"name":"ShortString","nameLocations":["2498:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"2498:11:19"},"referencedDeclaration":2153,"src":"2498:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3102,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:19","nodeType":"VariableDeclaration","scope":3273,"src":"2542:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3101,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3104,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:19","nodeType":"VariableDeclaration","scope":3273,"src":"2576:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3103,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3161,"nodeType":"Block","src":"3233:376:19","statements":[{"expression":{"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3112,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"3243:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3115,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"3282:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3113,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"3251:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"3251:30:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2153_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"src":"3243:53:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"id":3118,"nodeType":"ExpressionStatement","src":"3243:53:19"},{"expression":{"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3119,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"3306:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3122,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"3351:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3120,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3317:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2305,"src":"3317:33:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2153_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"src":"3306:62:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"id":3125,"nodeType":"ExpressionStatement","src":"3306:62:19"},{"expression":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"3378:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3130,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"3408:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3128,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:19","typeDescriptions":{}}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3127,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3134,"nodeType":"ExpressionStatement","src":"3378:36:19"},{"expression":{"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3135,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"3424:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3139,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3457:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3137,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:19","typeDescriptions":{}}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3136,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3143,"nodeType":"ExpressionStatement","src":"3424:42:19"},{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3144,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"3477:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3145,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3148,"nodeType":"ExpressionStatement","src":"3477:30:19"},{"expression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3149,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"3517:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3150,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"3542:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3153,"nodeType":"ExpressionStatement","src":"3517:48:19"},{"expression":{"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3154,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"3575:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3157,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3273","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3273","typeString":"contract EIP712"}],"id":3156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3155,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:19","typeDescriptions":{}}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3160,"nodeType":"ExpressionStatement","src":"3575:27:19"}]},"documentation":{"id":3105,"nodeType":"StructuredDocumentation","src":"2614:559:19","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3162,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3107,"mutability":"mutable","name":"name","nameLocation":"3204:4:19","nodeType":"VariableDeclaration","scope":3162,"src":"3190:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3106,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3109,"mutability":"mutable","name":"version","nameLocation":"3224:7:19","nodeType":"VariableDeclaration","scope":3162,"src":"3210:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3108,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:19"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[],"src":"3233:0:19"},"scope":3273,"src":"3178:431:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3187,"nodeType":"Block","src":"3757:200:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3170,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3273","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3273","typeString":"contract EIP712"}],"id":3169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3168,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:19","typeDescriptions":{}}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3172,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"3788:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3174,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3176,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"3820:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3185,"nodeType":"Block","src":"3896:55:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3182,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"3917:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3167,"id":3184,"nodeType":"Return","src":"3910:30:19"}]},"id":3186,"nodeType":"IfStatement","src":"3767:184:19","trueBody":{"id":3181,"nodeType":"Block","src":"3836:54:19","statements":[{"expression":{"id":3179,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"3857:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3167,"id":3180,"nodeType":"Return","src":"3850:29:19"}]}}]},"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"3615:75:19","text":" @dev Returns the domain separator for the current chain."},"id":3188,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:19","nodeType":"FunctionDefinition","parameters":{"id":3164,"nodeType":"ParameterList","parameters":[],"src":"3722:2:19"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3188,"src":"3748:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:19"},"scope":3273,"src":"3695:262:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3208,"nodeType":"Block","src":"4027:116:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3196,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"4065:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3197,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"4077:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3198,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"4090:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3199,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3203,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3273","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3273","typeString":"contract EIP712"}],"id":3202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:19","typeDescriptions":{}}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3194,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4058:6:19","memberName":"encode","nodeType":"MemberAccess","src":"4054:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:81:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3193,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:92:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3192,"id":3207,"nodeType":"Return","src":"4037:99:19"}]},"id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:19","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[],"src":"3993:2:19"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3209,"src":"4018:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:19"},"scope":3273,"src":"3963:180:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3224,"nodeType":"Block","src":"4854:79:19","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3219,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"4893:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3221,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"4915:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3217,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"4871:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3069_$","typeString":"type(library ECDSA)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4877:15:19","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3048,"src":"4871:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3216,"id":3223,"nodeType":"Return","src":"4864:62:19"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"4149:614:19","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3225,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:19","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:19","nodeType":"VariableDeclaration","scope":3225,"src":"4794:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:19"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3225,"src":"4845:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:19"},"scope":3273,"src":"4768:165:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[214],"body":{"id":3271,"nodeType":"Block","src":"5366:288:19","statements":[{"expression":{"components":[{"hexValue":"0f","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":3248,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"5454:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3246,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"5427:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5433:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2332,"src":"5427:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2153_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2153_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":3252,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"5512:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3250,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"5482:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2153","typeString":"ShortString"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2332,"src":"5482:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2153_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2153_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3254,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5549:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3258,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3273","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3273","typeString":"contract EIP712"}],"id":3257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3256,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:19","typeDescriptions":{}}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:19","typeDescriptions":{}}},"id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3265,"nodeType":"ArrayTypeName","src":"5625:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5621:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3244,"id":3270,"nodeType":"Return","src":"5376:271:19"}]},"documentation":{"id":3226,"nodeType":"StructuredDocumentation","src":"4939:77:19","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":3272,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:19","nodeType":"FunctionDefinition","overrides":{"id":3228,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:19"},"parameters":{"id":3227,"nodeType":"ParameterList","parameters":[],"src":"5042:2:19"},"returnParameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"fields","nameLocation":"5143:6:19","nodeType":"VariableDeclaration","scope":3272,"src":"5136:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3229,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"name","nameLocation":"5177:4:19","nodeType":"VariableDeclaration","scope":3272,"src":"5163:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3231,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3234,"mutability":"mutable","name":"version","nameLocation":"5209:7:19","nodeType":"VariableDeclaration","scope":3272,"src":"5195:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3233,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:19","nodeType":"VariableDeclaration","scope":3272,"src":"5230:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3238,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:19","nodeType":"VariableDeclaration","scope":3272,"src":"5259:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3237,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"salt","nameLocation":"5306:4:19","nodeType":"VariableDeclaration","scope":3272,"src":"5298:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3243,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:19","nodeType":"VariableDeclaration","scope":3272,"src":"5324:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3241,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3242,"nodeType":"ArrayTypeName","src":"5324:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:19"},"scope":3273,"src":"5021:633:19","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3274,"src":"1809:3847:19","usedErrors":[2161,2163],"usedEvents":[195]}],"src":"113:5544:19"},"id":19},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4139]},"id":4140,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3275,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"128:73:20","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4139,"linearizedBaseContracts":[4139],"name":"Math","nameLocation":"210:4:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3280,"members":[{"id":3277,"name":"Down","nameLocation":"245:4:20","nodeType":"EnumValue","src":"245:4:20"},{"id":3278,"name":"Up","nameLocation":"287:2:20","nodeType":"EnumValue","src":"287:2:20"},{"id":3279,"name":"Zero","nameLocation":"318:4:20","nodeType":"EnumValue","src":"318:4:20"}],"name":"Rounding","nameLocation":"226:8:20","nodeType":"EnumDefinition","src":"221:122:20"},{"body":{"id":3297,"nodeType":"Block","src":"480:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"497:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3291,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"501:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3294,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"509:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:20","trueExpression":{"id":3293,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"505:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3289,"id":3296,"nodeType":"Return","src":"490:20:20"}]},"documentation":{"id":3281,"nodeType":"StructuredDocumentation","src":"349:59:20","text":" @dev Returns the largest of two numbers."},"id":3298,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:20","nodeType":"FunctionDefinition","parameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"a","nameLocation":"434:1:20","nodeType":"VariableDeclaration","scope":3298,"src":"426:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"b","nameLocation":"445:1:20","nodeType":"VariableDeclaration","scope":3298,"src":"437:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:20"},"returnParameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3298,"src":"471:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:20"},"scope":4139,"src":"413:104:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3315,"nodeType":"Block","src":"655:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"672:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3309,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"676:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3312,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"684:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:20","trueExpression":{"id":3311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"680:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3307,"id":3314,"nodeType":"Return","src":"665:20:20"}]},"documentation":{"id":3299,"nodeType":"StructuredDocumentation","src":"523:60:20","text":" @dev Returns the smallest of two numbers."},"id":3316,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:20","nodeType":"FunctionDefinition","parameters":{"id":3304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3301,"mutability":"mutable","name":"a","nameLocation":"609:1:20","nodeType":"VariableDeclaration","scope":3316,"src":"601:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3303,"mutability":"mutable","name":"b","nameLocation":"620:1:20","nodeType":"VariableDeclaration","scope":3316,"src":"612:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:20"},"returnParameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3316,"src":"646:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:20"},"scope":4139,"src":"588:104:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3338,"nodeType":"Block","src":"876:82:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"931:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3327,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"935:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"941:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3331,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"945:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3325,"id":3337,"nodeType":"Return","src":"923:28:20"}]},"documentation":{"id":3317,"nodeType":"StructuredDocumentation","src":"698:102:20","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:20","nodeType":"FunctionDefinition","parameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"a","nameLocation":"830:1:20","nodeType":"VariableDeclaration","scope":3339,"src":"822:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3321,"mutability":"mutable","name":"b","nameLocation":"841:1:20","nodeType":"VariableDeclaration","scope":3339,"src":"833:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:20"},"returnParameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"867:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:20"},"scope":4139,"src":"805:153:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3363,"nodeType":"Block","src":"1228:123:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"1316:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3353,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"1330:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3357,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"1339:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:20","trueExpression":{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3348,"id":3362,"nodeType":"Return","src":"1309:35:20"}]},"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"964:188:20","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3364,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:20","nodeType":"FunctionDefinition","parameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"a","nameLocation":"1182:1:20","nodeType":"VariableDeclaration","scope":3364,"src":"1174:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"b","nameLocation":"1193:1:20","nodeType":"VariableDeclaration","scope":3364,"src":"1185:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:20"},"returnParameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3364,"src":"1219:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:20"},"scope":4139,"src":"1157:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3486,"nodeType":"Block","src":"1765:4115:20","statements":[{"id":3485,"nodeType":"UncheckedBlock","src":"1775:4099:20","statements":[{"assignments":[3377],"declarations":[{"constant":false,"id":3377,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:20","nodeType":"VariableDeclaration","scope":3485,"src":"2096:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3378,"nodeType":"VariableDeclarationStatement","src":"2096:13:20"},{"assignments":[3380],"declarations":[{"constant":false,"id":3380,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:20","nodeType":"VariableDeclaration","scope":3485,"src":"2168:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3381,"nodeType":"VariableDeclarationStatement","src":"2168:13:20"},{"AST":{"nodeType":"YulBlock","src":"2248:157:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:20"},"nodeType":"YulFunctionCall","src":"2289:6:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:20"},"nodeType":"YulFunctionCall","src":"2276:20:20"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:20","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:20"},"nodeType":"YulFunctionCall","src":"2322:9:20"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:20"}]},{"nodeType":"YulAssignment","src":"2348:43:20","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:20"},"nodeType":"YulFunctionCall","src":"2361:14:20"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:20"},"nodeType":"YulFunctionCall","src":"2377:13:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:20"},"nodeType":"YulFunctionCall","src":"2357:34:20"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3377,"isOffset":false,"isSlot":false,"src":"2313:5:20","valueSize":1},{"declaration":3377,"isOffset":false,"isSlot":false,"src":"2369:5:20","valueSize":1},{"declaration":3377,"isOffset":false,"isSlot":false,"src":"2384:5:20","valueSize":1},{"declaration":3380,"isOffset":false,"isSlot":false,"src":"2348:5:20","valueSize":1},{"declaration":3367,"isOffset":false,"isSlot":false,"src":"2283:1:20","valueSize":1},{"declaration":3367,"isOffset":false,"isSlot":false,"src":"2326:1:20","valueSize":1},{"declaration":3369,"isOffset":false,"isSlot":false,"src":"2286:1:20","valueSize":1},{"declaration":3369,"isOffset":false,"isSlot":false,"src":"2329:1:20","valueSize":1}],"id":3382,"nodeType":"InlineAssembly","src":"2239:166:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"2486:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3391,"nodeType":"IfStatement","src":"2482:368:20","trueBody":{"id":3390,"nodeType":"Block","src":"2498:352:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3386,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"2816:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3387,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"2824:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3375,"id":3389,"nodeType":"Return","src":"2809:26:20"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3393,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"2960:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3394,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"2974:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3398,"nodeType":"ExpressionStatement","src":"2952:53:20"},{"assignments":[3400],"declarations":[{"constant":false,"id":3400,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:20","nodeType":"VariableDeclaration","scope":3485,"src":"3261:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3401,"nodeType":"VariableDeclarationStatement","src":"3261:17:20"},{"AST":{"nodeType":"YulBlock","src":"3301:291:20","statements":[{"nodeType":"YulAssignment","src":"3370:38:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:20"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:20"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:20"},"nodeType":"YulFunctionCall","src":"3383:25:20"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:20"}]},{"nodeType":"YulAssignment","src":"3490:41:20","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:20"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:20"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:20"},"nodeType":"YulFunctionCall","src":"3510:20:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:20"},"nodeType":"YulFunctionCall","src":"3499:32:20"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:20"}]},{"nodeType":"YulAssignment","src":"3548:30:20","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:20"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:20"},"nodeType":"YulFunctionCall","src":"3557:21:20"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3371,"isOffset":false,"isSlot":false,"src":"3396:11:20","valueSize":1},{"declaration":3377,"isOffset":false,"isSlot":false,"src":"3524:5:20","valueSize":1},{"declaration":3377,"isOffset":false,"isSlot":false,"src":"3548:5:20","valueSize":1},{"declaration":3377,"isOffset":false,"isSlot":false,"src":"3561:5:20","valueSize":1},{"declaration":3380,"isOffset":false,"isSlot":false,"src":"3490:5:20","valueSize":1},{"declaration":3380,"isOffset":false,"isSlot":false,"src":"3503:5:20","valueSize":1},{"declaration":3400,"isOffset":false,"isSlot":false,"src":"3370:9:20","valueSize":1},{"declaration":3400,"isOffset":false,"isSlot":false,"src":"3513:9:20","valueSize":1},{"declaration":3400,"isOffset":false,"isSlot":false,"src":"3568:9:20","valueSize":1},{"declaration":3367,"isOffset":false,"isSlot":false,"src":"3390:1:20","valueSize":1},{"declaration":3369,"isOffset":false,"isSlot":false,"src":"3393:1:20","valueSize":1}],"id":3402,"nodeType":"InlineAssembly","src":"3292:300:20"},{"assignments":[3404],"declarations":[{"constant":false,"id":3404,"mutability":"mutable","name":"twos","nameLocation":"3907:4:20","nodeType":"VariableDeclaration","scope":3485,"src":"3899:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3412,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3405,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"3914:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:20","subExpression":{"id":3406,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"3930:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:20"},{"AST":{"nodeType":"YulBlock","src":"3969:362:20","statements":[{"nodeType":"YulAssignment","src":"4034:37:20","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:20"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:20"},"nodeType":"YulFunctionCall","src":"4049:22:20"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:20"}]},{"nodeType":"YulAssignment","src":"4138:25:20","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:20"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:20"},"nodeType":"YulFunctionCall","src":"4147:16:20"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:20"}]},{"nodeType":"YulAssignment","src":"4278:39:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:20","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:20"},"nodeType":"YulFunctionCall","src":"4294:12:20"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:20"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:20"},"nodeType":"YulFunctionCall","src":"4290:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:20"},"nodeType":"YulFunctionCall","src":"4286:31:20"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3371,"isOffset":false,"isSlot":false,"src":"4034:11:20","valueSize":1},{"declaration":3371,"isOffset":false,"isSlot":false,"src":"4053:11:20","valueSize":1},{"declaration":3377,"isOffset":false,"isSlot":false,"src":"4138:5:20","valueSize":1},{"declaration":3377,"isOffset":false,"isSlot":false,"src":"4151:5:20","valueSize":1},{"declaration":3404,"isOffset":false,"isSlot":false,"src":"4066:4:20","valueSize":1},{"declaration":3404,"isOffset":false,"isSlot":false,"src":"4158:4:20","valueSize":1},{"declaration":3404,"isOffset":false,"isSlot":false,"src":"4278:4:20","valueSize":1},{"declaration":3404,"isOffset":false,"isSlot":false,"src":"4301:4:20","valueSize":1},{"declaration":3404,"isOffset":false,"isSlot":false,"src":"4308:4:20","valueSize":1}],"id":3413,"nodeType":"InlineAssembly","src":"3960:371:20"},{"expression":{"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3414,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"4397:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"4406:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3416,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"4414:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3419,"nodeType":"ExpressionStatement","src":"4397:21:20"},{"assignments":[3421],"declarations":[{"constant":false,"id":3421,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:20","nodeType":"VariableDeclaration","scope":3485,"src":"4736:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3428,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3423,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"4759:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:20"},{"expression":{"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3429,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"4992:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"5007:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3432,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5021:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3436,"nodeType":"ExpressionStatement","src":"4992:36:20"},{"expression":{"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3437,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5061:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3439,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"5076:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3440,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5090:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3444,"nodeType":"ExpressionStatement","src":"5061:36:20"},{"expression":{"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3445,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5131:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3447,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"5146:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3448,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5160:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3452,"nodeType":"ExpressionStatement","src":"5131:36:20"},{"expression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3453,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5201:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"5216:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3456,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5230:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3460,"nodeType":"ExpressionStatement","src":"5201:36:20"},{"expression":{"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3461,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5271:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3463,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"5286:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3464,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5300:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3468,"nodeType":"ExpressionStatement","src":"5271:36:20"},{"expression":{"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3469,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5342:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3471,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"5357:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3472,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5371:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3476,"nodeType":"ExpressionStatement","src":"5342:36:20"},{"expression":{"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"5812:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"5821:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3479,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"5829:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3482,"nodeType":"ExpressionStatement","src":"5812:24:20"},{"expression":{"id":3483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"5857:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3375,"id":3484,"nodeType":"Return","src":"5850:13:20"}]}]},"documentation":{"id":3365,"nodeType":"StructuredDocumentation","src":"1357:305:20","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3487,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:20","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"mutability":"mutable","name":"x","nameLocation":"1691:1:20","nodeType":"VariableDeclaration","scope":3487,"src":"1683:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3369,"mutability":"mutable","name":"y","nameLocation":"1702:1:20","nodeType":"VariableDeclaration","scope":3487,"src":"1694:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3371,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:20","nodeType":"VariableDeclaration","scope":3487,"src":"1705:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:20"},"returnParameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"result","nameLocation":"1757:6:20","nodeType":"VariableDeclaration","scope":3487,"src":"1749:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:20"},"scope":4139,"src":"1667:4213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3530,"nodeType":"Block","src":"6122:189:20","statements":[{"assignments":[3503],"declarations":[{"constant":false,"id":3503,"mutability":"mutable","name":"result","nameLocation":"6140:6:20","nodeType":"VariableDeclaration","scope":3530,"src":"6132:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3502,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3509,"initialValue":{"arguments":[{"id":3505,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"6156:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3506,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"6159:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3507,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"6162:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3504,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3487,3531],"referencedDeclaration":3487,"src":"6149:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3510,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"6188:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3511,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"6200:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3280_$","typeString":"type(enum Math.Rounding)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:20","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3278,"src":"6200:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"src":"6188:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3515,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"6222:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3516,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"6225:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3517,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"6228:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3514,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3527,"nodeType":"IfStatement","src":"6184:98:20","trueBody":{"id":3526,"nodeType":"Block","src":"6246:36:20","statements":[{"expression":{"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"6260:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3525,"nodeType":"ExpressionStatement","src":"6260:11:20"}]}},{"expression":{"id":3528,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"6298:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3501,"id":3529,"nodeType":"Return","src":"6291:13:20"}]},"documentation":{"id":3488,"nodeType":"StructuredDocumentation","src":"5886:121:20","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3531,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:20","nodeType":"FunctionDefinition","parameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"x","nameLocation":"6036:1:20","nodeType":"VariableDeclaration","scope":3531,"src":"6028:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"y","nameLocation":"6047:1:20","nodeType":"VariableDeclaration","scope":3531,"src":"6039:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:20","nodeType":"VariableDeclaration","scope":3531,"src":"6050:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3497,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:20","nodeType":"VariableDeclaration","scope":3531,"src":"6071:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"},"typeName":{"id":3496,"nodeType":"UserDefinedTypeName","pathNode":{"id":3495,"name":"Rounding","nameLocations":["6071:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3280,"src":"6071:8:20"},"referencedDeclaration":3280,"src":"6071:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:20"},"returnParameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3531,"src":"6113:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:20"},"scope":4139,"src":"6012:299:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3642,"nodeType":"Block","src":"6587:1585:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"6601:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3545,"nodeType":"IfStatement","src":"6597:45:20","trueBody":{"id":3544,"nodeType":"Block","src":"6609:33:20","statements":[{"expression":{"hexValue":"30","id":3542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3538,"id":3543,"nodeType":"Return","src":"6623:8:20"}]}},{"assignments":[3547],"declarations":[{"constant":false,"id":3547,"mutability":"mutable","name":"result","nameLocation":"7329:6:20","nodeType":"VariableDeclaration","scope":3642,"src":"7321:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3556,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"7349:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3549,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3811,3847],"referencedDeclaration":3811,"src":"7344:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:20"},{"id":3641,"nodeType":"UncheckedBlock","src":"7758:408:20","statements":[{"expression":{"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7782:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7792:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"7801:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7805:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3567,"nodeType":"ExpressionStatement","src":"7782:35:20"},{"expression":{"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7831:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7841:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3570,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"7850:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3571,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7854:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3578,"nodeType":"ExpressionStatement","src":"7831:35:20"},{"expression":{"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7880:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7890:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"7899:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7903:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3589,"nodeType":"ExpressionStatement","src":"7880:35:20"},{"expression":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7929:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7939:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3592,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"7948:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3593,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7952:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"nodeType":"ExpressionStatement","src":"7929:35:20"},{"expression":{"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7978:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3602,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"7988:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3603,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"7997:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"8001:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3611,"nodeType":"ExpressionStatement","src":"7978:35:20"},{"expression":{"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"8027:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"8037:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"8046:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"8050:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3622,"nodeType":"ExpressionStatement","src":"8027:35:20"},{"expression":{"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3623,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"8076:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"8086:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3625,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"8095:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"8099:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3633,"nodeType":"ExpressionStatement","src":"8076:35:20"},{"expression":{"arguments":[{"id":3635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"8136:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"8144:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3637,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"8148:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3634,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"8132:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3538,"id":3640,"nodeType":"Return","src":"8125:30:20"}]}]},"documentation":{"id":3532,"nodeType":"StructuredDocumentation","src":"6317:208:20","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3643,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:20","nodeType":"FunctionDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"a","nameLocation":"6552:1:20","nodeType":"VariableDeclaration","scope":3643,"src":"6544:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:20"},"returnParameters":{"id":3538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3643,"src":"6578:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:20"},"scope":4139,"src":"6530:1642:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3678,"nodeType":"Block","src":"8348:161:20","statements":[{"id":3677,"nodeType":"UncheckedBlock","src":"8358:145:20","statements":[{"assignments":[3655],"declarations":[{"constant":false,"id":3655,"mutability":"mutable","name":"result","nameLocation":"8390:6:20","nodeType":"VariableDeclaration","scope":3677,"src":"8382:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3659,"initialValue":{"arguments":[{"id":3657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"8404:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3656,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3643,3679],"referencedDeclaration":3643,"src":"8399:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"8427:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"},"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3661,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"8437:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3662,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"8449:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3280_$","typeString":"type(enum Math.Rounding)"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:20","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3278,"src":"8449:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"src":"8437:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"8464:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"8473:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"8482:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:20","trueExpression":{"hexValue":"31","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3653,"id":3676,"nodeType":"Return","src":"8420:72:20"}]}]},"documentation":{"id":3644,"nodeType":"StructuredDocumentation","src":"8178:89:20","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3679,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:20","nodeType":"FunctionDefinition","parameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"a","nameLocation":"8294:1:20","nodeType":"VariableDeclaration","scope":3679,"src":"8286:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3649,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:20","nodeType":"VariableDeclaration","scope":3679,"src":"8297:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"},"typeName":{"id":3648,"nodeType":"UserDefinedTypeName","pathNode":{"id":3647,"name":"Rounding","nameLocations":["8297:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3280,"src":"8297:8:20"},"referencedDeclaration":3280,"src":"8297:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:20"},"returnParameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3679,"src":"8339:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:20"},"scope":4139,"src":"8272:237:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3810,"nodeType":"Block","src":"8694:922:20","statements":[{"assignments":[3688],"declarations":[{"constant":false,"id":3688,"mutability":"mutable","name":"result","nameLocation":"8712:6:20","nodeType":"VariableDeclaration","scope":3810,"src":"8704:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3690,"initialValue":{"hexValue":"30","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:20"},{"id":3807,"nodeType":"UncheckedBlock","src":"8732:855:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"8760:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3705,"nodeType":"IfStatement","src":"8756:99:20","trueBody":{"id":3704,"nodeType":"Block","src":"8778:77:20","statements":[{"expression":{"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"8796:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3699,"nodeType":"ExpressionStatement","src":"8796:13:20"},{"expression":{"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3700,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"8827:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3703,"nodeType":"ExpressionStatement","src":"8827:13:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"8872:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3720,"nodeType":"IfStatement","src":"8868:96:20","trueBody":{"id":3719,"nodeType":"Block","src":"8889:75:20","statements":[{"expression":{"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"8907:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3714,"nodeType":"ExpressionStatement","src":"8907:12:20"},{"expression":{"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3715,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"8937:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3718,"nodeType":"ExpressionStatement","src":"8937:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"8981:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3735,"nodeType":"IfStatement","src":"8977:96:20","trueBody":{"id":3734,"nodeType":"Block","src":"8998:75:20","statements":[{"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9016:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3729,"nodeType":"ExpressionStatement","src":"9016:12:20"},{"expression":{"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9046:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3733,"nodeType":"ExpressionStatement","src":"9046:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9090:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3750,"nodeType":"IfStatement","src":"9086:96:20","trueBody":{"id":3749,"nodeType":"Block","src":"9107:75:20","statements":[{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9125:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3744,"nodeType":"ExpressionStatement","src":"9125:12:20"},{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3745,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9155:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"9155:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9199:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"IfStatement","src":"9195:93:20","trueBody":{"id":3764,"nodeType":"Block","src":"9215:73:20","statements":[{"expression":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9233:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ExpressionStatement","src":"9233:11:20"},{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9262:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ExpressionStatement","src":"9262:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9305:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3780,"nodeType":"IfStatement","src":"9301:93:20","trueBody":{"id":3779,"nodeType":"Block","src":"9321:73:20","statements":[{"expression":{"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9339:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3774,"nodeType":"ExpressionStatement","src":"9339:11:20"},{"expression":{"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9368:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3778,"nodeType":"ExpressionStatement","src":"9368:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9411:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3795,"nodeType":"IfStatement","src":"9407:93:20","trueBody":{"id":3794,"nodeType":"Block","src":"9427:73:20","statements":[{"expression":{"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9445:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ExpressionStatement","src":"9445:11:20"},{"expression":{"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9474:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3793,"nodeType":"ExpressionStatement","src":"9474:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9517:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3806,"nodeType":"IfStatement","src":"9513:64:20","trueBody":{"id":3805,"nodeType":"Block","src":"9533:44:20","statements":[{"expression":{"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3801,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9551:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3804,"nodeType":"ExpressionStatement","src":"9551:11:20"}]}}]},{"expression":{"id":3808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9603:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3686,"id":3809,"nodeType":"Return","src":"9596:13:20"}]},"documentation":{"id":3680,"nodeType":"StructuredDocumentation","src":"8515:113:20","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3811,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:20","nodeType":"FunctionDefinition","parameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"value","nameLocation":"8655:5:20","nodeType":"VariableDeclaration","scope":3811,"src":"8647:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:20"},"returnParameters":{"id":3686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3811,"src":"8685:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:20"},"scope":4139,"src":"8633:983:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3846,"nodeType":"Block","src":"9849:165:20","statements":[{"id":3845,"nodeType":"UncheckedBlock","src":"9859:149:20","statements":[{"assignments":[3823],"declarations":[{"constant":false,"id":3823,"mutability":"mutable","name":"result","nameLocation":"9891:6:20","nodeType":"VariableDeclaration","scope":3845,"src":"9883:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3827,"initialValue":{"arguments":[{"id":3825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"9905:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3824,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3811,3847],"referencedDeclaration":3811,"src":"9900:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"9932:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3829,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"9942:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3830,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"9954:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3280_$","typeString":"type(enum Math.Rounding)"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:20","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3278,"src":"9954:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"src":"9942:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3834,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"9974:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"9983:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:20","trueExpression":{"hexValue":"31","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3821,"id":3844,"nodeType":"Return","src":"9925:72:20"}]}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"9622:142:20","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3847,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:20","nodeType":"FunctionDefinition","parameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"value","nameLocation":"9791:5:20","nodeType":"VariableDeclaration","scope":3847,"src":"9783:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3817,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:20","nodeType":"VariableDeclaration","scope":3847,"src":"9798:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"},"typeName":{"id":3816,"nodeType":"UserDefinedTypeName","pathNode":{"id":3815,"name":"Rounding","nameLocations":["9798:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3280,"src":"9798:8:20"},"referencedDeclaration":3280,"src":"9798:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:20"},"returnParameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3847,"src":"9840:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:20"},"scope":4139,"src":"9769:245:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3975,"nodeType":"Block","src":"10201:854:20","statements":[{"assignments":[3856],"declarations":[{"constant":false,"id":3856,"mutability":"mutable","name":"result","nameLocation":"10219:6:20","nodeType":"VariableDeclaration","scope":3975,"src":"10211:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3858,"initialValue":{"hexValue":"30","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:20"},{"id":3972,"nodeType":"UncheckedBlock","src":"10239:787:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10267:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3875,"nodeType":"IfStatement","src":"10263:103:20","trueBody":{"id":3874,"nodeType":"Block","src":"10286:80:20","statements":[{"expression":{"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10304:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3869,"nodeType":"ExpressionStatement","src":"10304:17:20"},{"expression":{"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10339:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3873,"nodeType":"ExpressionStatement","src":"10339:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10383:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3892,"nodeType":"IfStatement","src":"10379:103:20","trueBody":{"id":3891,"nodeType":"Block","src":"10402:80:20","statements":[{"expression":{"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10420:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3886,"nodeType":"ExpressionStatement","src":"10420:17:20"},{"expression":{"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10455:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3890,"nodeType":"ExpressionStatement","src":"10455:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10499:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3909,"nodeType":"IfStatement","src":"10495:103:20","trueBody":{"id":3908,"nodeType":"Block","src":"10518:80:20","statements":[{"expression":{"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10536:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3903,"nodeType":"ExpressionStatement","src":"10536:17:20"},{"expression":{"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3904,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10571:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3907,"nodeType":"ExpressionStatement","src":"10571:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10615:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3926,"nodeType":"IfStatement","src":"10611:100:20","trueBody":{"id":3925,"nodeType":"Block","src":"10633:78:20","statements":[{"expression":{"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10651:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3920,"nodeType":"ExpressionStatement","src":"10651:16:20"},{"expression":{"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3921,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10685:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3924,"nodeType":"ExpressionStatement","src":"10685:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10728:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3943,"nodeType":"IfStatement","src":"10724:100:20","trueBody":{"id":3942,"nodeType":"Block","src":"10746:78:20","statements":[{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10764:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3937,"nodeType":"ExpressionStatement","src":"10764:16:20"},{"expression":{"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10798:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3941,"nodeType":"ExpressionStatement","src":"10798:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10841:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3960,"nodeType":"IfStatement","src":"10837:100:20","trueBody":{"id":3959,"nodeType":"Block","src":"10859:78:20","statements":[{"expression":{"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10877:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3954,"nodeType":"ExpressionStatement","src":"10877:16:20"},{"expression":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3955,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10911:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3958,"nodeType":"ExpressionStatement","src":"10911:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"10954:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3971,"nodeType":"IfStatement","src":"10950:66:20","trueBody":{"id":3970,"nodeType":"Block","src":"10972:44:20","statements":[{"expression":{"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3966,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"10990:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3969,"nodeType":"ExpressionStatement","src":"10990:11:20"}]}}]},{"expression":{"id":3973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"11042:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3854,"id":3974,"nodeType":"Return","src":"11035:13:20"}]},"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"10020:114:20","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3976,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:20","nodeType":"FunctionDefinition","parameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"value","nameLocation":"10162:5:20","nodeType":"VariableDeclaration","scope":3976,"src":"10154:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3849,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:20"},"returnParameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3976,"src":"10192:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:20"},"scope":4139,"src":"10139:916:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4011,"nodeType":"Block","src":"11290:167:20","statements":[{"id":4010,"nodeType":"UncheckedBlock","src":"11300:151:20","statements":[{"assignments":[3988],"declarations":[{"constant":false,"id":3988,"mutability":"mutable","name":"result","nameLocation":"11332:6:20","nodeType":"VariableDeclaration","scope":4010,"src":"11324:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3992,"initialValue":{"arguments":[{"id":3990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"11347:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3989,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3976,4012],"referencedDeclaration":3976,"src":"11341:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"11374:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3994,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"11384:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3995,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"11396:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3280_$","typeString":"type(enum Math.Rounding)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:20","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3278,"src":"11396:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"src":"11384:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3999,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"11417:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"11426:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:20","trueExpression":{"hexValue":"31","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3986,"id":4009,"nodeType":"Return","src":"11367:73:20"}]}]},"documentation":{"id":3977,"nodeType":"StructuredDocumentation","src":"11061:143:20","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4012,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:20","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3979,"mutability":"mutable","name":"value","nameLocation":"11232:5:20","nodeType":"VariableDeclaration","scope":4012,"src":"11224:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:20","nodeType":"VariableDeclaration","scope":4012,"src":"11239:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"},"typeName":{"id":3981,"nodeType":"UserDefinedTypeName","pathNode":{"id":3980,"name":"Rounding","nameLocations":["11239:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3280,"src":"11239:8:20"},"referencedDeclaration":3280,"src":"11239:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:20"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4012,"src":"11281:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:20"},"scope":4139,"src":"11209:248:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4098,"nodeType":"Block","src":"11771:600:20","statements":[{"assignments":[4021],"declarations":[{"constant":false,"id":4021,"mutability":"mutable","name":"result","nameLocation":"11789:6:20","nodeType":"VariableDeclaration","scope":4098,"src":"11781:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4023,"initialValue":{"hexValue":"30","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:20"},{"id":4095,"nodeType":"UncheckedBlock","src":"11809:533:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"11837:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4038,"nodeType":"IfStatement","src":"11833:98:20","trueBody":{"id":4037,"nodeType":"Block","src":"11855:76:20","statements":[{"expression":{"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"11873:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4032,"nodeType":"ExpressionStatement","src":"11873:13:20"},{"expression":{"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"11904:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4036,"nodeType":"ExpressionStatement","src":"11904:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"11948:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4053,"nodeType":"IfStatement","src":"11944:95:20","trueBody":{"id":4052,"nodeType":"Block","src":"11965:74:20","statements":[{"expression":{"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"11983:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4047,"nodeType":"ExpressionStatement","src":"11983:12:20"},{"expression":{"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"12013:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4051,"nodeType":"ExpressionStatement","src":"12013:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"12056:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4068,"nodeType":"IfStatement","src":"12052:95:20","trueBody":{"id":4067,"nodeType":"Block","src":"12073:74:20","statements":[{"expression":{"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"12091:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4062,"nodeType":"ExpressionStatement","src":"12091:12:20"},{"expression":{"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"12121:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4066,"nodeType":"ExpressionStatement","src":"12121:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"12164:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4083,"nodeType":"IfStatement","src":"12160:95:20","trueBody":{"id":4082,"nodeType":"Block","src":"12181:74:20","statements":[{"expression":{"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"12199:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4077,"nodeType":"ExpressionStatement","src":"12199:12:20"},{"expression":{"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"12229:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4081,"nodeType":"ExpressionStatement","src":"12229:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"12272:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4094,"nodeType":"IfStatement","src":"12268:64:20","trueBody":{"id":4093,"nodeType":"Block","src":"12288:44:20","statements":[{"expression":{"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"12306:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4092,"nodeType":"ExpressionStatement","src":"12306:11:20"}]}}]},{"expression":{"id":4096,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"12358:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4019,"id":4097,"nodeType":"Return","src":"12351:13:20"}]},"documentation":{"id":4013,"nodeType":"StructuredDocumentation","src":"11463:240:20","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4099,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:20","nodeType":"FunctionDefinition","parameters":{"id":4016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"value","nameLocation":"11732:5:20","nodeType":"VariableDeclaration","scope":4099,"src":"11724:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:20"},"returnParameters":{"id":4019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4099,"src":"11762:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:20"},"scope":4139,"src":"11708:663:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4137,"nodeType":"Block","src":"12608:174:20","statements":[{"id":4136,"nodeType":"UncheckedBlock","src":"12618:158:20","statements":[{"assignments":[4111],"declarations":[{"constant":false,"id":4111,"mutability":"mutable","name":"result","nameLocation":"12650:6:20","nodeType":"VariableDeclaration","scope":4136,"src":"12642:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4110,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4115,"initialValue":{"arguments":[{"id":4113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"12666:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4112,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4099,4138],"referencedDeclaration":4099,"src":"12659:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4116,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"12693:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"12703:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4118,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"12715:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3280_$","typeString":"type(enum Math.Rounding)"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:20","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3278,"src":"12715:11:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"src":"12703:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"12736:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"12751:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:20","trueExpression":{"hexValue":"31","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4109,"id":4135,"nodeType":"Return","src":"12686:79:20"}]}]},"documentation":{"id":4100,"nodeType":"StructuredDocumentation","src":"12377:144:20","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4138,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:20","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4102,"mutability":"mutable","name":"value","nameLocation":"12550:5:20","nodeType":"VariableDeclaration","scope":4138,"src":"12542:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4101,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:20","nodeType":"VariableDeclaration","scope":4138,"src":"12557:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"},"typeName":{"id":4104,"nodeType":"UserDefinedTypeName","pathNode":{"id":4103,"name":"Rounding","nameLocations":["12557:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3280,"src":"12557:8:20"},"referencedDeclaration":3280,"src":"12557:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3280","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:20"},"returnParameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4138,"src":"12599:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:20"},"scope":4139,"src":"12526:256:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4140,"src":"202:12582:20","usedErrors":[],"usedEvents":[]}],"src":"103:12682:20"},"id":20},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5680]},"id":5681,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4141,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4142,"nodeType":"StructuredDocumentation","src":"217:709:21","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":5680,"linearizedBaseContracts":[5680],"name":"SafeCast","nameLocation":"935:8:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":4166,"nodeType":"Block","src":"1339:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"1357:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4153,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1380:3:21","memberName":"max","nodeType":"MemberAccess","src":"1366:17:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4150,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4160,"nodeType":"ExpressionStatement","src":"1349:78:21"},{"expression":{"arguments":[{"id":4163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"1452:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4161,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:21","typeDescriptions":{}}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4149,"id":4165,"nodeType":"Return","src":"1437:21:21"}]},"documentation":{"id":4143,"nodeType":"StructuredDocumentation","src":"950:318:21","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:21","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"value","nameLocation":"1300:5:21","nodeType":"VariableDeclaration","scope":4167,"src":"1292:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:21"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"1330:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4147,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:21","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:21"},"scope":5680,"src":"1273:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4191,"nodeType":"Block","src":"1860:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"1878:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4178,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4177,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1901:3:21","memberName":"max","nodeType":"MemberAccess","src":"1887:17:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1870:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4185,"nodeType":"ExpressionStatement","src":"1870:78:21"},{"expression":{"arguments":[{"id":4188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"1973:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4186,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:21","typeDescriptions":{}}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4174,"id":4190,"nodeType":"Return","src":"1958:21:21"}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"1471:318:21","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4192,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:21","nodeType":"FunctionDefinition","parameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"value","nameLocation":"1821:5:21","nodeType":"VariableDeclaration","scope":4192,"src":"1813:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:21"},"returnParameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4192,"src":"1851:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4172,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:21","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:21"},"scope":5680,"src":"1794:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4216,"nodeType":"Block","src":"2381:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"2399:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4203,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4202,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2408:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2422:3:21","memberName":"max","nodeType":"MemberAccess","src":"2408:17:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4210,"nodeType":"ExpressionStatement","src":"2391:78:21"},{"expression":{"arguments":[{"id":4213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"2494:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4211,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:21","typeDescriptions":{}}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2486:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4199,"id":4215,"nodeType":"Return","src":"2479:21:21"}]},"documentation":{"id":4193,"nodeType":"StructuredDocumentation","src":"1992:318:21","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4217,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:21","nodeType":"FunctionDefinition","parameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"value","nameLocation":"2342:5:21","nodeType":"VariableDeclaration","scope":4217,"src":"2334:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:21"},"returnParameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4217,"src":"2372:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4197,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:21","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:21"},"scope":5680,"src":"2315:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"2902:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"2920:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4228,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4227,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2929:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2943:3:21","memberName":"max","nodeType":"MemberAccess","src":"2929:17:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4235,"nodeType":"ExpressionStatement","src":"2912:78:21"},{"expression":{"arguments":[{"id":4238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"3015:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4236,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:21","typeDescriptions":{}}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4224,"id":4240,"nodeType":"Return","src":"3000:21:21"}]},"documentation":{"id":4218,"nodeType":"StructuredDocumentation","src":"2513:318:21","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:21","nodeType":"FunctionDefinition","parameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"value","nameLocation":"2863:5:21","nodeType":"VariableDeclaration","scope":4242,"src":"2855:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:21"},"returnParameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4242,"src":"2893:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4222,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:21","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:21"},"scope":5680,"src":"2836:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4266,"nodeType":"Block","src":"3423:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"3441:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4253,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4252,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3464:3:21","memberName":"max","nodeType":"MemberAccess","src":"3450:17:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4260,"nodeType":"ExpressionStatement","src":"3433:78:21"},{"expression":{"arguments":[{"id":4263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"3536:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4261,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:21","typeDescriptions":{}}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4249,"id":4265,"nodeType":"Return","src":"3521:21:21"}]},"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"3034:318:21","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4267,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:21","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"value","nameLocation":"3384:5:21","nodeType":"VariableDeclaration","scope":4267,"src":"3376:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:21"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4267,"src":"3414:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4247,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:21","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:21"},"scope":5680,"src":"3357:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4291,"nodeType":"Block","src":"3944:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"3962:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4278,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4277,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3985:3:21","memberName":"max","nodeType":"MemberAccess","src":"3971:17:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4285,"nodeType":"ExpressionStatement","src":"3954:78:21"},{"expression":{"arguments":[{"id":4288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"4057:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4286,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:21","typeDescriptions":{}}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4274,"id":4290,"nodeType":"Return","src":"4042:21:21"}]},"documentation":{"id":4268,"nodeType":"StructuredDocumentation","src":"3555:318:21","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4292,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:21","nodeType":"FunctionDefinition","parameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"value","nameLocation":"3905:5:21","nodeType":"VariableDeclaration","scope":4292,"src":"3897:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:21"},"returnParameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4292,"src":"3935:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4272,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:21","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:21"},"scope":5680,"src":"3878:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4316,"nodeType":"Block","src":"4465:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"4483:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4303,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4506:3:21","memberName":"max","nodeType":"MemberAccess","src":"4492:17:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4300,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4310,"nodeType":"ExpressionStatement","src":"4475:78:21"},{"expression":{"arguments":[{"id":4313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"4578:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4311,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:21","typeDescriptions":{}}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4299,"id":4315,"nodeType":"Return","src":"4563:21:21"}]},"documentation":{"id":4293,"nodeType":"StructuredDocumentation","src":"4076:318:21","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4317,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:21","nodeType":"FunctionDefinition","parameters":{"id":4296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"value","nameLocation":"4426:5:21","nodeType":"VariableDeclaration","scope":4317,"src":"4418:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4294,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:21"},"returnParameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4317,"src":"4456:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4297,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:21","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:21"},"scope":5680,"src":"4399:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4341,"nodeType":"Block","src":"4986:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"5004:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4328,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4327,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5013:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5027:3:21","memberName":"max","nodeType":"MemberAccess","src":"5013:17:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4996:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4335,"nodeType":"ExpressionStatement","src":"4996:78:21"},{"expression":{"arguments":[{"id":4338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"5099:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4336,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:21","typeDescriptions":{}}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4324,"id":4340,"nodeType":"Return","src":"5084:21:21"}]},"documentation":{"id":4318,"nodeType":"StructuredDocumentation","src":"4597:318:21","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4342,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:21","nodeType":"FunctionDefinition","parameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"value","nameLocation":"4947:5:21","nodeType":"VariableDeclaration","scope":4342,"src":"4939:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:21"},"returnParameters":{"id":4324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4342,"src":"4977:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4322,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:21"},"scope":5680,"src":"4920:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4366,"nodeType":"Block","src":"5507:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"5525:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4353,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5534:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5548:3:21","memberName":"max","nodeType":"MemberAccess","src":"5534:17:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4360,"nodeType":"ExpressionStatement","src":"5517:78:21"},{"expression":{"arguments":[{"id":4363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"5620:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4361,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:21","typeDescriptions":{}}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4349,"id":4365,"nodeType":"Return","src":"5605:21:21"}]},"documentation":{"id":4343,"nodeType":"StructuredDocumentation","src":"5118:318:21","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:21","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"value","nameLocation":"5468:5:21","nodeType":"VariableDeclaration","scope":4367,"src":"5460:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:21"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4367,"src":"5498:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4347,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:21","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:21"},"scope":5680,"src":"5441:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4391,"nodeType":"Block","src":"6028:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"6046:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4378,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4377,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6069:3:21","memberName":"max","nodeType":"MemberAccess","src":"6055:17:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4385,"nodeType":"ExpressionStatement","src":"6038:78:21"},{"expression":{"arguments":[{"id":4388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"6141:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4386,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:21","typeDescriptions":{}}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4374,"id":4390,"nodeType":"Return","src":"6126:21:21"}]},"documentation":{"id":4368,"nodeType":"StructuredDocumentation","src":"5639:318:21","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4392,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:21","nodeType":"FunctionDefinition","parameters":{"id":4371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"value","nameLocation":"5989:5:21","nodeType":"VariableDeclaration","scope":4392,"src":"5981:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:21"},"returnParameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4392,"src":"6019:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4372,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:21","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:21"},"scope":5680,"src":"5962:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"6549:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"6567:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4403,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4402,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:3:21","memberName":"max","nodeType":"MemberAccess","src":"6576:17:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6559:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4410,"nodeType":"ExpressionStatement","src":"6559:78:21"},{"expression":{"arguments":[{"id":4413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"6662:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4411,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:21","typeDescriptions":{}}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4399,"id":4415,"nodeType":"Return","src":"6647:21:21"}]},"documentation":{"id":4393,"nodeType":"StructuredDocumentation","src":"6160:318:21","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:21","nodeType":"FunctionDefinition","parameters":{"id":4396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4395,"mutability":"mutable","name":"value","nameLocation":"6510:5:21","nodeType":"VariableDeclaration","scope":4417,"src":"6502:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4394,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:21"},"returnParameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4417,"src":"6540:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4397,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:21","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:21"},"scope":5680,"src":"6483:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4441,"nodeType":"Block","src":"7070:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"7088:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4428,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4427,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7111:3:21","memberName":"max","nodeType":"MemberAccess","src":"7097:17:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4425,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4435,"nodeType":"ExpressionStatement","src":"7080:78:21"},{"expression":{"arguments":[{"id":4438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"7183:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4436,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:21","typeDescriptions":{}}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7175:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4424,"id":4440,"nodeType":"Return","src":"7168:21:21"}]},"documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"6681:318:21","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4442,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:21","nodeType":"FunctionDefinition","parameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"value","nameLocation":"7031:5:21","nodeType":"VariableDeclaration","scope":4442,"src":"7023:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:21"},"returnParameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4442,"src":"7061:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4422,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:21"},"scope":5680,"src":"7004:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4466,"nodeType":"Block","src":"7591:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"7609:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4453,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4452,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7618:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7632:3:21","memberName":"max","nodeType":"MemberAccess","src":"7618:17:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4460,"nodeType":"ExpressionStatement","src":"7601:78:21"},{"expression":{"arguments":[{"id":4463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"7704:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4461,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:21","typeDescriptions":{}}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7696:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4449,"id":4465,"nodeType":"Return","src":"7689:21:21"}]},"documentation":{"id":4443,"nodeType":"StructuredDocumentation","src":"7202:318:21","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4467,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:21","nodeType":"FunctionDefinition","parameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"value","nameLocation":"7552:5:21","nodeType":"VariableDeclaration","scope":4467,"src":"7544:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:21"},"returnParameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4467,"src":"7582:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4447,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:21","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:21"},"scope":5680,"src":"7525:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4491,"nodeType":"Block","src":"8112:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"8130:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4478,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4477,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8153:3:21","memberName":"max","nodeType":"MemberAccess","src":"8139:17:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4485,"nodeType":"ExpressionStatement","src":"8122:78:21"},{"expression":{"arguments":[{"id":4488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"8225:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4486,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:21","typeDescriptions":{}}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8217:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4474,"id":4490,"nodeType":"Return","src":"8210:21:21"}]},"documentation":{"id":4468,"nodeType":"StructuredDocumentation","src":"7723:318:21","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4492,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:21","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"value","nameLocation":"8073:5:21","nodeType":"VariableDeclaration","scope":4492,"src":"8065:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:21"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4492,"src":"8103:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4472,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:21","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:21"},"scope":5680,"src":"8046:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4516,"nodeType":"Block","src":"8633:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"8651:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4503,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4502,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8674:3:21","memberName":"max","nodeType":"MemberAccess","src":"8660:17:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4510,"nodeType":"ExpressionStatement","src":"8643:78:21"},{"expression":{"arguments":[{"id":4513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"8746:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4511,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:21","typeDescriptions":{}}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4499,"id":4515,"nodeType":"Return","src":"8731:21:21"}]},"documentation":{"id":4493,"nodeType":"StructuredDocumentation","src":"8244:318:21","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:21","nodeType":"FunctionDefinition","parameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"value","nameLocation":"8594:5:21","nodeType":"VariableDeclaration","scope":4517,"src":"8586:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:21"},"returnParameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4517,"src":"8624:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4497,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:21","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:21"},"scope":5680,"src":"8567:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4541,"nodeType":"Block","src":"9154:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"9172:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4528,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4527,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9181:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9195:3:21","memberName":"max","nodeType":"MemberAccess","src":"9181:17:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":4525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9164:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4535,"nodeType":"ExpressionStatement","src":"9164:78:21"},{"expression":{"arguments":[{"id":4538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"9267:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4536,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:21","typeDescriptions":{}}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9259:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4524,"id":4540,"nodeType":"Return","src":"9252:21:21"}]},"documentation":{"id":4518,"nodeType":"StructuredDocumentation","src":"8765:318:21","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":4542,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:21","nodeType":"FunctionDefinition","parameters":{"id":4521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4520,"mutability":"mutable","name":"value","nameLocation":"9115:5:21","nodeType":"VariableDeclaration","scope":4542,"src":"9107:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4519,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:21"},"returnParameters":{"id":4524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4542,"src":"9145:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4522,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:21"},"scope":5680,"src":"9088:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4566,"nodeType":"Block","src":"9675:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"9693:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4553,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4552,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9716:3:21","memberName":"max","nodeType":"MemberAccess","src":"9702:17:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":4550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4560,"nodeType":"ExpressionStatement","src":"9685:78:21"},{"expression":{"arguments":[{"id":4563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"9788:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4561,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:21","typeDescriptions":{}}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4549,"id":4565,"nodeType":"Return","src":"9773:21:21"}]},"documentation":{"id":4543,"nodeType":"StructuredDocumentation","src":"9286:318:21","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":4567,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:21","nodeType":"FunctionDefinition","parameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"value","nameLocation":"9636:5:21","nodeType":"VariableDeclaration","scope":4567,"src":"9628:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:21"},"returnParameters":{"id":4549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4567,"src":"9666:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4547,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:21","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:21"},"scope":5680,"src":"9609:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4591,"nodeType":"Block","src":"10196:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"10214:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4578,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4577,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10237:3:21","memberName":"max","nodeType":"MemberAccess","src":"10223:17:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":4575,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10206:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4585,"nodeType":"ExpressionStatement","src":"10206:78:21"},{"expression":{"arguments":[{"id":4588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"10309:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4586,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:21","typeDescriptions":{}}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4574,"id":4590,"nodeType":"Return","src":"10294:21:21"}]},"documentation":{"id":4568,"nodeType":"StructuredDocumentation","src":"9807:318:21","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4592,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:21","nodeType":"FunctionDefinition","parameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4570,"mutability":"mutable","name":"value","nameLocation":"10157:5:21","nodeType":"VariableDeclaration","scope":4592,"src":"10149:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:21"},"returnParameters":{"id":4574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4592,"src":"10187:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4572,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:21","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:21"},"scope":5680,"src":"10130:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4616,"nodeType":"Block","src":"10717:126:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"10735:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4603,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4602,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10744:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10758:3:21","memberName":"max","nodeType":"MemberAccess","src":"10744:17:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10727:78:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4610,"nodeType":"ExpressionStatement","src":"10727:78:21"},{"expression":{"arguments":[{"id":4613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"10830:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4611,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:21","typeDescriptions":{}}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10822:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4599,"id":4615,"nodeType":"Return","src":"10815:21:21"}]},"documentation":{"id":4593,"nodeType":"StructuredDocumentation","src":"10328:318:21","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4617,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:21","nodeType":"FunctionDefinition","parameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"value","nameLocation":"10678:5:21","nodeType":"VariableDeclaration","scope":4617,"src":"10670:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:21"},"returnParameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4617,"src":"10708:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4597,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:21","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:21"},"scope":5680,"src":"10651:192:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4641,"nodeType":"Block","src":"11232:123:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"11250:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4628,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4627,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11259:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11272:3:21","memberName":"max","nodeType":"MemberAccess","src":"11259:16:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11242:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4635,"nodeType":"ExpressionStatement","src":"11242:76:21"},{"expression":{"arguments":[{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"11342:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4636,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:21","typeDescriptions":{}}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4624,"id":4640,"nodeType":"Return","src":"11328:20:21"}]},"documentation":{"id":4618,"nodeType":"StructuredDocumentation","src":"10849:314:21","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":4642,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:21","nodeType":"FunctionDefinition","parameters":{"id":4621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4620,"mutability":"mutable","name":"value","nameLocation":"11194:5:21","nodeType":"VariableDeclaration","scope":4642,"src":"11186:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4619,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:21"},"returnParameters":{"id":4624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4642,"src":"11224:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4622,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:21","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:21"},"scope":5680,"src":"11168:187:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4666,"nodeType":"Block","src":"11744:123:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"11762:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4653,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4652,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11771:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11784:3:21","memberName":"max","nodeType":"MemberAccess","src":"11771:16:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":4650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11754:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4660,"nodeType":"ExpressionStatement","src":"11754:76:21"},{"expression":{"arguments":[{"id":4663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"11854:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4661,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:21","typeDescriptions":{}}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4649,"id":4665,"nodeType":"Return","src":"11840:20:21"}]},"documentation":{"id":4643,"nodeType":"StructuredDocumentation","src":"11361:314:21","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":4667,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:21","nodeType":"FunctionDefinition","parameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"value","nameLocation":"11706:5:21","nodeType":"VariableDeclaration","scope":4667,"src":"11698:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:21"},"returnParameters":{"id":4649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4667,"src":"11736:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4647,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:21","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:21"},"scope":5680,"src":"11680:187:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4691,"nodeType":"Block","src":"12256:123:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"12274:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4678,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4677,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12296:3:21","memberName":"max","nodeType":"MemberAccess","src":"12283:16:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":4675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4685,"nodeType":"ExpressionStatement","src":"12266:76:21"},{"expression":{"arguments":[{"id":4688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"12366:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4686,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:21","typeDescriptions":{}}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12359:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4674,"id":4690,"nodeType":"Return","src":"12352:20:21"}]},"documentation":{"id":4668,"nodeType":"StructuredDocumentation","src":"11873:314:21","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":4692,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:21","nodeType":"FunctionDefinition","parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"value","nameLocation":"12218:5:21","nodeType":"VariableDeclaration","scope":4692,"src":"12210:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:21"},"returnParameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4692,"src":"12248:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4672,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:21","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:21"},"scope":5680,"src":"12192:187:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4716,"nodeType":"Block","src":"12768:123:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"12786:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4703,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4702,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12795:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12808:3:21","memberName":"max","nodeType":"MemberAccess","src":"12795:16:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":4700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12778:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4710,"nodeType":"ExpressionStatement","src":"12778:76:21"},{"expression":{"arguments":[{"id":4713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"12878:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4711,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:21","typeDescriptions":{}}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12871:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4699,"id":4715,"nodeType":"Return","src":"12864:20:21"}]},"documentation":{"id":4693,"nodeType":"StructuredDocumentation","src":"12385:314:21","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":4717,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:21","nodeType":"FunctionDefinition","parameters":{"id":4696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4695,"mutability":"mutable","name":"value","nameLocation":"12730:5:21","nodeType":"VariableDeclaration","scope":4717,"src":"12722:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4694,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:21"},"returnParameters":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4717,"src":"12760:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4697,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:21","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:21"},"scope":5680,"src":"12704:187:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4741,"nodeType":"Block","src":"13280:123:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"13298:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4728,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13307:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13320:3:21","memberName":"max","nodeType":"MemberAccess","src":"13307:16:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":4733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":4725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13290:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4735,"nodeType":"ExpressionStatement","src":"13290:76:21"},{"expression":{"arguments":[{"id":4738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"13390:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4736,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:21","typeDescriptions":{}}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13383:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4724,"id":4740,"nodeType":"Return","src":"13376:20:21"}]},"documentation":{"id":4718,"nodeType":"StructuredDocumentation","src":"12897:314:21","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":4742,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:21","nodeType":"FunctionDefinition","parameters":{"id":4721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"value","nameLocation":"13242:5:21","nodeType":"VariableDeclaration","scope":4742,"src":"13234:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:21"},"returnParameters":{"id":4724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4742,"src":"13272:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4722,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:21","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:21"},"scope":5680,"src":"13216:187:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4766,"nodeType":"Block","src":"13792:123:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"13810:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4753,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4752,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13832:3:21","memberName":"max","nodeType":"MemberAccess","src":"13819:16:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":4750,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13802:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4760,"nodeType":"ExpressionStatement","src":"13802:76:21"},{"expression":{"arguments":[{"id":4763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"13902:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4761,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:21","typeDescriptions":{}}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13895:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4749,"id":4765,"nodeType":"Return","src":"13888:20:21"}]},"documentation":{"id":4743,"nodeType":"StructuredDocumentation","src":"13409:314:21","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":4767,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:21","nodeType":"FunctionDefinition","parameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"value","nameLocation":"13754:5:21","nodeType":"VariableDeclaration","scope":4767,"src":"13746:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:21"},"returnParameters":{"id":4749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4767,"src":"13784:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4747,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:21","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:21"},"scope":5680,"src":"13728:187:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4791,"nodeType":"Block","src":"14304:123:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"14322:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4778,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4777,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14331:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14344:3:21","memberName":"max","nodeType":"MemberAccess","src":"14331:16:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":4775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14314:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4785,"nodeType":"ExpressionStatement","src":"14314:76:21"},{"expression":{"arguments":[{"id":4788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"14414:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4786,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:21","typeDescriptions":{}}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14407:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4774,"id":4790,"nodeType":"Return","src":"14400:20:21"}]},"documentation":{"id":4768,"nodeType":"StructuredDocumentation","src":"13921:314:21","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":4792,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:21","nodeType":"FunctionDefinition","parameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"mutability":"mutable","name":"value","nameLocation":"14266:5:21","nodeType":"VariableDeclaration","scope":4792,"src":"14258:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4769,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:21"},"returnParameters":{"id":4774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4792,"src":"14296:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4772,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:21","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:21"},"scope":5680,"src":"14240:187:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4816,"nodeType":"Block","src":"14816:123:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"14834:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4803,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4802,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14843:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14856:3:21","memberName":"max","nodeType":"MemberAccess","src":"14843:16:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":4800,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14826:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4810,"nodeType":"ExpressionStatement","src":"14826:76:21"},{"expression":{"arguments":[{"id":4813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"14926:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4811,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:21","typeDescriptions":{}}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14919:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4799,"id":4815,"nodeType":"Return","src":"14912:20:21"}]},"documentation":{"id":4793,"nodeType":"StructuredDocumentation","src":"14433:314:21","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":4817,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:21","nodeType":"FunctionDefinition","parameters":{"id":4796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"value","nameLocation":"14778:5:21","nodeType":"VariableDeclaration","scope":4817,"src":"14770:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4794,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:21"},"returnParameters":{"id":4799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4817,"src":"14808:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4797,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:21"},"scope":5680,"src":"14752:187:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4841,"nodeType":"Block","src":"15328:123:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"15346:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4828,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4827,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15355:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15368:3:21","memberName":"max","nodeType":"MemberAccess","src":"15355:16:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":4825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15338:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4835,"nodeType":"ExpressionStatement","src":"15338:76:21"},{"expression":{"arguments":[{"id":4838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"15438:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4836,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:21","typeDescriptions":{}}},"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15431:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4824,"id":4840,"nodeType":"Return","src":"15424:20:21"}]},"documentation":{"id":4818,"nodeType":"StructuredDocumentation","src":"14945:314:21","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":4842,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:21","nodeType":"FunctionDefinition","parameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"value","nameLocation":"15290:5:21","nodeType":"VariableDeclaration","scope":4842,"src":"15282:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4819,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:21"},"returnParameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4842,"src":"15320:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4822,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:21"},"scope":5680,"src":"15264:187:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4866,"nodeType":"Block","src":"15840:123:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"15858:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4853,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4852,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15867:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15880:3:21","memberName":"max","nodeType":"MemberAccess","src":"15867:16:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":4850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15850:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4860,"nodeType":"ExpressionStatement","src":"15850:76:21"},{"expression":{"arguments":[{"id":4863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"15950:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4861,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:21","typeDescriptions":{}}},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15943:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4849,"id":4865,"nodeType":"Return","src":"15936:20:21"}]},"documentation":{"id":4843,"nodeType":"StructuredDocumentation","src":"15457:314:21","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":4867,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:21","nodeType":"FunctionDefinition","parameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"mutability":"mutable","name":"value","nameLocation":"15802:5:21","nodeType":"VariableDeclaration","scope":4867,"src":"15794:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:21"},"returnParameters":{"id":4849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4867,"src":"15832:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4847,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:21","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:21"},"scope":5680,"src":"15776:187:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4891,"nodeType":"Block","src":"16352:123:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"16370:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4878,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4877,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16379:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16392:3:21","memberName":"max","nodeType":"MemberAccess","src":"16379:16:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":4875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16362:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4885,"nodeType":"ExpressionStatement","src":"16362:76:21"},{"expression":{"arguments":[{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"16462:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4886,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:21","typeDescriptions":{}}},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16455:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4874,"id":4890,"nodeType":"Return","src":"16448:20:21"}]},"documentation":{"id":4868,"nodeType":"StructuredDocumentation","src":"15969:314:21","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":4892,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:21","nodeType":"FunctionDefinition","parameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4870,"mutability":"mutable","name":"value","nameLocation":"16314:5:21","nodeType":"VariableDeclaration","scope":4892,"src":"16306:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4869,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:21"},"returnParameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4892,"src":"16344:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4872,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:21"},"scope":5680,"src":"16288:187:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4916,"nodeType":"Block","src":"16858:120:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"16876:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4903,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4902,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16885:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16897:3:21","memberName":"max","nodeType":"MemberAccess","src":"16885:15:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":4900,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16868:74:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4910,"nodeType":"ExpressionStatement","src":"16868:74:21"},{"expression":{"arguments":[{"id":4913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"16965:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4911,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:21","typeDescriptions":{}}},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16959:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4899,"id":4915,"nodeType":"Return","src":"16952:19:21"}]},"documentation":{"id":4893,"nodeType":"StructuredDocumentation","src":"16481:310:21","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":4917,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:21","nodeType":"FunctionDefinition","parameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"value","nameLocation":"16821:5:21","nodeType":"VariableDeclaration","scope":4917,"src":"16813:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:21"},"returnParameters":{"id":4899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4917,"src":"16851:5:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4897,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:21"},"scope":5680,"src":"16796:182:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4937,"nodeType":"Block","src":"17252:103:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"17270:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":4925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17262:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4931,"nodeType":"ExpressionStatement","src":"17262:55:21"},{"expression":{"arguments":[{"id":4934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"17342:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4932,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:21","typeDescriptions":{}}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17334:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4924,"id":4936,"nodeType":"Return","src":"17327:21:21"}]},"documentation":{"id":4918,"nodeType":"StructuredDocumentation","src":"16984:198:21","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":4938,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:21","nodeType":"FunctionDefinition","parameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"value","nameLocation":"17213:5:21","nodeType":"VariableDeclaration","scope":4938,"src":"17206:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4919,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:21"},"returnParameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4938,"src":"17243:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4922,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:21"},"scope":5680,"src":"17187:168:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4960,"nodeType":"Block","src":"17790:124:21","statements":[{"expression":{"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"17800:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"17820:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4947,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:21","typeDescriptions":{}}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17813:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4952,"nodeType":"ExpressionStatement","src":"17800:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4954,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"17844:10:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"17858:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4953,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17836:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4959,"nodeType":"ExpressionStatement","src":"17836:71:21"}]},"documentation":{"id":4939,"nodeType":"StructuredDocumentation","src":"17361:350:21","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4961,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:21","nodeType":"FunctionDefinition","parameters":{"id":4942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4941,"mutability":"mutable","name":"value","nameLocation":"17741:5:21","nodeType":"VariableDeclaration","scope":4961,"src":"17734:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4940,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:21"},"returnParameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:21","nodeType":"VariableDeclaration","scope":4961,"src":"17771:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4943,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:21","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:21"},"scope":5680,"src":"17716:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4983,"nodeType":"Block","src":"18349:124:21","statements":[{"expression":{"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"18359:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"18379:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4970,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:21","typeDescriptions":{}}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18372:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4975,"nodeType":"ExpressionStatement","src":"18359:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4977,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"18403:10:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"18417:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4976,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4982,"nodeType":"ExpressionStatement","src":"18395:71:21"}]},"documentation":{"id":4962,"nodeType":"StructuredDocumentation","src":"17920:350:21","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4984,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:21","nodeType":"FunctionDefinition","parameters":{"id":4965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4964,"mutability":"mutable","name":"value","nameLocation":"18300:5:21","nodeType":"VariableDeclaration","scope":4984,"src":"18293:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4963,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:21"},"returnParameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:21","nodeType":"VariableDeclaration","scope":4984,"src":"18330:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4966,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:21","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:21"},"scope":5680,"src":"18275:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5006,"nodeType":"Block","src":"18908:124:21","statements":[{"expression":{"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"18918:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"18938:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4993,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:21","typeDescriptions":{}}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18931:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4998,"nodeType":"ExpressionStatement","src":"18918:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"18962:10:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"18976:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4999,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18954:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5005,"nodeType":"ExpressionStatement","src":"18954:71:21"}]},"documentation":{"id":4985,"nodeType":"StructuredDocumentation","src":"18479:350:21","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":5007,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:21","nodeType":"FunctionDefinition","parameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"value","nameLocation":"18859:5:21","nodeType":"VariableDeclaration","scope":5007,"src":"18852:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4986,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:21"},"returnParameters":{"id":4991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:21","nodeType":"VariableDeclaration","scope":5007,"src":"18889:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4989,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:21","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:21"},"scope":5680,"src":"18834:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5029,"nodeType":"Block","src":"19467:124:21","statements":[{"expression":{"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"19477:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"19497:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5016,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:21","typeDescriptions":{}}},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19490:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5021,"nodeType":"ExpressionStatement","src":"19477:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"19521:10:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"19535:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":5026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":5022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19513:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5028,"nodeType":"ExpressionStatement","src":"19513:71:21"}]},"documentation":{"id":5008,"nodeType":"StructuredDocumentation","src":"19038:350:21","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":5030,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:21","nodeType":"FunctionDefinition","parameters":{"id":5011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5010,"mutability":"mutable","name":"value","nameLocation":"19418:5:21","nodeType":"VariableDeclaration","scope":5030,"src":"19411:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5009,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:21"},"returnParameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5013,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:21","nodeType":"VariableDeclaration","scope":5030,"src":"19448:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5012,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:21","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:21"},"scope":5680,"src":"19393:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5052,"nodeType":"Block","src":"20026:124:21","statements":[{"expression":{"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5038,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"20036:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"20056:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5039,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:21","typeDescriptions":{}}},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20049:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5044,"nodeType":"ExpressionStatement","src":"20036:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5046,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"20080:10:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"20094:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":5045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20072:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5051,"nodeType":"ExpressionStatement","src":"20072:71:21"}]},"documentation":{"id":5031,"nodeType":"StructuredDocumentation","src":"19597:350:21","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":5053,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:21","nodeType":"FunctionDefinition","parameters":{"id":5034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5033,"mutability":"mutable","name":"value","nameLocation":"19977:5:21","nodeType":"VariableDeclaration","scope":5053,"src":"19970:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5032,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:21"},"returnParameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:21","nodeType":"VariableDeclaration","scope":5053,"src":"20007:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5035,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:21","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:21"},"scope":5680,"src":"19952:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5075,"nodeType":"Block","src":"20585:124:21","statements":[{"expression":{"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"20595:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"20615:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5062,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:21","typeDescriptions":{}}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20608:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5067,"nodeType":"ExpressionStatement","src":"20595:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5059,"src":"20639:10:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5056,"src":"20653:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":5068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20631:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5074,"nodeType":"ExpressionStatement","src":"20631:71:21"}]},"documentation":{"id":5054,"nodeType":"StructuredDocumentation","src":"20156:350:21","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":5076,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:21","nodeType":"FunctionDefinition","parameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5056,"mutability":"mutable","name":"value","nameLocation":"20536:5:21","nodeType":"VariableDeclaration","scope":5076,"src":"20529:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5055,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:21"},"returnParameters":{"id":5060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5059,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:21","nodeType":"VariableDeclaration","scope":5076,"src":"20566:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5058,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:21","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:21"},"scope":5680,"src":"20511:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5098,"nodeType":"Block","src":"21144:124:21","statements":[{"expression":{"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5084,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"21154:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"21174:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5085,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:21","typeDescriptions":{}}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21167:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5090,"nodeType":"ExpressionStatement","src":"21154:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"21198:10:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5079,"src":"21212:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":5091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21190:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5097,"nodeType":"ExpressionStatement","src":"21190:71:21"}]},"documentation":{"id":5077,"nodeType":"StructuredDocumentation","src":"20715:350:21","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":5099,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:21","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"value","nameLocation":"21095:5:21","nodeType":"VariableDeclaration","scope":5099,"src":"21088:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5078,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:21"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:21","nodeType":"VariableDeclaration","scope":5099,"src":"21125:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5081,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:21","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:21"},"scope":5680,"src":"21070:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5121,"nodeType":"Block","src":"21703:124:21","statements":[{"expression":{"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5107,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"21713:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"21733:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5108,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:21","typeDescriptions":{}}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21726:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5113,"nodeType":"ExpressionStatement","src":"21713:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5115,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"21757:10:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"21771:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":5114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21749:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5120,"nodeType":"ExpressionStatement","src":"21749:71:21"}]},"documentation":{"id":5100,"nodeType":"StructuredDocumentation","src":"21274:350:21","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":5122,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:21","nodeType":"FunctionDefinition","parameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"value","nameLocation":"21654:5:21","nodeType":"VariableDeclaration","scope":5122,"src":"21647:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5101,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:21"},"returnParameters":{"id":5106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5105,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:21","nodeType":"VariableDeclaration","scope":5122,"src":"21684:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5104,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:21","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:21"},"scope":5680,"src":"21629:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5144,"nodeType":"Block","src":"22262:124:21","statements":[{"expression":{"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5130,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"22272:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"22292:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5131,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:21","typeDescriptions":{}}},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22285:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5136,"nodeType":"ExpressionStatement","src":"22272:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"22316:10:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"22330:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":5137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22308:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5143,"nodeType":"ExpressionStatement","src":"22308:71:21"}]},"documentation":{"id":5123,"nodeType":"StructuredDocumentation","src":"21833:350:21","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":5145,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:21","nodeType":"FunctionDefinition","parameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"value","nameLocation":"22213:5:21","nodeType":"VariableDeclaration","scope":5145,"src":"22206:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5124,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:21"},"returnParameters":{"id":5129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:21","nodeType":"VariableDeclaration","scope":5145,"src":"22243:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5127,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:21","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:21"},"scope":5680,"src":"22188:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5167,"nodeType":"Block","src":"22821:124:21","statements":[{"expression":{"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"22831:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"22851:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5154,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:21","typeDescriptions":{}}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22844:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5159,"nodeType":"ExpressionStatement","src":"22831:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"22875:10:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"22889:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":5160,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22867:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5166,"nodeType":"ExpressionStatement","src":"22867:71:21"}]},"documentation":{"id":5146,"nodeType":"StructuredDocumentation","src":"22392:350:21","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":5168,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:21","nodeType":"FunctionDefinition","parameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"value","nameLocation":"22772:5:21","nodeType":"VariableDeclaration","scope":5168,"src":"22765:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5147,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:21"},"returnParameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:21","nodeType":"VariableDeclaration","scope":5168,"src":"22802:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5150,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:21","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:21"},"scope":5680,"src":"22747:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5190,"nodeType":"Block","src":"23380:124:21","statements":[{"expression":{"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"23390:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"23410:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5177,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:21","typeDescriptions":{}}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23403:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5182,"nodeType":"ExpressionStatement","src":"23390:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"23434:10:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"23448:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23426:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5189,"nodeType":"ExpressionStatement","src":"23426:71:21"}]},"documentation":{"id":5169,"nodeType":"StructuredDocumentation","src":"22951:350:21","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5191,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:21","nodeType":"FunctionDefinition","parameters":{"id":5172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5171,"mutability":"mutable","name":"value","nameLocation":"23331:5:21","nodeType":"VariableDeclaration","scope":5191,"src":"23324:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5170,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:21"},"returnParameters":{"id":5175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5174,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:21","nodeType":"VariableDeclaration","scope":5191,"src":"23361:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5173,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:21","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:21"},"scope":5680,"src":"23306:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5213,"nodeType":"Block","src":"23939:124:21","statements":[{"expression":{"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"23949:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"23969:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5200,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:21","typeDescriptions":{}}},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23962:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5205,"nodeType":"ExpressionStatement","src":"23949:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"23993:10:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"24007:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23985:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5212,"nodeType":"ExpressionStatement","src":"23985:71:21"}]},"documentation":{"id":5192,"nodeType":"StructuredDocumentation","src":"23510:350:21","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5214,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:21","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"value","nameLocation":"23890:5:21","nodeType":"VariableDeclaration","scope":5214,"src":"23883:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5193,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:21"},"returnParameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:21","nodeType":"VariableDeclaration","scope":5214,"src":"23920:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5196,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:21","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:21"},"scope":5680,"src":"23865:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5236,"nodeType":"Block","src":"24498:124:21","statements":[{"expression":{"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"24508:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"24528:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5223,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:21","typeDescriptions":{}}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24521:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5228,"nodeType":"ExpressionStatement","src":"24508:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5230,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"24552:10:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"24566:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24544:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5235,"nodeType":"ExpressionStatement","src":"24544:71:21"}]},"documentation":{"id":5215,"nodeType":"StructuredDocumentation","src":"24069:350:21","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5237,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:21","nodeType":"FunctionDefinition","parameters":{"id":5218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"value","nameLocation":"24449:5:21","nodeType":"VariableDeclaration","scope":5237,"src":"24442:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5216,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:21"},"returnParameters":{"id":5221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5220,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:21","nodeType":"VariableDeclaration","scope":5237,"src":"24479:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5219,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:21","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:21"},"scope":5680,"src":"24424:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5259,"nodeType":"Block","src":"25057:124:21","statements":[{"expression":{"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"25067:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"25087:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5246,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:21","typeDescriptions":{}}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25080:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5251,"nodeType":"ExpressionStatement","src":"25067:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"25111:10:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"25125:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25103:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5258,"nodeType":"ExpressionStatement","src":"25103:71:21"}]},"documentation":{"id":5238,"nodeType":"StructuredDocumentation","src":"24628:350:21","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5260,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:21","nodeType":"FunctionDefinition","parameters":{"id":5241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5240,"mutability":"mutable","name":"value","nameLocation":"25008:5:21","nodeType":"VariableDeclaration","scope":5260,"src":"25001:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5239,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:21"},"returnParameters":{"id":5244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5243,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:21","nodeType":"VariableDeclaration","scope":5260,"src":"25038:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5242,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:21","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:21"},"scope":5680,"src":"24983:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5282,"nodeType":"Block","src":"25616:124:21","statements":[{"expression":{"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"25626:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"25646:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5269,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:21","typeDescriptions":{}}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25639:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5274,"nodeType":"ExpressionStatement","src":"25626:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"25670:10:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"25684:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25662:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5281,"nodeType":"ExpressionStatement","src":"25662:71:21"}]},"documentation":{"id":5261,"nodeType":"StructuredDocumentation","src":"25187:350:21","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5283,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:21","nodeType":"FunctionDefinition","parameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"value","nameLocation":"25567:5:21","nodeType":"VariableDeclaration","scope":5283,"src":"25560:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5262,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:21"},"returnParameters":{"id":5267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5266,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:21","nodeType":"VariableDeclaration","scope":5283,"src":"25597:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5265,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:21","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:21"},"scope":5680,"src":"25542:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5305,"nodeType":"Block","src":"26175:124:21","statements":[{"expression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"26185:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"26205:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5292,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:21","typeDescriptions":{}}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26198:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5297,"nodeType":"ExpressionStatement","src":"26185:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5299,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5289,"src":"26229:10:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"26243:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5298,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26221:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5304,"nodeType":"ExpressionStatement","src":"26221:71:21"}]},"documentation":{"id":5284,"nodeType":"StructuredDocumentation","src":"25746:350:21","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":5306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:21","nodeType":"FunctionDefinition","parameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"value","nameLocation":"26126:5:21","nodeType":"VariableDeclaration","scope":5306,"src":"26119:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5285,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:21"},"returnParameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5289,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:21","nodeType":"VariableDeclaration","scope":5306,"src":"26156:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5288,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:21","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:21"},"scope":5680,"src":"26101:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5328,"nodeType":"Block","src":"26734:124:21","statements":[{"expression":{"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"26744:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"26764:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5315,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:21","typeDescriptions":{}}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26757:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5320,"nodeType":"ExpressionStatement","src":"26744:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5322,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"26788:10:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"26802:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26780:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5327,"nodeType":"ExpressionStatement","src":"26780:71:21"}]},"documentation":{"id":5307,"nodeType":"StructuredDocumentation","src":"26305:350:21","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5329,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:21","nodeType":"FunctionDefinition","parameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"value","nameLocation":"26685:5:21","nodeType":"VariableDeclaration","scope":5329,"src":"26678:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5308,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:21"},"returnParameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:21","nodeType":"VariableDeclaration","scope":5329,"src":"26715:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5311,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:21","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:21"},"scope":5680,"src":"26660:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5351,"nodeType":"Block","src":"27293:124:21","statements":[{"expression":{"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"27303:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"27323:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5338,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:21","typeDescriptions":{}}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27316:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5343,"nodeType":"ExpressionStatement","src":"27303:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5345,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"27347:10:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"27361:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27339:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5350,"nodeType":"ExpressionStatement","src":"27339:71:21"}]},"documentation":{"id":5330,"nodeType":"StructuredDocumentation","src":"26864:350:21","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5352,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:21","nodeType":"FunctionDefinition","parameters":{"id":5333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5332,"mutability":"mutable","name":"value","nameLocation":"27244:5:21","nodeType":"VariableDeclaration","scope":5352,"src":"27237:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5331,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:21"},"returnParameters":{"id":5336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5335,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:21","nodeType":"VariableDeclaration","scope":5352,"src":"27274:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5334,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:21","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:21"},"scope":5680,"src":"27219:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5374,"nodeType":"Block","src":"27852:124:21","statements":[{"expression":{"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5360,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"27862:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"27882:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5361,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:21","typeDescriptions":{}}},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27875:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5366,"nodeType":"ExpressionStatement","src":"27862:26:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5368,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"27906:10:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"27920:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27898:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5373,"nodeType":"ExpressionStatement","src":"27898:71:21"}]},"documentation":{"id":5353,"nodeType":"StructuredDocumentation","src":"27423:350:21","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5375,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:21","nodeType":"FunctionDefinition","parameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"value","nameLocation":"27803:5:21","nodeType":"VariableDeclaration","scope":5375,"src":"27796:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5354,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:21"},"returnParameters":{"id":5359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:21","nodeType":"VariableDeclaration","scope":5375,"src":"27833:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5357,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:21","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:21"},"scope":5680,"src":"27778:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5397,"nodeType":"Block","src":"28404:122:21","statements":[{"expression":{"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"28414:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"28433:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5384,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:21","typeDescriptions":{}}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28427:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5389,"nodeType":"ExpressionStatement","src":"28414:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"28457:10:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5378,"src":"28471:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28449:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5396,"nodeType":"ExpressionStatement","src":"28449:70:21"}]},"documentation":{"id":5376,"nodeType":"StructuredDocumentation","src":"27982:345:21","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":5398,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:21","nodeType":"FunctionDefinition","parameters":{"id":5379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5378,"mutability":"mutable","name":"value","nameLocation":"28356:5:21","nodeType":"VariableDeclaration","scope":5398,"src":"28349:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5377,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:21"},"returnParameters":{"id":5382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5381,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:21","nodeType":"VariableDeclaration","scope":5398,"src":"28386:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5380,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:21","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:21"},"scope":5680,"src":"28332:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5420,"nodeType":"Block","src":"28954:122:21","statements":[{"expression":{"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"28964:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"28983:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5407,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:21","typeDescriptions":{}}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28977:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5412,"nodeType":"ExpressionStatement","src":"28964:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5414,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"29007:10:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5401,"src":"29021:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28999:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5419,"nodeType":"ExpressionStatement","src":"28999:70:21"}]},"documentation":{"id":5399,"nodeType":"StructuredDocumentation","src":"28532:345:21","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5421,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:21","nodeType":"FunctionDefinition","parameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5401,"mutability":"mutable","name":"value","nameLocation":"28906:5:21","nodeType":"VariableDeclaration","scope":5421,"src":"28899:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5400,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:21"},"returnParameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:21","nodeType":"VariableDeclaration","scope":5421,"src":"28936:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5403,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:21","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:21"},"scope":5680,"src":"28882:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5443,"nodeType":"Block","src":"29504:122:21","statements":[{"expression":{"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5429,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"29514:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"29533:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5430,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:21","typeDescriptions":{}}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29527:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5435,"nodeType":"ExpressionStatement","src":"29514:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5437,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"29557:10:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"29571:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29549:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5442,"nodeType":"ExpressionStatement","src":"29549:70:21"}]},"documentation":{"id":5422,"nodeType":"StructuredDocumentation","src":"29082:345:21","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5444,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:21","nodeType":"FunctionDefinition","parameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"value","nameLocation":"29456:5:21","nodeType":"VariableDeclaration","scope":5444,"src":"29449:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5423,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:21"},"returnParameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:21","nodeType":"VariableDeclaration","scope":5444,"src":"29486:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5426,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:21","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:21"},"scope":5680,"src":"29432:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5466,"nodeType":"Block","src":"30054:122:21","statements":[{"expression":{"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"30064:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"30083:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5453,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:21","typeDescriptions":{}}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30077:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5458,"nodeType":"ExpressionStatement","src":"30064:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"30107:10:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"30121:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30099:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5465,"nodeType":"ExpressionStatement","src":"30099:70:21"}]},"documentation":{"id":5445,"nodeType":"StructuredDocumentation","src":"29632:345:21","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5467,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:21","nodeType":"FunctionDefinition","parameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"value","nameLocation":"30006:5:21","nodeType":"VariableDeclaration","scope":5467,"src":"29999:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5446,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:21"},"returnParameters":{"id":5451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:21","nodeType":"VariableDeclaration","scope":5467,"src":"30036:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5449,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:21","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:21"},"scope":5680,"src":"29982:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5489,"nodeType":"Block","src":"30604:122:21","statements":[{"expression":{"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"30614:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"30633:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5476,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:21","typeDescriptions":{}}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30627:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5481,"nodeType":"ExpressionStatement","src":"30614:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5483,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"30657:10:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"30671:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30649:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5488,"nodeType":"ExpressionStatement","src":"30649:70:21"}]},"documentation":{"id":5468,"nodeType":"StructuredDocumentation","src":"30182:345:21","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":5490,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:21","nodeType":"FunctionDefinition","parameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"value","nameLocation":"30556:5:21","nodeType":"VariableDeclaration","scope":5490,"src":"30549:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5469,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:21"},"returnParameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:21","nodeType":"VariableDeclaration","scope":5490,"src":"30586:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5472,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:21","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:21"},"scope":5680,"src":"30532:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5512,"nodeType":"Block","src":"31154:122:21","statements":[{"expression":{"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"31164:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"31183:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5499,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:21","typeDescriptions":{}}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31177:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5504,"nodeType":"ExpressionStatement","src":"31164:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"31207:10:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"31221:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31199:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5511,"nodeType":"ExpressionStatement","src":"31199:70:21"}]},"documentation":{"id":5491,"nodeType":"StructuredDocumentation","src":"30732:345:21","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:21","nodeType":"FunctionDefinition","parameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"value","nameLocation":"31106:5:21","nodeType":"VariableDeclaration","scope":5513,"src":"31099:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5492,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:21"},"returnParameters":{"id":5497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5496,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:21","nodeType":"VariableDeclaration","scope":5513,"src":"31136:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5495,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:21"},"scope":5680,"src":"31082:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5535,"nodeType":"Block","src":"31704:122:21","statements":[{"expression":{"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"31714:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"31733:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5522,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:21","typeDescriptions":{}}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31727:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5527,"nodeType":"ExpressionStatement","src":"31714:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"31757:10:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"31771:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31749:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5534,"nodeType":"ExpressionStatement","src":"31749:70:21"}]},"documentation":{"id":5514,"nodeType":"StructuredDocumentation","src":"31282:345:21","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5536,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:21","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"value","nameLocation":"31656:5:21","nodeType":"VariableDeclaration","scope":5536,"src":"31649:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5515,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:21"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:21","nodeType":"VariableDeclaration","scope":5536,"src":"31686:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5518,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:21","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:21"},"scope":5680,"src":"31632:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5558,"nodeType":"Block","src":"32254:122:21","statements":[{"expression":{"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5544,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"32264:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"32283:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5545,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:21","typeDescriptions":{}}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32277:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5550,"nodeType":"ExpressionStatement","src":"32264:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5552,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"32307:10:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5539,"src":"32321:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5551,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32299:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5557,"nodeType":"ExpressionStatement","src":"32299:70:21"}]},"documentation":{"id":5537,"nodeType":"StructuredDocumentation","src":"31832:345:21","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5559,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:21","nodeType":"FunctionDefinition","parameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"value","nameLocation":"32206:5:21","nodeType":"VariableDeclaration","scope":5559,"src":"32199:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5538,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:21"},"returnParameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:21","nodeType":"VariableDeclaration","scope":5559,"src":"32236:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5541,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:21","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:21"},"scope":5680,"src":"32182:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5581,"nodeType":"Block","src":"32804:122:21","statements":[{"expression":{"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5567,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"32814:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"32833:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5568,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:21","typeDescriptions":{}}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32827:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5573,"nodeType":"ExpressionStatement","src":"32814:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"32857:10:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"32871:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32849:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5580,"nodeType":"ExpressionStatement","src":"32849:70:21"}]},"documentation":{"id":5560,"nodeType":"StructuredDocumentation","src":"32382:345:21","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":5582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:21","nodeType":"FunctionDefinition","parameters":{"id":5563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5562,"mutability":"mutable","name":"value","nameLocation":"32756:5:21","nodeType":"VariableDeclaration","scope":5582,"src":"32749:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5561,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:21"},"returnParameters":{"id":5566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5565,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:21","nodeType":"VariableDeclaration","scope":5582,"src":"32786:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5564,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:21","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:21"},"scope":5680,"src":"32732:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5604,"nodeType":"Block","src":"33354:122:21","statements":[{"expression":{"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"33364:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"33383:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5591,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:21","typeDescriptions":{}}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33377:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5596,"nodeType":"ExpressionStatement","src":"33364:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"33407:10:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"33421:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33399:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5603,"nodeType":"ExpressionStatement","src":"33399:70:21"}]},"documentation":{"id":5583,"nodeType":"StructuredDocumentation","src":"32932:345:21","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5605,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:21","nodeType":"FunctionDefinition","parameters":{"id":5586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5585,"mutability":"mutable","name":"value","nameLocation":"33306:5:21","nodeType":"VariableDeclaration","scope":5605,"src":"33299:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5584,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:21"},"returnParameters":{"id":5589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5588,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:21","nodeType":"VariableDeclaration","scope":5605,"src":"33336:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5587,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:21"},"scope":5680,"src":"33282:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5627,"nodeType":"Block","src":"33904:122:21","statements":[{"expression":{"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5613,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"33914:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"33933:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5614,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:21","typeDescriptions":{}}},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33927:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5619,"nodeType":"ExpressionStatement","src":"33914:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5621,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5611,"src":"33957:10:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"33971:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33949:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5626,"nodeType":"ExpressionStatement","src":"33949:70:21"}]},"documentation":{"id":5606,"nodeType":"StructuredDocumentation","src":"33482:345:21","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":5628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:21","nodeType":"FunctionDefinition","parameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5608,"mutability":"mutable","name":"value","nameLocation":"33856:5:21","nodeType":"VariableDeclaration","scope":5628,"src":"33849:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5607,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:21"},"returnParameters":{"id":5612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5611,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:21","nodeType":"VariableDeclaration","scope":5628,"src":"33886:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5610,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:21","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:21"},"scope":5680,"src":"33832:194:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5650,"nodeType":"Block","src":"34447:120:21","statements":[{"expression":{"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"34457:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"34475:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5637,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:21","typeDescriptions":{}}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34470:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5642,"nodeType":"ExpressionStatement","src":"34457:24:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"34499:10:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"34513:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34491:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5649,"nodeType":"ExpressionStatement","src":"34491:69:21"}]},"documentation":{"id":5629,"nodeType":"StructuredDocumentation","src":"34032:340:21","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":5651,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:21","nodeType":"FunctionDefinition","parameters":{"id":5632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"value","nameLocation":"34400:5:21","nodeType":"VariableDeclaration","scope":5651,"src":"34393:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5630,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:21"},"returnParameters":{"id":5635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:21","nodeType":"VariableDeclaration","scope":5651,"src":"34430:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5633,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:21","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:21"},"scope":5680,"src":"34377:190:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5678,"nodeType":"Block","src":"34845:233:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"34962:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5664,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5663,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34979:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34992:3:21","memberName":"max","nodeType":"MemberAccess","src":"34979:16:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5661,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:21","typeDescriptions":{}}},"id":5668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34971:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":5659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34954:87:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5672,"nodeType":"ExpressionStatement","src":"34954:87:21"},{"expression":{"arguments":[{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"35065:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5673,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:21","typeDescriptions":{}}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35058:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5658,"id":5677,"nodeType":"Return","src":"35051:20:21"}]},"documentation":{"id":5652,"nodeType":"StructuredDocumentation","src":"34573:203:21","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":5679,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:21","nodeType":"FunctionDefinition","parameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"value","nameLocation":"34807:5:21","nodeType":"VariableDeclaration","scope":5679,"src":"34799:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5653,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:21"},"returnParameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"34837:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5656,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:21"},"scope":5680,"src":"34781:297:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5681,"src":"927:34153:21","usedErrors":[],"usedEvents":[]}],"src":"192:34889:21"},"id":21},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5785]},"id":5786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5682,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5683,"nodeType":"StructuredDocumentation","src":"134:80:22","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5785,"linearizedBaseContracts":[5785],"name":"SignedMath","nameLocation":"223:10:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":5700,"nodeType":"Block","src":"375:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5693,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"392:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5694,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"396:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5697,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"404:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:22","trueExpression":{"id":5696,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"400:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5692,"id":5699,"nodeType":"Return","src":"385:20:22"}]},"documentation":{"id":5684,"nodeType":"StructuredDocumentation","src":"240:66:22","text":" @dev Returns the largest of two signed numbers."},"id":5701,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:22","nodeType":"FunctionDefinition","parameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"a","nameLocation":"331:1:22","nodeType":"VariableDeclaration","scope":5701,"src":"324:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5685,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5688,"mutability":"mutable","name":"b","nameLocation":"341:1:22","nodeType":"VariableDeclaration","scope":5701,"src":"334:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5687,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:22"},"returnParameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5701,"src":"367:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5690,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:22"},"scope":5785,"src":"311:101:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5718,"nodeType":"Block","src":"554:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"571:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"575:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5715,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"583:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:22","trueExpression":{"id":5714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"579:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5710,"id":5717,"nodeType":"Return","src":"564:20:22"}]},"documentation":{"id":5702,"nodeType":"StructuredDocumentation","src":"418:67:22","text":" @dev Returns the smallest of two signed numbers."},"id":5719,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:22","nodeType":"FunctionDefinition","parameters":{"id":5707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5704,"mutability":"mutable","name":"a","nameLocation":"510:1:22","nodeType":"VariableDeclaration","scope":5719,"src":"503:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5703,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5706,"mutability":"mutable","name":"b","nameLocation":"520:1:22","nodeType":"VariableDeclaration","scope":5719,"src":"513:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5705,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:22"},"returnParameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5719,"src":"546:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5708,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:22"},"scope":5785,"src":"490:101:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5762,"nodeType":"Block","src":"796:162:22","statements":[{"assignments":[5730],"declarations":[{"constant":false,"id":5730,"mutability":"mutable","name":"x","nameLocation":"865:1:22","nodeType":"VariableDeclaration","scope":5762,"src":"858:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5729,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5743,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"870:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5732,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"874:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5735,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"881:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5736,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"885:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:22"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5744,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"910:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5749,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"930:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5747,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:22","typeDescriptions":{}}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5745,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:22","typeDescriptions":{}}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"944:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5755,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"948:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5728,"id":5761,"nodeType":"Return","src":"903:48:22"}]},"documentation":{"id":5720,"nodeType":"StructuredDocumentation","src":"597:126:22","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5763,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:22","nodeType":"FunctionDefinition","parameters":{"id":5725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5722,"mutability":"mutable","name":"a","nameLocation":"752:1:22","nodeType":"VariableDeclaration","scope":5763,"src":"745:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5721,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5724,"mutability":"mutable","name":"b","nameLocation":"762:1:22","nodeType":"VariableDeclaration","scope":5763,"src":"755:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5723,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:22"},"returnParameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5763,"src":"788:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5726,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:22"},"scope":5785,"src":"728:230:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5783,"nodeType":"Block","src":"1102:158:22","statements":[{"id":5782,"nodeType":"UncheckedBlock","src":"1112:142:22","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5773,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"1227:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:22","subExpression":{"id":5777,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"1241:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:22","trueExpression":{"id":5776,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"1236:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:22","typeDescriptions":{}}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5770,"id":5781,"nodeType":"Return","src":"1212:31:22"}]}]},"documentation":{"id":5764,"nodeType":"StructuredDocumentation","src":"964:78:22","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5784,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:22","nodeType":"FunctionDefinition","parameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"n","nameLocation":"1067:1:22","nodeType":"VariableDeclaration","scope":5784,"src":"1060:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5765,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:22"},"returnParameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5784,"src":"1093:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:22"},"scope":5785,"src":"1047:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5786,"src":"215:1047:22","usedErrors":[],"usedEvents":[]}],"src":"109:1154:22"},"id":22},"contracts/CodeDAOToken.sol":{"ast":{"absolutePath":"contracts/CodeDAOToken.sol","exportedSymbols":{"CodeDAOToken":[5977]},"id":5978,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5787,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"CodeDAOToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5977,"linearizedBaseContracts":[5977],"name":"CodeDAOToken","nameLocation":"67:12:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":5790,"mutability":"mutable","name":"name","nameLocation":"100:4:23","nodeType":"VariableDeclaration","scope":5977,"src":"86:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5788,"name":"string","nodeType":"ElementaryTypeName","src":"86:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"436f646544414f20546f6b656e","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"107:15:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_feaa846fd1c651cb3fd7978250ad1bd6d8c5510e6d871c6f8875e177a3ddf7fc","typeString":"literal_string \"CodeDAO Token\""},"value":"CodeDAO Token"},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":5793,"mutability":"mutable","name":"symbol","nameLocation":"142:6:23","nodeType":"VariableDeclaration","scope":5977,"src":"128:29:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":5791,"name":"string","nodeType":"ElementaryTypeName","src":"128:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"434f4445","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"151:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b34274f9abde9c138515c29851148d7a86224e260870f1c71e565c391f1bd01f","typeString":"literal_string \"CODE\""},"value":"CODE"},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":5796,"mutability":"mutable","name":"decimals","nameLocation":"176:8:23","nodeType":"VariableDeclaration","scope":5977,"src":"163:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5794,"name":"uint8","nodeType":"ElementaryTypeName","src":"163:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"187:2:23","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"constant":false,"functionSelector":"18160ddd","id":5799,"mutability":"mutable","name":"totalSupply","nameLocation":"210:11:23","nodeType":"VariableDeclaration","scope":5977,"src":"195:56:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5797,"name":"uint256","nodeType":"ElementaryTypeName","src":"195:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030303030303030303030303030303030303030303030303030","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"224:27:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000_by_1","typeString":"int_const 100000000000000000000000000"},"value":"100000000000000000000000000"},"visibility":"public"},{"constant":false,"functionSelector":"70a08231","id":5803,"mutability":"mutable","name":"balanceOf","nameLocation":"297:9:23","nodeType":"VariableDeclaration","scope":5977,"src":"262:44:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":5802,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5800,"name":"address","nodeType":"ElementaryTypeName","src":"270:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"262:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5801,"name":"uint256","nodeType":"ElementaryTypeName","src":"281:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":5809,"mutability":"mutable","name":"allowance","nameLocation":"367:9:23","nodeType":"VariableDeclaration","scope":5977,"src":"312:64:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":5808,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5804,"name":"address","nodeType":"ElementaryTypeName","src":"320:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"312:47:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5807,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5805,"name":"address","nodeType":"ElementaryTypeName","src":"339:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"331:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5806,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":5817,"name":"Transfer","nameLocation":"393:8:23","nodeType":"EventDefinition","parameters":{"id":5816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"418:4:23","nodeType":"VariableDeclaration","scope":5817,"src":"402:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5810,"name":"address","nodeType":"ElementaryTypeName","src":"402:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5813,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"440:2:23","nodeType":"VariableDeclaration","scope":5817,"src":"424:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5812,"name":"address","nodeType":"ElementaryTypeName","src":"424:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5815,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"452:5:23","nodeType":"VariableDeclaration","scope":5817,"src":"444:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5814,"name":"uint256","nodeType":"ElementaryTypeName","src":"444:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"401:57:23"},"src":"387:72:23"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":5825,"name":"Approval","nameLocation":"470:8:23","nodeType":"EventDefinition","parameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"495:5:23","nodeType":"VariableDeclaration","scope":5825,"src":"479:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5818,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5821,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"518:7:23","nodeType":"VariableDeclaration","scope":5825,"src":"502:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5820,"name":"address","nodeType":"ElementaryTypeName","src":"502:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5823,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"535:5:23","nodeType":"VariableDeclaration","scope":5825,"src":"527:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5822,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"478:63:23"},"src":"464:78:23"},{"body":{"id":5843,"nodeType":"Block","src":"566:176:23","statements":[{"expression":{"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5828,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"576:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5830,"indexExpression":{"hexValue":"307838313333343364333030363565416539443142653635323132303366354330383734383138433238","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"586:42:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x813343d30065eAe9D1Be6521203f5C0874818C28"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"576:53:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5831,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"632:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"576:67:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5833,"nodeType":"ExpressionStatement","src":"576:67:23"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"675:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"667:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5835,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:23","typeDescriptions":{}}},"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"667:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"307838313333343364333030363565416539443142653635323132303366354330383734383138433238","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"679:42:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x813343d30065eAe9D1Be6521203f5C0874818C28"},{"id":5840,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"723:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5834,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"658:8:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"658:77:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5842,"nodeType":"EmitStatement","src":"653:82:23"}]},"id":5844,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5826,"nodeType":"ParameterList","parameters":[],"src":"563:2:23"},"returnParameters":{"id":5827,"nodeType":"ParameterList","parameters":[],"src":"566:0:23"},"scope":5977,"src":"552:190:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5871,"nodeType":"Block","src":"825:127:23","statements":[{"expression":{"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5853,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"835:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5857,"indexExpression":{"expression":{"id":5854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"845:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"849:6:23","memberName":"sender","nodeType":"MemberAccess","src":"845:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"835:21:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5858,"indexExpression":{"id":5856,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"857:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"835:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"868:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"835:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5861,"nodeType":"ExpressionStatement","src":"835:38:23"},{"eventCall":{"arguments":[{"expression":{"id":5863,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"897:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"901:6:23","memberName":"sender","nodeType":"MemberAccess","src":"897:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5865,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"909:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5848,"src":"918:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5862,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5825,"src":"888:8:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"888:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5868,"nodeType":"EmitStatement","src":"883:41:23"},{"expression":{"hexValue":"74727565","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"941:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5852,"id":5870,"nodeType":"Return","src":"934:11:23"}]},"functionSelector":"095ea7b3","id":5872,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"761:7:23","nodeType":"FunctionDefinition","parameters":{"id":5849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5846,"mutability":"mutable","name":"spender","nameLocation":"777:7:23","nodeType":"VariableDeclaration","scope":5872,"src":"769:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5845,"name":"address","nodeType":"ElementaryTypeName","src":"769:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5848,"mutability":"mutable","name":"value","nameLocation":"794:5:23","nodeType":"VariableDeclaration","scope":5872,"src":"786:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5847,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"768:32:23"},"returnParameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5872,"src":"819:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5850,"name":"bool","nodeType":"ElementaryTypeName","src":"819:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"818:6:23"},"scope":5977,"src":"752:200:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5933,"nodeType":"Block","src":"1049:328:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5884,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"1067:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5886,"indexExpression":{"id":5885,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"1077:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1067:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"1086:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1067:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":5889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1093:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":5883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1059:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1059:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5891,"nodeType":"ExpressionStatement","src":"1059:57:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":5893,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"1134:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5895,"indexExpression":{"id":5894,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"1144:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1134:15:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5898,"indexExpression":{"expression":{"id":5896,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1150:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1154:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1150:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1134:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"1165:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1134:36:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616c6c6f77616e6365","id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1172:24:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""},"value":"Insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""}],"id":5892,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1126:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1126:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5903,"nodeType":"ExpressionStatement","src":"1126:71:23"},{"expression":{"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5904,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"1207:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5906,"indexExpression":{"id":5905,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"1217:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1207:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"1226:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1207:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5909,"nodeType":"ExpressionStatement","src":"1207:24:23"},{"expression":{"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5910,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"1241:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5912,"indexExpression":{"id":5911,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"1251:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1241:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"1258:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1241:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5915,"nodeType":"ExpressionStatement","src":"1241:22:23"},{"expression":{"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5916,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"1273:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5920,"indexExpression":{"id":5917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"1283:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1273:15:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5921,"indexExpression":{"expression":{"id":5918,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1289:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1293:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1289:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1273:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"1304:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1273:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5924,"nodeType":"ExpressionStatement","src":"1273:36:23"},{"eventCall":{"arguments":[{"id":5926,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"1333:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5927,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5876,"src":"1339:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"1343:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5925,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"1324:8:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5930,"nodeType":"EmitStatement","src":"1319:30:23"},{"expression":{"hexValue":"74727565","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1366:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5882,"id":5932,"nodeType":"Return","src":"1359:11:23"}]},"functionSelector":"23b872dd","id":5934,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"971:12:23","nodeType":"FunctionDefinition","parameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5874,"mutability":"mutable","name":"from","nameLocation":"992:4:23","nodeType":"VariableDeclaration","scope":5934,"src":"984:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5873,"name":"address","nodeType":"ElementaryTypeName","src":"984:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5876,"mutability":"mutable","name":"to","nameLocation":"1006:2:23","nodeType":"VariableDeclaration","scope":5934,"src":"998:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5875,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5878,"mutability":"mutable","name":"value","nameLocation":"1018:5:23","nodeType":"VariableDeclaration","scope":5934,"src":"1010:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1010:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"983:41:23"},"returnParameters":{"id":5882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5934,"src":"1043:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5880,"name":"bool","nodeType":"ElementaryTypeName","src":"1043:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1042:6:23"},"scope":5977,"src":"962:415:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5975,"nodeType":"Block","src":"1456:219:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5944,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"1474:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5947,"indexExpression":{"expression":{"id":5945,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1484:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1488:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1484:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1474:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"1499:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1474:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":5950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1506:22:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":5943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1466:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1466:63:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5952,"nodeType":"ExpressionStatement","src":"1466:63:23"},{"expression":{"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5953,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"1539:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5956,"indexExpression":{"expression":{"id":5954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1549:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1553:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1549:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1539:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"1564:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1539:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5959,"nodeType":"ExpressionStatement","src":"1539:30:23"},{"expression":{"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5960,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"1579:9:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5962,"indexExpression":{"id":5961,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"1589:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1579:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"1596:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1579:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5965,"nodeType":"ExpressionStatement","src":"1579:22:23"},{"eventCall":{"arguments":[{"expression":{"id":5967,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1625:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1629:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1625:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5969,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"1637:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"1641:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5966,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"1616:8:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5972,"nodeType":"EmitStatement","src":"1611:36:23"},{"expression":{"hexValue":"74727565","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1664:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5942,"id":5974,"nodeType":"Return","src":"1657:11:23"}]},"functionSelector":"a9059cbb","id":5976,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1396:8:23","nodeType":"FunctionDefinition","parameters":{"id":5939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5936,"mutability":"mutable","name":"to","nameLocation":"1413:2:23","nodeType":"VariableDeclaration","scope":5976,"src":"1405:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5935,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5938,"mutability":"mutable","name":"value","nameLocation":"1425:5:23","nodeType":"VariableDeclaration","scope":5976,"src":"1417:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1404:27:23"},"returnParameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5976,"src":"1450:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5940,"name":"bool","nodeType":"ElementaryTypeName","src":"1450:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1449:6:23"},"scope":5977,"src":"1387:288:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5978,"src":"58:1619:23","usedErrors":[],"usedEvents":[5817,5825]}],"src":"32:1646:23"},"id":23},"contracts/MerkleDistributorV2.sol":{"ast":{"absolutePath":"contracts/MerkleDistributorV2.sol","exportedSymbols":{"CodeDAOToken":[5977],"Context":[2074],"Counters":[2148],"ECDSA":[3069],"EIP712":[3273],"ERC20":[999],"ERC20Permit":[1249],"ERC20Votes":[1983],"IERC20":[1077],"IERC20Metadata":[2008],"IERC20Permit":[2044],"IERC5267":[215],"IERC5805":[224],"IERC6372":[239],"IVotes":[190],"Math":[4139],"MerkleDistributorV2":[6770],"Ownable":[112],"Pausable":[347],"ReentrancyGuard":[412],"SafeCast":[5680],"ShortString":[2153],"ShortStrings":[2364],"SignedMath":[5785],"StakingVault":[7012],"StorageSlot":[2474],"Strings":[2703]},"id":6771,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5979,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"contracts/CodeDAOToken.sol","file":"./CodeDAOToken.sol","id":5980,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6771,"sourceUnit":5978,"src":"58:28:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/StakingVault.sol","file":"./StakingVault.sol","id":5981,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6771,"sourceUnit":7013,"src":"87:28:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":5982,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6771,"sourceUnit":348,"src":"116:55:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":5983,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6771,"sourceUnit":413,"src":"172:62:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5984,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6771,"sourceUnit":113,"src":"235:52:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5986,"name":"Pausable","nameLocations":["509:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":347,"src":"509:8:24"},"id":5987,"nodeType":"InheritanceSpecifier","src":"509:8:24"},{"baseName":{"id":5988,"name":"ReentrancyGuard","nameLocations":["519:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":412,"src":"519:15:24"},"id":5989,"nodeType":"InheritanceSpecifier","src":"519:15:24"},{"baseName":{"id":5990,"name":"Ownable","nameLocations":["536:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"536:7:24"},"id":5991,"nodeType":"InheritanceSpecifier","src":"536:7:24"}],"canonicalName":"MerkleDistributorV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":5985,"nodeType":"StructuredDocumentation","src":"289:187:24","text":" @title MerkleDistributorV2 \n @notice Cumulative Merkle distributor for airdrops + builder rewards\n @dev Supports claim-to-stake, gasless claims, and multi-epoch aggregation"},"fullyImplemented":true,"id":6770,"linearizedBaseContracts":[6770,112,412,347,2074],"name":"MerkleDistributorV2","nameLocation":"486:19:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"fc0c546a","id":5994,"mutability":"immutable","name":"token","nameLocation":"580:5:24","nodeType":"VariableDeclaration","scope":6770,"src":"550:35:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"},"typeName":{"id":5993,"nodeType":"UserDefinedTypeName","pathNode":{"id":5992,"name":"CodeDAOToken","nameLocations":["550:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":5977,"src":"550:12:24"},"referencedDeclaration":5977,"src":"550:12:24","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"visibility":"public"},{"constant":false,"functionSelector":"24e7964a","id":5997,"mutability":"immutable","name":"stakingVault","nameLocation":"621:12:24","nodeType":"VariableDeclaration","scope":6770,"src":"591:42:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_StakingVault_$7012","typeString":"contract StakingVault"},"typeName":{"id":5996,"nodeType":"UserDefinedTypeName","pathNode":{"id":5995,"name":"StakingVault","nameLocations":["591:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":7012,"src":"591:12:24"},"referencedDeclaration":7012,"src":"591:12:24","typeDescriptions":{"typeIdentifier":"t_contract$_StakingVault_$7012","typeString":"contract StakingVault"}},"visibility":"public"},{"constant":false,"functionSelector":"76671808","id":5999,"mutability":"mutable","name":"currentEpoch","nameLocation":"681:12:24","nodeType":"VariableDeclaration","scope":6770,"src":"666:27:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5998,"name":"uint256","nodeType":"ElementaryTypeName","src":"666:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"55deccc1","id":6003,"mutability":"mutable","name":"epochRoots","nameLocation":"734:10:24","nodeType":"VariableDeclaration","scope":6770,"src":"699:45:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":6002,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6000,"name":"uint256","nodeType":"ElementaryTypeName","src":"707:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"699:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"718:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"constant":false,"functionSelector":"34fc6fce","id":6007,"mutability":"mutable","name":"epochTotals","nameLocation":"785:11:24","nodeType":"VariableDeclaration","scope":6770,"src":"750:46:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6006,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6004,"name":"uint256","nodeType":"ElementaryTypeName","src":"758:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"750:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"a8110752","id":6011,"mutability":"mutable","name":"epochDescriptions","nameLocation":"836:17:24","nodeType":"VariableDeclaration","scope":6770,"src":"802:51:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":6010,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6008,"name":"uint256","nodeType":"ElementaryTypeName","src":"810:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"802:26:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6009,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"8232e06e","id":6015,"mutability":"mutable","name":"epochExpiry","nameLocation":"894:11:24","nodeType":"VariableDeclaration","scope":6770,"src":"859:46:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6014,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6012,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"859:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6013,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c884ef83","id":6019,"mutability":"mutable","name":"claimed","nameLocation":"985:7:24","nodeType":"VariableDeclaration","scope":6770,"src":"950:42:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6018,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6016,"name":"address","nodeType":"ElementaryTypeName","src":"958:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"950:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6017,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"8406c079","id":6021,"mutability":"mutable","name":"relayer","nameLocation":"1039:7:24","nodeType":"VariableDeclaration","scope":6770,"src":"1024:22:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6020,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"08883ed5","id":6025,"mutability":"mutable","name":"hasClaimedGasless","nameLocation":"1084:17:24","nodeType":"VariableDeclaration","scope":6770,"src":"1052:49:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6024,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6022,"name":"address","nodeType":"ElementaryTypeName","src":"1060:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1052:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6023,"name":"bool","nodeType":"ElementaryTypeName","src":"1071:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"cf22f118","id":6027,"mutability":"mutable","name":"gaslessClaimCount","nameLocation":"1122:17:24","nodeType":"VariableDeclaration","scope":6770,"src":"1107:32:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6026,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"a3df5b63","id":6030,"mutability":"constant","name":"MAX_GASLESS_CLAIMS","nameLocation":"1169:18:24","nodeType":"VariableDeclaration","scope":6770,"src":"1145:49:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1145:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":6029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:4:24","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"public"},{"constant":false,"functionSelector":"af2a660a","id":6032,"mutability":"mutable","name":"rootGuardian","nameLocation":"1246:12:24","nodeType":"VariableDeclaration","scope":6770,"src":"1231:27:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6031,"name":"address","nodeType":"ElementaryTypeName","src":"1231:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"85ef751f","id":6036,"mutability":"mutable","name":"epochCaps","nameLocation":"1299:9:24","nodeType":"VariableDeclaration","scope":6770,"src":"1264:44:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":6035,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1264:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"531f160e49b222fc485f64e252fb1cec5b91deab50c106488f71feeb397b36e5","id":6046,"name":"EpochSet","nameLocation":"1325:8:24","nodeType":"EventDefinition","parameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6038,"indexed":true,"mutability":"mutable","name":"epochId","nameLocation":"1350:7:24","nodeType":"VariableDeclaration","scope":6046,"src":"1334:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1334:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6040,"indexed":false,"mutability":"mutable","name":"merkleRoot","nameLocation":"1367:10:24","nodeType":"VariableDeclaration","scope":6046,"src":"1359:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1359:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6042,"indexed":false,"mutability":"mutable","name":"totalAmount","nameLocation":"1387:11:24","nodeType":"VariableDeclaration","scope":6046,"src":"1379:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1379:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6044,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"1407:11:24","nodeType":"VariableDeclaration","scope":6046,"src":"1400:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6043,"name":"string","nodeType":"ElementaryTypeName","src":"1400:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1333:86:24"},"src":"1319:101:24"},{"anonymous":false,"eventSelector":"f0a271696089bb4e9e39c978b100f1892bfc98a87493ad2e459b06c417c6c583","id":6056,"name":"Claimed","nameLocation":"1431:7:24","nodeType":"EventDefinition","parameters":{"id":6055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1455:4:24","nodeType":"VariableDeclaration","scope":6056,"src":"1439:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6047,"name":"address","nodeType":"ElementaryTypeName","src":"1439:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6050,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1469:6:24","nodeType":"VariableDeclaration","scope":6056,"src":"1461:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1461:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6052,"indexed":false,"mutability":"mutable","name":"autoStaked","nameLocation":"1482:10:24","nodeType":"VariableDeclaration","scope":6056,"src":"1477:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6051,"name":"bool","nodeType":"ElementaryTypeName","src":"1477:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6054,"indexed":false,"mutability":"mutable","name":"epochId","nameLocation":"1502:7:24","nodeType":"VariableDeclaration","scope":6056,"src":"1494:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1494:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1438:72:24"},"src":"1425:86:24"},{"anonymous":false,"eventSelector":"812a43286e5be0f69c00b0e4cc2dee191f955b205fcb1d5ad65d900a7cb091c6","id":6064,"name":"GaslessClaimed","nameLocation":"1522:14:24","nodeType":"EventDefinition","parameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1553:4:24","nodeType":"VariableDeclaration","scope":6064,"src":"1537:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6057,"name":"address","nodeType":"ElementaryTypeName","src":"1537:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6060,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1567:6:24","nodeType":"VariableDeclaration","scope":6064,"src":"1559:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1559:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6062,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"1591:7:24","nodeType":"VariableDeclaration","scope":6064,"src":"1575:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6061,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1536:63:24"},"src":"1516:84:24"},{"anonymous":false,"eventSelector":"605ca4e43489fb38b91aa63dd9147cd3847957694b080b9285ec898b34269f0c","id":6070,"name":"RelayerUpdated","nameLocation":"1611:14:24","nodeType":"EventDefinition","parameters":{"id":6069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6066,"indexed":true,"mutability":"mutable","name":"oldRelayer","nameLocation":"1642:10:24","nodeType":"VariableDeclaration","scope":6070,"src":"1626:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6065,"name":"address","nodeType":"ElementaryTypeName","src":"1626:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6068,"indexed":true,"mutability":"mutable","name":"newRelayer","nameLocation":"1670:10:24","nodeType":"VariableDeclaration","scope":6070,"src":"1654:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6067,"name":"address","nodeType":"ElementaryTypeName","src":"1654:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1625:56:24"},"src":"1605:77:24"},{"body":{"id":6081,"nodeType":"Block","src":"1715:73:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1733:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1737:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1733:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6075,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"1747:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1733:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742072656c61796572","id":6077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1756:13:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed0268729b1b972f40db9ec4fb593736302a056f098512ce1e1ce894f4595e46","typeString":"literal_string \"Not relayer\""},"value":"Not relayer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed0268729b1b972f40db9ec4fb593736302a056f098512ce1e1ce894f4595e46","typeString":"literal_string \"Not relayer\""}],"id":6072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1725:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1725:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6079,"nodeType":"ExpressionStatement","src":"1725:45:24"},{"id":6080,"nodeType":"PlaceholderStatement","src":"1780:1:24"}]},"id":6082,"name":"onlyRelayer","nameLocation":"1701:11:24","nodeType":"ModifierDefinition","parameters":{"id":6071,"nodeType":"ParameterList","parameters":[],"src":"1712:2:24"},"src":"1692:96:24","virtual":false,"visibility":"internal"},{"body":{"id":6099,"nodeType":"Block","src":"1822:104:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1840:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1844:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1840:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6087,"name":"rootGuardian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"1854:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1840:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6089,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1870:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1874:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1870:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6091,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1884:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1884:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1870:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1840:51:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420677561726469616e","id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1893:14:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_088853b5bb250eafe849065e7d60f60015ee3fb957178d2aa308fb3738bede9e","typeString":"literal_string \"Not guardian\""},"value":"Not guardian"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_088853b5bb250eafe849065e7d60f60015ee3fb957178d2aa308fb3738bede9e","typeString":"literal_string \"Not guardian\""}],"id":6084,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1832:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1832:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6097,"nodeType":"ExpressionStatement","src":"1832:76:24"},{"id":6098,"nodeType":"PlaceholderStatement","src":"1918:1:24"}]},"id":6100,"name":"onlyGuardian","nameLocation":"1807:12:24","nodeType":"ModifierDefinition","parameters":{"id":6083,"nodeType":"ParameterList","parameters":[],"src":"1819:2:24"},"src":"1798:128:24","virtual":false,"visibility":"internal"},{"body":{"id":6125,"nodeType":"Block","src":"2040:135:24","statements":[{"expression":{"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6109,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"2050:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6111,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"2071:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6110,"name":"CodeDAOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"2058:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CodeDAOToken_$5977_$","typeString":"type(contract CodeDAOToken)"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2058:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"src":"2050:28:24","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"id":6114,"nodeType":"ExpressionStatement","src":"2050:28:24"},{"expression":{"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6115,"name":"stakingVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"2088:12:24","typeDescriptions":{"typeIdentifier":"t_contract$_StakingVault_$7012","typeString":"contract StakingVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6117,"name":"_stakingVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"2116:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6116,"name":"StakingVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"2103:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StakingVault_$7012_$","typeString":"type(contract StakingVault)"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2103:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_StakingVault_$7012","typeString":"contract StakingVault"}},"src":"2088:42:24","typeDescriptions":{"typeIdentifier":"t_contract$_StakingVault_$7012","typeString":"contract StakingVault"}},"id":6120,"nodeType":"ExpressionStatement","src":"2088:42:24"},{"expression":{"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6121,"name":"rootGuardian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"2140:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6122,"name":"_rootGuardian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"2155:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2140:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6124,"nodeType":"ExpressionStatement","src":"2140:28:24"}]},"id":6126,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6102,"mutability":"mutable","name":"_token","nameLocation":"1965:6:24","nodeType":"VariableDeclaration","scope":6126,"src":"1957:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6101,"name":"address","nodeType":"ElementaryTypeName","src":"1957:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6104,"mutability":"mutable","name":"_stakingVault","nameLocation":"1989:13:24","nodeType":"VariableDeclaration","scope":6126,"src":"1981:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6103,"name":"address","nodeType":"ElementaryTypeName","src":"1981:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6106,"mutability":"mutable","name":"_rootGuardian","nameLocation":"2020:13:24","nodeType":"VariableDeclaration","scope":6126,"src":"2012:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6105,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:92:24"},"returnParameters":{"id":6108,"nodeType":"ParameterList","parameters":[],"src":"2040:0:24"},"scope":6770,"src":"1936:239:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6218,"nodeType":"Block","src":"2761:644:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6143,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"2779:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6144,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"2790:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2805:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2790:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2779:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742062652073657175656e7469616c","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2808:20:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_39588804c758f2e9908849f62c124c120e3572ec1154e4327059638e645163ac","typeString":"literal_string \"Must be sequential\""},"value":"Must be sequential"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39588804c758f2e9908849f62c124c120e3572ec1154e4327059638e645163ac","typeString":"literal_string \"Must be sequential\""}],"id":6142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2771:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2771:58:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6150,"nodeType":"ExpressionStatement","src":"2771:58:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6152,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"2847:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2869:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2861:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2861:7:24","typeDescriptions":{}}},"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2861:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2847:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726f6f74","id":6158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2873:14:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_01223b358a83cf16c382ca2254ee151e0086fe9f0732d6475b41d28505fea433","typeString":"literal_string \"Invalid root\""},"value":"Invalid root"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01223b358a83cf16c382ca2254ee151e0086fe9f0732d6475b41d28505fea433","typeString":"literal_string \"Invalid root\""}],"id":6151,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2839:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:49:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6160,"nodeType":"ExpressionStatement","src":"2839:49:24"},{"expression":{"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6161,"name":"epochRoots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"2907:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":6163,"indexExpression":{"id":6162,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"2918:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2907:19:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6164,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"2929:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2907:32:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6166,"nodeType":"ExpressionStatement","src":"2907:32:24"},{"expression":{"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6167,"name":"epochTotals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"2949:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6169,"indexExpression":{"id":6168,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"2961:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2949:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6170,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"2972:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2949:34:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6172,"nodeType":"ExpressionStatement","src":"2949:34:24"},{"expression":{"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6173,"name":"epochDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"2993:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":6175,"indexExpression":{"id":6174,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"3011:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2993:26:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6176,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"3022:11:24","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"2993:40:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6178,"nodeType":"ExpressionStatement","src":"2993:40:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6179,"name":"expiryDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"3056:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3069:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3056:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6195,"nodeType":"IfStatement","src":"3052:107:24","trueBody":{"id":6194,"nodeType":"Block","src":"3072:87:24","statements":[{"expression":{"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6182,"name":"epochExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"3086:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6184,"indexExpression":{"id":6183,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"3098:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3086:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6185,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3109:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3115:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"3109:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6187,"name":"expiryDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"3128:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":6188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3141:6:24","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"3128:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3127:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3109:39:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:62:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6193,"nodeType":"ExpressionStatement","src":"3086:62:24"}]}},{"expression":{"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6196,"name":"epochCaps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"3232:9:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6198,"indexExpression":{"id":6197,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"3242:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3232:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6199,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"3254:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313530","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3268:3:24","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},"src":"3254:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3253:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3275:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3253:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3232:46:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6206,"nodeType":"ExpressionStatement","src":"3232:46:24"},{"expression":{"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6207,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"3297:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6208,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"3312:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3297:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6210,"nodeType":"ExpressionStatement","src":"3297:22:24"},{"eventCall":{"arguments":[{"id":6212,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"3352:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6213,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"3361:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6214,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"3373:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6215,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"3386:11:24","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6211,"name":"EpochSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6046,"src":"3343:8:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,bytes32,uint256,string memory)"}},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3343:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6217,"nodeType":"EmitStatement","src":"3338:60:24"}]},"documentation":{"id":6127,"nodeType":"StructuredDocumentation","src":"2185:377:24","text":" @notice Set Merkle root for new epoch (cumulative)\n @param epochId Epoch number (must be sequential)\n @param merkleRoot Root of Merkle tree with cumulative amounts\n @param totalAmount Total tokens allocated for this epoch\n @param description Human readable description\n @param expiryDays Days until epoch expires (0 = no expiry)"},"functionSelector":"53320fc2","id":6219,"implemented":true,"kind":"function","modifiers":[{"id":6140,"kind":"modifierInvocation","modifierName":{"id":6139,"name":"onlyOwner","nameLocations":["2751:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2751:9:24"},"nodeType":"ModifierInvocation","src":"2751:9:24"}],"name":"setEpochRoot","nameLocation":"2576:12:24","nodeType":"FunctionDefinition","parameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"epochId","nameLocation":"2606:7:24","nodeType":"VariableDeclaration","scope":6219,"src":"2598:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2598:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6131,"mutability":"mutable","name":"merkleRoot","nameLocation":"2631:10:24","nodeType":"VariableDeclaration","scope":6219,"src":"2623:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2623:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6133,"mutability":"mutable","name":"totalAmount","nameLocation":"2659:11:24","nodeType":"VariableDeclaration","scope":6219,"src":"2651:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6132,"name":"uint256","nodeType":"ElementaryTypeName","src":"2651:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6135,"mutability":"mutable","name":"description","nameLocation":"2696:11:24","nodeType":"VariableDeclaration","scope":6219,"src":"2680:27:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6134,"name":"string","nodeType":"ElementaryTypeName","src":"2680:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6137,"mutability":"mutable","name":"expiryDays","nameLocation":"2725:10:24","nodeType":"VariableDeclaration","scope":6219,"src":"2717:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2717:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:153:24"},"returnParameters":{"id":6141,"nodeType":"ParameterList","parameters":[],"src":"2761:0:24"},"scope":6770,"src":"2567:838:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6243,"nodeType":"Block","src":"3834:84:24","statements":[{"expression":{"arguments":[{"expression":{"id":6235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3851:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3855:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3851:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6237,"name":"cumulativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"3863:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6238,"name":"autoStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"3881:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6239,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"3892:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"hexValue":"66616c7365","id":6240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6234,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"3844:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,uint256,bool,bytes32[] calldata,bool) returns (uint256)"}},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3844:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6242,"nodeType":"ExpressionStatement","src":"3844:67:24"}]},"documentation":{"id":6220,"nodeType":"StructuredDocumentation","src":"3415:259:24","text":" @notice Claim tokens (with auto-stake option)\n @param cumulativeAmount Total lifetime earnings for user\n @param autoStake Whether to automatically stake claimed tokens\n @param merkleProof Proof of inclusion in latest epoch"},"functionSelector":"cf077ab0","id":6244,"implemented":true,"kind":"function","modifiers":[{"id":6230,"kind":"modifierInvocation","modifierName":{"id":6229,"name":"nonReentrant","nameLocations":["3807:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":377,"src":"3807:12:24"},"nodeType":"ModifierInvocation","src":"3807:12:24"},{"id":6232,"kind":"modifierInvocation","modifierName":{"id":6231,"name":"whenNotPaused","nameLocations":["3820:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":274,"src":"3820:13:24"},"nodeType":"ModifierInvocation","src":"3820:13:24"}],"name":"claim","nameLocation":"3688:5:24","nodeType":"FunctionDefinition","parameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"cumulativeAmount","nameLocation":"3711:16:24","nodeType":"VariableDeclaration","scope":6244,"src":"3703:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6221,"name":"uint256","nodeType":"ElementaryTypeName","src":"3703:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6224,"mutability":"mutable","name":"autoStake","nameLocation":"3742:9:24","nodeType":"VariableDeclaration","scope":6244,"src":"3737:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6223,"name":"bool","nodeType":"ElementaryTypeName","src":"3737:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6227,"mutability":"mutable","name":"merkleProof","nameLocation":"3780:11:24","nodeType":"VariableDeclaration","scope":6244,"src":"3761:30:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3761:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6226,"nodeType":"ArrayTypeName","src":"3761:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3693:104:24"},"returnParameters":{"id":6233,"nodeType":"ParameterList","parameters":[],"src":"3834:0:24"},"scope":6770,"src":"3679:239:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6304,"nodeType":"Block","src":"4389:395:24","statements":[{"expression":{"arguments":[{"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4407:24:24","subExpression":{"baseExpression":{"id":6264,"name":"hasClaimedGasless","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"4408:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6266,"indexExpression":{"id":6265,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"4426:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4408:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792075736564206761736c657373","id":6268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4433:22:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ffd0806d1b574340f5b668d20cfcedab9830e74fed2b4e9907ad8f64504099f","typeString":"literal_string \"Already used gasless\""},"value":"Already used gasless"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ffd0806d1b574340f5b668d20cfcedab9830e74fed2b4e9907ad8f64504099f","typeString":"literal_string \"Already used gasless\""}],"id":6263,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4399:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:57:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6270,"nodeType":"ExpressionStatement","src":"4399:57:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6272,"name":"gaslessClaimCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"4474:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6273,"name":"MAX_GASLESS_CLAIMS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"4494:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4474:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4761736c6573732071756f7461206578636565646564","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4514:24:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c8cd47c74c6c9d7f2ff54a7132a5c333bcd308d8d791df9e3b2b4f9527061c9","typeString":"literal_string \"Gasless quota exceeded\""},"value":"Gasless quota exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7c8cd47c74c6c9d7f2ff54a7132a5c333bcd308d8d791df9e3b2b4f9527061c9","typeString":"literal_string \"Gasless quota exceeded\""}],"id":6271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4466:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4466:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6277,"nodeType":"ExpressionStatement","src":"4466:73:24"},{"expression":{"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6278,"name":"hasClaimedGasless","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"4558:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6280,"indexExpression":{"id":6279,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"4576:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4558:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4584:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4558:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6283,"nodeType":"ExpressionStatement","src":"4558:30:24"},{"expression":{"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4598:19:24","subExpression":{"id":6284,"name":"gaslessClaimCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"4598:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6286,"nodeType":"ExpressionStatement","src":"4598:19:24"},{"assignments":[6288],"declarations":[{"constant":false,"id":6288,"mutability":"mutable","name":"amount","nameLocation":"4644:6:24","nodeType":"VariableDeclaration","scope":6304,"src":"4636:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6287,"name":"uint256","nodeType":"ElementaryTypeName","src":"4636:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6296,"initialValue":{"arguments":[{"id":6290,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"4660:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6291,"name":"cumulativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"4666:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6292,"name":"autoStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"4684:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6293,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"4695:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"hexValue":"74727565","id":6294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4708:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6289,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"4653:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,uint256,bool,bytes32[] calldata,bool) returns (uint256)"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:60:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4636:77:24"},{"eventCall":{"arguments":[{"id":6298,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"4752:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6299,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"4758:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6300,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4766:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4770:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4766:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6297,"name":"GaslessClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"4737:14:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4737:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6303,"nodeType":"EmitStatement","src":"4732:45:24"}]},"documentation":{"id":6245,"nodeType":"StructuredDocumentation","src":"3928:260:24","text":" @notice Gasless claim for first-time users (relayer pays gas)\n @param user Address to claim for\n @param cumulativeAmount Total lifetime earnings\n @param autoStake Whether to auto-stake\n @param merkleProof Merkle proof"},"functionSelector":"c85ef1d3","id":6305,"implemented":true,"kind":"function","modifiers":[{"id":6257,"kind":"modifierInvocation","modifierName":{"id":6256,"name":"onlyRelayer","nameLocations":["4350:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":6082,"src":"4350:11:24"},"nodeType":"ModifierInvocation","src":"4350:11:24"},{"id":6259,"kind":"modifierInvocation","modifierName":{"id":6258,"name":"nonReentrant","nameLocations":["4362:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":377,"src":"4362:12:24"},"nodeType":"ModifierInvocation","src":"4362:12:24"},{"id":6261,"kind":"modifierInvocation","modifierName":{"id":6260,"name":"whenNotPaused","nameLocations":["4375:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":274,"src":"4375:13:24"},"nodeType":"ModifierInvocation","src":"4375:13:24"}],"name":"claimGasless","nameLocation":"4202:12:24","nodeType":"FunctionDefinition","parameters":{"id":6255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"user","nameLocation":"4232:4:24","nodeType":"VariableDeclaration","scope":6305,"src":"4224:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6246,"name":"address","nodeType":"ElementaryTypeName","src":"4224:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6249,"mutability":"mutable","name":"cumulativeAmount","nameLocation":"4254:16:24","nodeType":"VariableDeclaration","scope":6305,"src":"4246:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"4246:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6251,"mutability":"mutable","name":"autoStake","nameLocation":"4285:9:24","nodeType":"VariableDeclaration","scope":6305,"src":"4280:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6250,"name":"bool","nodeType":"ElementaryTypeName","src":"4280:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6254,"mutability":"mutable","name":"merkleProof","nameLocation":"4323:11:24","nodeType":"VariableDeclaration","scope":6305,"src":"4304:30:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4304:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6253,"nodeType":"ArrayTypeName","src":"4304:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4214:126:24"},"returnParameters":{"id":6262,"nodeType":"ParameterList","parameters":[],"src":"4389:0:24"},"scope":6770,"src":"4193:591:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6375,"nodeType":"Block","src":"5076:338:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6326,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"5094:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5100:6:24","memberName":"length","nodeType":"MemberAccess","src":"5094:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6328,"name":"cumulativeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"5110:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5128:6:24","memberName":"length","nodeType":"MemberAccess","src":"5110:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5094:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6331,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"5138:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5144:6:24","memberName":"length","nodeType":"MemberAccess","src":"5138:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6333,"name":"merkleProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"5154:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes32[] calldata[] calldata"}},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5167:6:24","memberName":"length","nodeType":"MemberAccess","src":"5154:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5094:79:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4172726179206d69736d61746368","id":6337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5175:16:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_72f83046ddffaf81af5c1d224a38227024b385ad46ab7d308f45ea1aeb727eaf","typeString":"literal_string \"Array mismatch\""},"value":"Array mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_72f83046ddffaf81af5c1d224a38227024b385ad46ab7d308f45ea1aeb727eaf","typeString":"literal_string \"Array mismatch\""}],"id":6325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5086:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5086:106:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6339,"nodeType":"ExpressionStatement","src":"5086:106:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6341,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"5210:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5216:6:24","memberName":"length","nodeType":"MemberAccess","src":"5210:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3230","id":6343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5226:2:24","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"5210:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174636820746f6f206c61726765","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5230:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_efc84abca57e9d633bbdaac133490421501c7d188355f8cfc6bd88789251ec91","typeString":"literal_string \"Batch too large\""},"value":"Batch too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_efc84abca57e9d633bbdaac133490421501c7d188355f8cfc6bd88789251ec91","typeString":"literal_string \"Batch too large\""}],"id":6340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5202:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5202:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6347,"nodeType":"ExpressionStatement","src":"5202:46:24"},{"body":{"id":6373,"nodeType":"Block","src":"5310:98:24","statements":[{"expression":{"arguments":[{"baseExpression":{"id":6360,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"5331:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6362,"indexExpression":{"id":6361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"5337:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5331:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":6363,"name":"cumulativeAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"5341:17:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":6365,"indexExpression":{"id":6364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"5359:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5341:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6366,"name":"autoStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"5363:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"baseExpression":{"id":6367,"name":"merkleProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6318,"src":"5374:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes32[] calldata[] calldata"}},"id":6369,"indexExpression":{"id":6368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"5387:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5374:15:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"hexValue":"66616c7365","id":6370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5391:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6359,"name":"_claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"5324:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bool_$returns$_t_uint256_$","typeString":"function (address,uint256,bool,bytes32[] calldata,bool) returns (uint256)"}},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5324:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6372,"nodeType":"ExpressionStatement","src":"5324:73:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"5287:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6353,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"5291:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5297:6:24","memberName":"length","nodeType":"MemberAccess","src":"5291:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5287:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6374,"initializationExpression":{"assignments":[6349],"declarations":[{"constant":false,"id":6349,"mutability":"mutable","name":"i","nameLocation":"5280:1:24","nodeType":"VariableDeclaration","scope":6374,"src":"5272:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5272:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6351,"initialValue":{"hexValue":"30","id":6350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5284:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5272:13:24"},"loopExpression":{"expression":{"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5305:3:24","subExpression":{"id":6356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"5305:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6358,"nodeType":"ExpressionStatement","src":"5305:3:24"},"nodeType":"ForStatement","src":"5267:141:24"}]},"documentation":{"id":6306,"nodeType":"StructuredDocumentation","src":"4794:68:24","text":" @notice Batch claim multiple users (for airdrops)"},"functionSelector":"fb9e416d","id":6376,"implemented":true,"kind":"function","modifiers":[{"id":6321,"kind":"modifierInvocation","modifierName":{"id":6320,"name":"nonReentrant","nameLocations":["5049:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":377,"src":"5049:12:24"},"nodeType":"ModifierInvocation","src":"5049:12:24"},{"id":6323,"kind":"modifierInvocation","modifierName":{"id":6322,"name":"whenNotPaused","nameLocations":["5062:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":274,"src":"5062:13:24"},"nodeType":"ModifierInvocation","src":"5062:13:24"}],"name":"claimBatch","nameLocation":"4876:10:24","nodeType":"FunctionDefinition","parameters":{"id":6319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"users","nameLocation":"4915:5:24","nodeType":"VariableDeclaration","scope":6376,"src":"4896:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6307,"name":"address","nodeType":"ElementaryTypeName","src":"4896:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6308,"nodeType":"ArrayTypeName","src":"4896:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6312,"mutability":"mutable","name":"cumulativeAmounts","nameLocation":"4949:17:24","nodeType":"VariableDeclaration","scope":6376,"src":"4930:36:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6310,"name":"uint256","nodeType":"ElementaryTypeName","src":"4930:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6311,"nodeType":"ArrayTypeName","src":"4930:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6314,"mutability":"mutable","name":"autoStake","nameLocation":"4981:9:24","nodeType":"VariableDeclaration","scope":6376,"src":"4976:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6313,"name":"bool","nodeType":"ElementaryTypeName","src":"4976:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6318,"mutability":"mutable","name":"merkleProofs","nameLocation":"5021:12:24","nodeType":"VariableDeclaration","scope":6376,"src":"5000:33:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes32[][]"},"typeName":{"baseType":{"baseType":{"id":6315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5000:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6316,"nodeType":"ArrayTypeName","src":"5000:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"id":6317,"nodeType":"ArrayTypeName","src":"5000:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_storage_$dyn_storage_ptr","typeString":"bytes32[][]"}},"visibility":"internal"}],"src":"4886:153:24"},"returnParameters":{"id":6324,"nodeType":"ParameterList","parameters":[],"src":"5076:0:24"},"scope":6770,"src":"4867:547:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6497,"nodeType":"Block","src":"5681:1314:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6393,"name":"epochExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"5719:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6395,"indexExpression":{"id":6394,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"5731:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5719:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5747:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5719:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6409,"nodeType":"IfStatement","src":"5715:130:24","trueBody":{"id":6408,"nodeType":"Block","src":"5750:95:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6399,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5772:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5778:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"5772:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"id":6401,"name":"epochExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"5791:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6403,"indexExpression":{"id":6402,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"5803:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5791:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5772:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45706f63682065787069726564","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5818:15:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3437ea1fdc654989b0469b4bec9c9787bb5d78bb1f030e346172fec21872449","typeString":"literal_string \"Epoch expired\""},"value":"Epoch expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3437ea1fdc654989b0469b4bec9c9787bb5d78bb1f030e346172fec21872449","typeString":"literal_string \"Epoch expired\""}],"id":6398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5764:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5764:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6407,"nodeType":"ExpressionStatement","src":"5764:70:24"}]}},{"assignments":[6411],"declarations":[{"constant":false,"id":6411,"mutability":"mutable","name":"alreadyClaimed","nameLocation":"5909:14:24","nodeType":"VariableDeclaration","scope":6497,"src":"5901:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6410,"name":"uint256","nodeType":"ElementaryTypeName","src":"5901:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6415,"initialValue":{"baseExpression":{"id":6412,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"5926:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6414,"indexExpression":{"id":6413,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"5934:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5926:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5901:38:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6417,"name":"cumulativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"5957:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6418,"name":"alreadyClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"5976:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5957:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7468696e6720746f20636c61696d","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5992:18:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3","typeString":"literal_string \"Nothing to claim\""},"value":"Nothing to claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3","typeString":"literal_string \"Nothing to claim\""}],"id":6416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5949:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5949:62:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6422,"nodeType":"ExpressionStatement","src":"5949:62:24"},{"expression":{"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6423,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"6030:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6424,"name":"cumulativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"6044:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6425,"name":"alreadyClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"6063:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6044:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6030:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6428,"nodeType":"ExpressionStatement","src":"6030:47:24"},{"assignments":[6430],"declarations":[{"constant":false,"id":6430,"mutability":"mutable","name":"leaf","nameLocation":"6135:4:24","nodeType":"VariableDeclaration","scope":6497,"src":"6127:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6127:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6438,"initialValue":{"arguments":[{"arguments":[{"id":6434,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"6169:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6435,"name":"cumulativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"6175:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6432,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6152:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6156:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"6152:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6152:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6431,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6142:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6142:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6127:66:24"},{"expression":{"arguments":[{"arguments":[{"id":6441,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"6224:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"baseExpression":{"id":6442,"name":"epochRoots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"6237:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":6444,"indexExpression":{"id":6443,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"6248:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6237:24:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6445,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"6263:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6440,"name":"_verifyProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"6211:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6211:57:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f6f66","id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6270:15:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","typeString":"literal_string \"Invalid proof\""},"value":"Invalid proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639","typeString":"literal_string \"Invalid proof\""}],"id":6439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6203:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6203:83:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6449,"nodeType":"ExpressionStatement","src":"6203:83:24"},{"expression":{"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6450,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"6338:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6452,"indexExpression":{"id":6451,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"6346:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6338:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6453,"name":"cumulativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"6354:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6338:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6455,"nodeType":"ExpressionStatement","src":"6338:32:24"},{"condition":{"id":6456,"name":"autoStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"6429:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6488,"nodeType":"Block","src":"6828:86:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":6482,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"6865:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6483,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"6871:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6480,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"6850:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6856:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"6850:14:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6850:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":6485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6885:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":6479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6842:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6842:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6487,"nodeType":"ExpressionStatement","src":"6842:61:24"}]},"id":6489,"nodeType":"IfStatement","src":"6425:489:24","trueBody":{"id":6478,"nodeType":"Block","src":"6440:382:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":6462,"name":"stakingVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"6532:12:24","typeDescriptions":{"typeIdentifier":"t_contract$_StakingVault_$7012","typeString":"contract StakingVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakingVault_$7012","typeString":"contract StakingVault"}],"id":6461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6524:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6460,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:24","typeDescriptions":{}}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6524:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6464,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"6547:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6458,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"6509:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6515:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"6509:14:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6509:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":6466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6561:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":6457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6501:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6501:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6468,"nodeType":"ExpressionStatement","src":"6501:78:24"},{"expression":{"arguments":[{"arguments":[{"id":6472,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"6773:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6473,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"6779:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6470,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"6758:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6764:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"6758:14:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6758:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":6475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6793:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":6469,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6750:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6477,"nodeType":"ExpressionStatement","src":"6750:61:24"}]}},{"eventCall":{"arguments":[{"id":6491,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"6945:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6492,"name":"claimAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6391,"src":"6951:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6493,"name":"autoStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"6964:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6494,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"6975:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6490,"name":"Claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"6937:7:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,uint256,bool,uint256)"}},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6937:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6496,"nodeType":"EmitStatement","src":"6932:56:24"}]},"documentation":{"id":6377,"nodeType":"StructuredDocumentation","src":"5424:47:24","text":" @notice Internal claim logic"},"id":6498,"implemented":true,"kind":"function","modifiers":[],"name":"_claim","nameLocation":"5485:6:24","nodeType":"FunctionDefinition","parameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6379,"mutability":"mutable","name":"user","nameLocation":"5509:4:24","nodeType":"VariableDeclaration","scope":6498,"src":"5501:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6378,"name":"address","nodeType":"ElementaryTypeName","src":"5501:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6381,"mutability":"mutable","name":"cumulativeAmount","nameLocation":"5531:16:24","nodeType":"VariableDeclaration","scope":6498,"src":"5523:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6380,"name":"uint256","nodeType":"ElementaryTypeName","src":"5523:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6383,"mutability":"mutable","name":"autoStake","nameLocation":"5562:9:24","nodeType":"VariableDeclaration","scope":6498,"src":"5557:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6382,"name":"bool","nodeType":"ElementaryTypeName","src":"5557:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6386,"mutability":"mutable","name":"merkleProof","nameLocation":"5600:11:24","nodeType":"VariableDeclaration","scope":6498,"src":"5581:30:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5581:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6385,"nodeType":"ArrayTypeName","src":"5581:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6388,"mutability":"mutable","name":"isGasless","nameLocation":"5626:9:24","nodeType":"VariableDeclaration","scope":6498,"src":"5621:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6387,"name":"bool","nodeType":"ElementaryTypeName","src":"5621:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5491:150:24"},"returnParameters":{"id":6392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6391,"mutability":"mutable","name":"claimAmount","nameLocation":"5668:11:24","nodeType":"VariableDeclaration","scope":6498,"src":"5660:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6390,"name":"uint256","nodeType":"ElementaryTypeName","src":"5660:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5659:21:24"},"scope":6770,"src":"5476:1519:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6524,"nodeType":"Block","src":"7166:163:24","statements":[{"assignments":[6509],"declarations":[{"constant":false,"id":6509,"mutability":"mutable","name":"alreadyClaimed","nameLocation":"7184:14:24","nodeType":"VariableDeclaration","scope":6524,"src":"7176:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6508,"name":"uint256","nodeType":"ElementaryTypeName","src":"7176:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6513,"initialValue":{"baseExpression":{"id":6510,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"7201:7:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6512,"indexExpression":{"id":6511,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"7209:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7201:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7176:38:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6514,"name":"cumulativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"7228:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6515,"name":"alreadyClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"7248:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7228:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6519,"nodeType":"IfStatement","src":"7224:48:24","trueBody":{"expression":{"hexValue":"30","id":6517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7271:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6507,"id":6518,"nodeType":"Return","src":"7264:8:24"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6520,"name":"cumulativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"7289:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6521,"name":"alreadyClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"7308:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7289:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6507,"id":6523,"nodeType":"Return","src":"7282:40:24"}]},"documentation":{"id":6499,"nodeType":"StructuredDocumentation","src":"7005:56:24","text":" @notice Get claimable amount for user"},"functionSelector":"b3743f60","id":6525,"implemented":true,"kind":"function","modifiers":[],"name":"getClaimableAmount","nameLocation":"7075:18:24","nodeType":"FunctionDefinition","parameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"mutability":"mutable","name":"user","nameLocation":"7102:4:24","nodeType":"VariableDeclaration","scope":6525,"src":"7094:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6500,"name":"address","nodeType":"ElementaryTypeName","src":"7094:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6503,"mutability":"mutable","name":"cumulativeAmount","nameLocation":"7116:16:24","nodeType":"VariableDeclaration","scope":6525,"src":"7108:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6502,"name":"uint256","nodeType":"ElementaryTypeName","src":"7108:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7093:40:24"},"returnParameters":{"id":6507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6525,"src":"7157:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6505,"name":"uint256","nodeType":"ElementaryTypeName","src":"7157:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7156:9:24"},"scope":6770,"src":"7066:263:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6542,"nodeType":"Block","src":"7482:90:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7499:24:24","subExpression":{"baseExpression":{"id":6533,"name":"hasClaimedGasless","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"7500:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6535,"indexExpression":{"id":6534,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"7518:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7500:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6537,"name":"gaslessClaimCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"7527:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6538,"name":"MAX_GASLESS_CLAIMS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6030,"src":"7547:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7527:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7499:66:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6532,"id":6541,"nodeType":"Return","src":"7492:73:24"}]},"documentation":{"id":6526,"nodeType":"StructuredDocumentation","src":"7339:70:24","text":" @notice Check if user is eligible for gasless claim"},"functionSelector":"8d73cffc","id":6543,"implemented":true,"kind":"function","modifiers":[],"name":"canClaimGasless","nameLocation":"7423:15:24","nodeType":"FunctionDefinition","parameters":{"id":6529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6528,"mutability":"mutable","name":"user","nameLocation":"7447:4:24","nodeType":"VariableDeclaration","scope":6543,"src":"7439:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6527,"name":"address","nodeType":"ElementaryTypeName","src":"7439:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7438:14:24"},"returnParameters":{"id":6532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6543,"src":"7476:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6530,"name":"bool","nodeType":"ElementaryTypeName","src":"7476:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7475:6:24"},"scope":6770,"src":"7414:158:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6590,"nodeType":"Block","src":"7830:286:24","statements":[{"expression":{"components":[{"baseExpression":{"id":6559,"name":"epochRoots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"7861:10:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":6561,"indexExpression":{"id":6560,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"7872:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7861:19:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":6562,"name":"epochTotals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"7894:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6564,"indexExpression":{"id":6563,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"7906:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7894:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":6565,"name":"epochDescriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"7928:17:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":6567,"indexExpression":{"id":6566,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"7946:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7928:26:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"baseExpression":{"id":6568,"name":"epochExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"7968:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6570,"indexExpression":{"id":6569,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"7980:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7968:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6571,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"8002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6572,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"8013:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8002:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6574,"name":"epochExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"8030:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6576,"indexExpression":{"id":6575,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"8042:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8030:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8030:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6579,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8059:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8065:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"8059:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"id":6581,"name":"epochExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"8078:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6583,"indexExpression":{"id":6582,"name":"epochId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"8090:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8078:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8059:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8030:68:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8029:70:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8002:97:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7847:262:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$_t_string_storage_$_t_uint256_$_t_bool_$","typeString":"tuple(bytes32,uint256,string storage ref,uint256,bool)"}},"functionReturnParameters":6558,"id":6589,"nodeType":"Return","src":"7840:269:24"}]},"documentation":{"id":6544,"nodeType":"StructuredDocumentation","src":"7582:48:24","text":" @notice Get epoch information"},"functionSelector":"135022c2","id":6591,"implemented":true,"kind":"function","modifiers":[],"name":"getEpochInfo","nameLocation":"7644:12:24","nodeType":"FunctionDefinition","parameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"epochId","nameLocation":"7665:7:24","nodeType":"VariableDeclaration","scope":6591,"src":"7657:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"7657:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7656:17:24"},"returnParameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"root","nameLocation":"7714:4:24","nodeType":"VariableDeclaration","scope":6591,"src":"7706:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7706:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6551,"mutability":"mutable","name":"total","nameLocation":"7736:5:24","nodeType":"VariableDeclaration","scope":6591,"src":"7728:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6550,"name":"uint256","nodeType":"ElementaryTypeName","src":"7728:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6553,"mutability":"mutable","name":"description","nameLocation":"7765:11:24","nodeType":"VariableDeclaration","scope":6591,"src":"7751:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6552,"name":"string","nodeType":"ElementaryTypeName","src":"7751:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6555,"mutability":"mutable","name":"expiry","nameLocation":"7794:6:24","nodeType":"VariableDeclaration","scope":6591,"src":"7786:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6554,"name":"uint256","nodeType":"ElementaryTypeName","src":"7786:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6557,"mutability":"mutable","name":"isActive","nameLocation":"7815:8:24","nodeType":"VariableDeclaration","scope":6591,"src":"7810:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6556,"name":"bool","nodeType":"ElementaryTypeName","src":"7810:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7696:133:24"},"scope":6770,"src":"7635:481:24","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6600,"nodeType":"Block","src":"8233:25:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6597,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"8243:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8243:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6599,"nodeType":"ExpressionStatement","src":"8243:8:24"}]},"documentation":{"id":6592,"nodeType":"StructuredDocumentation","src":"8126:54:24","text":" @notice Emergency pause by guardian"},"functionSelector":"51858e27","id":6601,"implemented":true,"kind":"function","modifiers":[{"id":6595,"kind":"modifierInvocation","modifierName":{"id":6594,"name":"onlyGuardian","nameLocations":["8220:12:24"],"nodeType":"IdentifierPath","referencedDeclaration":6100,"src":"8220:12:24"},"nodeType":"ModifierInvocation","src":"8220:12:24"}],"name":"emergencyPause","nameLocation":"8194:14:24","nodeType":"FunctionDefinition","parameters":{"id":6593,"nodeType":"ParameterList","parameters":[],"src":"8208:2:24"},"returnParameters":{"id":6596,"nodeType":"ParameterList","parameters":[],"src":"8233:0:24"},"scope":6770,"src":"8185:73:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6610,"nodeType":"Block","src":"8356:27:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6607,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"8366:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8366:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6609,"nodeType":"ExpressionStatement","src":"8366:10:24"}]},"documentation":{"id":6602,"nodeType":"StructuredDocumentation","src":"8268:45:24","text":" @notice Resume after pause"},"functionSelector":"3f4ba83a","id":6611,"implemented":true,"kind":"function","modifiers":[{"id":6605,"kind":"modifierInvocation","modifierName":{"id":6604,"name":"onlyOwner","nameLocations":["8346:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"8346:9:24"},"nodeType":"ModifierInvocation","src":"8346:9:24"}],"name":"unpause","nameLocation":"8327:7:24","nodeType":"FunctionDefinition","parameters":{"id":6603,"nodeType":"ParameterList","parameters":[],"src":"8334:2:24"},"returnParameters":{"id":6606,"nodeType":"ParameterList","parameters":[],"src":"8356:0:24"},"scope":6770,"src":"8318:65:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6632,"nodeType":"Block","src":"8506:128:24","statements":[{"assignments":[6620],"declarations":[{"constant":false,"id":6620,"mutability":"mutable","name":"oldRelayer","nameLocation":"8524:10:24","nodeType":"VariableDeclaration","scope":6632,"src":"8516:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6619,"name":"address","nodeType":"ElementaryTypeName","src":"8516:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6622,"initialValue":{"id":6621,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"8537:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8516:28:24"},{"expression":{"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6623,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"8554:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6624,"name":"newRelayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"8564:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8554:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6626,"nodeType":"ExpressionStatement","src":"8554:20:24"},{"eventCall":{"arguments":[{"id":6628,"name":"oldRelayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"8604:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6629,"name":"newRelayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6614,"src":"8616:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6627,"name":"RelayerUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"8589:14:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8589:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6631,"nodeType":"EmitStatement","src":"8584:43:24"}]},"documentation":{"id":6612,"nodeType":"StructuredDocumentation","src":"8393:49:24","text":" @notice Update relayer address"},"functionSelector":"6548e9bc","id":6633,"implemented":true,"kind":"function","modifiers":[{"id":6617,"kind":"modifierInvocation","modifierName":{"id":6616,"name":"onlyOwner","nameLocations":["8496:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"8496:9:24"},"nodeType":"ModifierInvocation","src":"8496:9:24"}],"name":"setRelayer","nameLocation":"8456:10:24","nodeType":"FunctionDefinition","parameters":{"id":6615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6614,"mutability":"mutable","name":"newRelayer","nameLocation":"8475:10:24","nodeType":"VariableDeclaration","scope":6633,"src":"8467:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6613,"name":"address","nodeType":"ElementaryTypeName","src":"8467:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8466:20:24"},"returnParameters":{"id":6618,"nodeType":"ParameterList","parameters":[],"src":"8506:0:24"},"scope":6770,"src":"8447:187:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6645,"nodeType":"Block","src":"8761:43:24","statements":[{"expression":{"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6641,"name":"rootGuardian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6032,"src":"8771:12:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6642,"name":"newGuardian","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"8786:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8771:26:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6644,"nodeType":"ExpressionStatement","src":"8771:26:24"}]},"documentation":{"id":6634,"nodeType":"StructuredDocumentation","src":"8644:47:24","text":" @notice Update root guardian"},"functionSelector":"59735f89","id":6646,"implemented":true,"kind":"function","modifiers":[{"id":6639,"kind":"modifierInvocation","modifierName":{"id":6638,"name":"onlyOwner","nameLocations":["8751:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"8751:9:24"},"nodeType":"ModifierInvocation","src":"8751:9:24"}],"name":"setRootGuardian","nameLocation":"8705:15:24","nodeType":"FunctionDefinition","parameters":{"id":6637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6636,"mutability":"mutable","name":"newGuardian","nameLocation":"8729:11:24","nodeType":"VariableDeclaration","scope":6646,"src":"8721:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6635,"name":"address","nodeType":"ElementaryTypeName","src":"8721:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8720:21:24"},"returnParameters":{"id":6640,"nodeType":"ParameterList","parameters":[],"src":"8761:0:24"},"scope":6770,"src":"8696:108:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6680,"nodeType":"Block","src":"8954:192:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6655,"name":"epochExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"8972:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6657,"indexExpression":{"id":6656,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"8984:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8972:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8972:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6660,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9005:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9011:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"9005:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":6662,"name":"epochExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"9023:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6664,"indexExpression":{"id":6663,"name":"currentEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"9035:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9023:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9005:43:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8972:76:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45706f6368206e6f742065787069726564","id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9050:19:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7918a60beddf52ea68c65acda1fe95623829b3022188a2b54dd97ea7b4027146","typeString":"literal_string \"Epoch not expired\""},"value":"Epoch not expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7918a60beddf52ea68c65acda1fe95623829b3022188a2b54dd97ea7b4027146","typeString":"literal_string \"Epoch not expired\""}],"id":6654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8964:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8964:106:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6669,"nodeType":"ExpressionStatement","src":"8964:106:24"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":6673,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"9103:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9103:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6675,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"9112:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6671,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"9088:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9094:8:24","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"9088:14:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9088:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":6677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9121:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":6670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9080:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9080:59:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6679,"nodeType":"ExpressionStatement","src":"9080:59:24"}]},"documentation":{"id":6647,"nodeType":"StructuredDocumentation","src":"8814:73:24","text":" @notice Emergency withdrawal (only after epoch expiry)"},"functionSelector":"5312ea8e","id":6681,"implemented":true,"kind":"function","modifiers":[{"id":6652,"kind":"modifierInvocation","modifierName":{"id":6651,"name":"onlyOwner","nameLocations":["8944:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"8944:9:24"},"nodeType":"ModifierInvocation","src":"8944:9:24"}],"name":"emergencyWithdraw","nameLocation":"8901:17:24","nodeType":"FunctionDefinition","parameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"amount","nameLocation":"8927:6:24","nodeType":"VariableDeclaration","scope":6681,"src":"8919:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6648,"name":"uint256","nodeType":"ElementaryTypeName","src":"8919:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8918:16:24"},"returnParameters":{"id":6653,"nodeType":"ParameterList","parameters":[],"src":"8954:0:24"},"scope":6770,"src":"8892:254:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6701,"nodeType":"Block","src":"9244:98:24","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":6690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9281:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9285:6:24","memberName":"sender","nodeType":"MemberAccess","src":"9281:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6694,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9301:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_MerkleDistributorV2_$6770","typeString":"contract MerkleDistributorV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MerkleDistributorV2_$6770","typeString":"contract MerkleDistributorV2"}],"id":6693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9293:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6692,"name":"address","nodeType":"ElementaryTypeName","src":"9293:7:24","typeDescriptions":{}}},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9293:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6696,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"9308:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6688,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"9262:5:24","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9268:12:24","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":5934,"src":"9262:18:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9262:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9317:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":6687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9254:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9254:81:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6700,"nodeType":"ExpressionStatement","src":"9254:81:24"}]},"documentation":{"id":6682,"nodeType":"StructuredDocumentation","src":"9156:44:24","text":" @notice Fund the contract"},"functionSelector":"ca1d209d","id":6702,"implemented":true,"kind":"function","modifiers":[],"name":"fund","nameLocation":"9214:4:24","nodeType":"FunctionDefinition","parameters":{"id":6685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6684,"mutability":"mutable","name":"amount","nameLocation":"9227:6:24","nodeType":"VariableDeclaration","scope":6702,"src":"9219:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6683,"name":"uint256","nodeType":"ElementaryTypeName","src":"9219:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9218:16:24"},"returnParameters":{"id":6686,"nodeType":"ParameterList","parameters":[],"src":"9244:0:24"},"scope":6770,"src":"9205:137:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6768,"nodeType":"Block","src":"9536:479:24","statements":[{"assignments":[6716],"declarations":[{"constant":false,"id":6716,"mutability":"mutable","name":"computedHash","nameLocation":"9554:12:24","nodeType":"VariableDeclaration","scope":6768,"src":"9546:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9546:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6718,"initialValue":{"id":6717,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"9569:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9546:27:24"},{"body":{"id":6762,"nodeType":"Block","src":"9635:328:24","statements":[{"assignments":[6731],"declarations":[{"constant":false,"id":6731,"mutability":"mutable","name":"proofElement","nameLocation":"9657:12:24","nodeType":"VariableDeclaration","scope":6762,"src":"9649:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9649:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6735,"initialValue":{"baseExpression":{"id":6732,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"9672:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6734,"indexExpression":{"id":6733,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"9678:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9672:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9649:31:24"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6736,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"9711:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6737,"name":"proofElement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"9727:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9711:28:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6760,"nodeType":"Block","src":"9850:103:24","statements":[{"expression":{"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6750,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"9868:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6754,"name":"proofElement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"9910:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6755,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"9924:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6752,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9893:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9897:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"9893:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9893:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6751,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9883:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9883:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9868:70:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6759,"nodeType":"ExpressionStatement","src":"9868:70:24"}]},"id":6761,"nodeType":"IfStatement","src":"9707:246:24","trueBody":{"id":6749,"nodeType":"Block","src":"9741:103:24","statements":[{"expression":{"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6739,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"9759:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6743,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"9801:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6744,"name":"proofElement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"9815:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6741,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9784:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9788:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"9784:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9784:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6740,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9774:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9774:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9759:70:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6748,"nodeType":"ExpressionStatement","src":"9759:70:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6723,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"9612:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6724,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"9616:5:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9622:6:24","memberName":"length","nodeType":"MemberAccess","src":"9616:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9612:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6763,"initializationExpression":{"assignments":[6720],"declarations":[{"constant":false,"id":6720,"mutability":"mutable","name":"i","nameLocation":"9605:1:24","nodeType":"VariableDeclaration","scope":6763,"src":"9597:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6719,"name":"uint256","nodeType":"ElementaryTypeName","src":"9597:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6722,"initialValue":{"hexValue":"30","id":6721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9609:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9597:13:24"},"loopExpression":{"expression":{"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9630:3:24","subExpression":{"id":6727,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"9630:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6729,"nodeType":"ExpressionStatement","src":"9630:3:24"},"nodeType":"ForStatement","src":"9592:371:24"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6764,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"9988:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6765,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6708,"src":"10004:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9988:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6714,"id":6767,"nodeType":"Return","src":"9981:27:24"}]},"documentation":{"id":6703,"nodeType":"StructuredDocumentation","src":"9352:46:24","text":" @notice Verify Merkle proof"},"id":6769,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyProof","nameLocation":"9412:12:24","nodeType":"FunctionDefinition","parameters":{"id":6711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6706,"mutability":"mutable","name":"proof","nameLocation":"9451:5:24","nodeType":"VariableDeclaration","scope":6769,"src":"9434:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9434:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6705,"nodeType":"ArrayTypeName","src":"9434:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6708,"mutability":"mutable","name":"root","nameLocation":"9474:4:24","nodeType":"VariableDeclaration","scope":6769,"src":"9466:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9466:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6710,"mutability":"mutable","name":"leaf","nameLocation":"9496:4:24","nodeType":"VariableDeclaration","scope":6769,"src":"9488:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9488:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9424:82:24"},"returnParameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6769,"src":"9530:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6712,"name":"bool","nodeType":"ElementaryTypeName","src":"9530:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9529:6:24"},"scope":6770,"src":"9403:612:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6771,"src":"477:9540:24","usedErrors":[],"usedEvents":[13,250,255,6046,6056,6064,6070]}],"src":"32:9986:24"},"id":24},"contracts/StakingVault.sol":{"ast":{"absolutePath":"contracts/StakingVault.sol","exportedSymbols":{"CodeDAOToken":[5977],"Context":[2074],"Counters":[2148],"ECDSA":[3069],"EIP712":[3273],"ERC20":[999],"ERC20Permit":[1249],"ERC20Votes":[1983],"IERC20":[1077],"IERC20Metadata":[2008],"IERC20Permit":[2044],"IERC5267":[215],"IERC5805":[224],"IERC6372":[239],"IVotes":[190],"Math":[4139],"SafeCast":[5680],"ShortString":[2153],"ShortStrings":[2364],"SignedMath":[5785],"StakingVault":[7012],"StorageSlot":[2474],"Strings":[2703]},"id":7013,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6772,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:25"},{"absolutePath":"contracts/CodeDAOToken.sol","file":"./CodeDAOToken.sol","id":6773,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7013,"sourceUnit":5978,"src":"58:28:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":6774,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7013,"sourceUnit":1984,"src":"87:71:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":6775,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7013,"sourceUnit":1250,"src":"159:72:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6777,"name":"ERC20","nameLocations":["491:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"491:5:25"},"id":6778,"nodeType":"InheritanceSpecifier","src":"491:5:25"},{"baseName":{"id":6779,"name":"ERC20Permit","nameLocations":["498:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":1249,"src":"498:11:25"},"id":6780,"nodeType":"InheritanceSpecifier","src":"498:11:25"},{"baseName":{"id":6781,"name":"ERC20Votes","nameLocations":["511:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":1983,"src":"511:10:25"},"id":6782,"nodeType":"InheritanceSpecifier","src":"511:10:25"}],"canonicalName":"StakingVault","contractDependencies":[],"contractKind":"contract","documentation":{"id":6776,"nodeType":"StructuredDocumentation","src":"233:232:25","text":" @title StakingVault (sCODE)\n @notice Liquid staking: stake CODE → receive sCODE 1:1\n @notice sCODE balance unlocks premium features in CodeDAO platform\n @dev Also serves as governance token with delegation support"},"fullyImplemented":true,"id":7012,"internalFunctionIDs":{"1953":1,"1967":2},"linearizedBaseContracts":[7012,1983,224,190,239,1249,3273,215,2044,999,2008,1077,2074],"name":"StakingVault","nameLocation":"475:12:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"904d2022","id":6785,"mutability":"immutable","name":"codeToken","nameLocation":"558:9:25","nodeType":"VariableDeclaration","scope":7012,"src":"528:39:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"},"typeName":{"id":6784,"nodeType":"UserDefinedTypeName","pathNode":{"id":6783,"name":"CodeDAOToken","nameLocations":["528:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":5977,"src":"528:12:25"},"referencedDeclaration":5977,"src":"528:12:25","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"visibility":"public"},{"anonymous":false,"eventSelector":"ebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a","id":6791,"name":"Stake","nameLocation":"584:5:25","nodeType":"EventDefinition","parameters":{"id":6790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6787,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"606:4:25","nodeType":"VariableDeclaration","scope":6791,"src":"590:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6786,"name":"address","nodeType":"ElementaryTypeName","src":"590:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6789,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"620:6:25","nodeType":"VariableDeclaration","scope":6791,"src":"612:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6788,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"589:38:25"},"src":"578:50:25"},{"anonymous":false,"eventSelector":"85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd","id":6797,"name":"Unstake","nameLocation":"639:7:25","nodeType":"EventDefinition","parameters":{"id":6796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6793,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"663:4:25","nodeType":"VariableDeclaration","scope":6797,"src":"647:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6792,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6795,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"677:6:25","nodeType":"VariableDeclaration","scope":6797,"src":"669:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6794,"name":"uint256","nodeType":"ElementaryTypeName","src":"669:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:38:25"},"src":"633:52:25"},{"body":{"id":6815,"nodeType":"Block","src":"823:53:25","statements":[{"expression":{"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6809,"name":"codeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"833:9:25","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6811,"name":"_codeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"858:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6810,"name":"CodeDAOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"845:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CodeDAOToken_$5977_$","typeString":"type(contract CodeDAOToken)"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"845:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"src":"833:36:25","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"id":6814,"nodeType":"ExpressionStatement","src":"833:36:25"}]},"id":6816,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"5374616b656420436f646544414f20546f6b656e","id":6802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"742:22:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbbfbd8e54f4463e32d325d1a0f6c5d44b46e5a09ce9a1d81f3910e777a77a78","typeString":"literal_string \"Staked CodeDAO Token\""},"value":"Staked CodeDAO Token"},{"hexValue":"73434f4445","id":6803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"766:7:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c80910867a5e85fc95e50fb2e5ef2dae8226e821c4398d35a9b20127953cc0d2","typeString":"literal_string \"sCODE\""},"value":"sCODE"}],"id":6804,"kind":"baseConstructorSpecifier","modifierName":{"id":6801,"name":"ERC20","nameLocations":["736:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"736:5:25"},"nodeType":"ModifierInvocation","src":"736:38:25"},{"arguments":[{"hexValue":"5374616b656420436f646544414f20546f6b656e","id":6806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:22:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbbfbd8e54f4463e32d325d1a0f6c5d44b46e5a09ce9a1d81f3910e777a77a78","typeString":"literal_string \"Staked CodeDAO Token\""},"value":"Staked CodeDAO Token"}],"id":6807,"kind":"baseConstructorSpecifier","modifierName":{"id":6805,"name":"ERC20Permit","nameLocations":["783:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":1249,"src":"783:11:25"},"nodeType":"ModifierInvocation","src":"783:35:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6799,"mutability":"mutable","name":"_codeToken","nameLocation":"715:10:25","nodeType":"VariableDeclaration","scope":6816,"src":"707:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6798,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"706:20:25"},"returnParameters":{"id":6808,"nodeType":"ParameterList","parameters":[],"src":"823:0:25"},"scope":7012,"src":"695:181:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6855,"nodeType":"Block","src":"996:325:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6823,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"1014:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1023:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1014:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d757374206265203e2030","id":6826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1026:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""},"value":"Amount must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""}],"id":6822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1006:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1006:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6828,"nodeType":"ExpressionStatement","src":"1006:41:25"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":6832,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1141:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1145:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1141:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6836,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1161:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_StakingVault_$7012","typeString":"contract StakingVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_StakingVault_$7012","typeString":"contract StakingVault"}],"id":6835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1153:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6834,"name":"address","nodeType":"ElementaryTypeName","src":"1153:7:25","typeDescriptions":{}}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1153:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"1168:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6830,"name":"codeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"1118:9:25","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1128:12:25","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":5934,"src":"1118:22:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1118:57:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":6840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1177:17:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":6829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1110:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1110:85:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6842,"nodeType":"ExpressionStatement","src":"1110:85:25"},{"expression":{"arguments":[{"expression":{"id":6844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1246:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1250:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1246:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6846,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"1258:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6843,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[6993],"referencedDeclaration":6993,"src":"1240:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1240:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6848,"nodeType":"ExpressionStatement","src":"1240:25:25"},{"eventCall":{"arguments":[{"expression":{"id":6850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1295:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1299:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1295:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6852,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"1307:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6849,"name":"Stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"1289:5:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6854,"nodeType":"EmitStatement","src":"1284:30:25"}]},"documentation":{"id":6817,"nodeType":"StructuredDocumentation","src":"886:65:25","text":" @notice Stake CODE tokens to receive sCODE 1:1"},"functionSelector":"a694fc3a","id":6856,"implemented":true,"kind":"function","modifiers":[],"name":"stake","nameLocation":"965:5:25","nodeType":"FunctionDefinition","parameters":{"id":6820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"mutability":"mutable","name":"amount","nameLocation":"979:6:25","nodeType":"VariableDeclaration","scope":6856,"src":"971:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6818,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:16:25"},"returnParameters":{"id":6821,"nodeType":"ParameterList","parameters":[],"src":"996:0:25"},"scope":7012,"src":"956:365:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6901,"nodeType":"Block","src":"1438:370:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6863,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"1456:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1465:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1456:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d757374206265203e2030","id":6866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1468:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""},"value":"Amount must be > 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb","typeString":"literal_string \"Amount must be > 0\""}],"id":6862,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1448:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1448:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6868,"nodeType":"ExpressionStatement","src":"1448:41:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":6871,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1517:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1521:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1517:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6870,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"1507:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6874,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"1532:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1507:31:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742073434f4445","id":6876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1540:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_376bd67dfe7d48d0c996c140eeda4a03af0414697042695ac28ada5806e468db","typeString":"literal_string \"Insufficient sCODE\""},"value":"Insufficient sCODE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_376bd67dfe7d48d0c996c140eeda4a03af0414697042695ac28ada5806e468db","typeString":"literal_string \"Insufficient sCODE\""}],"id":6869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1499:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1499:62:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6878,"nodeType":"ExpressionStatement","src":"1499:62:25"},{"expression":{"arguments":[{"expression":{"id":6880,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1608:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1608:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6882,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"1620:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6879,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[7011],"referencedDeclaration":7011,"src":"1602:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1602:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6884,"nodeType":"ExpressionStatement","src":"1602:25:25"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":6888,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1711:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1711:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6890,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"1723:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6886,"name":"codeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"1692:9:25","typeDescriptions":{"typeIdentifier":"t_contract$_CodeDAOToken_$5977","typeString":"contract CodeDAOToken"}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1702:8:25","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":5976,"src":"1692:18:25","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1692:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":6892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1732:17:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":6885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1684:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1684:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6894,"nodeType":"ExpressionStatement","src":"1684:66:25"},{"eventCall":{"arguments":[{"expression":{"id":6896,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1782:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1786:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1782:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6898,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"1794:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6895,"name":"Unstake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"1774:7:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6900,"nodeType":"EmitStatement","src":"1769:32:25"}]},"documentation":{"id":6857,"nodeType":"StructuredDocumentation","src":"1331:60:25","text":" @notice Unstake sCODE to receive CODE 1:1"},"functionSelector":"2e17de78","id":6902,"implemented":true,"kind":"function","modifiers":[],"name":"unstake","nameLocation":"1405:7:25","nodeType":"FunctionDefinition","parameters":{"id":6860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6859,"mutability":"mutable","name":"amount","nameLocation":"1421:6:25","nodeType":"VariableDeclaration","scope":6902,"src":"1413:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6858,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1412:16:25"},"returnParameters":{"id":6861,"nodeType":"ParameterList","parameters":[],"src":"1438:0:25"},"scope":7012,"src":"1396:412:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6936,"nodeType":"Block","src":"1969:236:25","statements":[{"assignments":[6911],"declarations":[{"constant":false,"id":6911,"mutability":"mutable","name":"balance","nameLocation":"1987:7:25","nodeType":"VariableDeclaration","scope":6936,"src":"1979:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1979:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6915,"initialValue":{"arguments":[{"id":6913,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6905,"src":"2007:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6912,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"1997:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1997:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1979:33:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6916,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"2035:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3235305f303030653138","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2046:10:25","typeDescriptions":{"typeIdentifier":"t_rational_250000000000000000000000_by_1","typeString":"int_const 250000000000000000000000"},"value":"250_000e18"},"src":"2035:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6921,"nodeType":"IfStatement","src":"2031:43:25","trueBody":{"expression":{"hexValue":"506172746e6572","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2065:9:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2fb2c2cc467b1876c7cda95154a33fe1c7c6dd31e5d5577e02a8f9a04d204b6","typeString":"literal_string \"Partner\""},"value":"Partner"},"functionReturnParameters":6909,"id":6920,"nodeType":"Return","src":"2058:16:25"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6922,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"2088:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"35305f303030653138","id":6923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2099:9:25","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000000000_by_1","typeString":"int_const 50000000000000000000000"},"value":"50_000e18"},"src":"2088:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6927,"nodeType":"IfStatement","src":"2084:38:25","trueBody":{"expression":{"hexValue":"50726f","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2117:5:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_0560acec4761ec8cf594c6af2965089f9604e2ba9c23bae23b54564bc93908d5","typeString":"literal_string \"Pro\""},"value":"Pro"},"functionReturnParameters":6909,"id":6926,"nodeType":"Return","src":"2110:12:25"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6928,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"2137:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31305f303030653138","id":6929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2148:9:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000_by_1","typeString":"int_const 10000000000000000000000"},"value":"10_000e18"},"src":"2137:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6933,"nodeType":"IfStatement","src":"2133:42:25","trueBody":{"expression":{"hexValue":"4275696c646572","id":6931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2166:9:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d836d856296621c88cc95797377627d4dedf9acb5df2432560f87352bc17040","typeString":"literal_string \"Builder\""},"value":"Builder"},"functionReturnParameters":6909,"id":6932,"nodeType":"Return","src":"2159:16:25"}},{"expression":{"hexValue":"46726565","id":6934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2192:6:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_029cc633e28329b43869d25d1d35afb76c692dca647ae131df3e0dfcf687e97c","typeString":"literal_string \"Free\""},"value":"Free"},"functionReturnParameters":6909,"id":6935,"nodeType":"Return","src":"2185:13:25"}]},"documentation":{"id":6903,"nodeType":"StructuredDocumentation","src":"1818:73:25","text":" @notice Get user's staking tier based on sCODE balance"},"functionSelector":"e4d2620e","id":6937,"implemented":true,"kind":"function","modifiers":[],"name":"getUserTier","nameLocation":"1905:11:25","nodeType":"FunctionDefinition","parameters":{"id":6906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6905,"mutability":"mutable","name":"user","nameLocation":"1925:4:25","nodeType":"VariableDeclaration","scope":6937,"src":"1917:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6904,"name":"address","nodeType":"ElementaryTypeName","src":"1917:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1916:14:25"},"returnParameters":{"id":6909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6937,"src":"1954:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6907,"name":"string","nodeType":"ElementaryTypeName","src":"1954:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1953:15:25"},"scope":7012,"src":"1896:309:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6953,"nodeType":"Block","src":"2371:52:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6948,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"2398:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6947,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2388:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2388:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6950,"name":"minAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"2407:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2388:28:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6946,"id":6952,"nodeType":"Return","src":"2381:35:25"}]},"documentation":{"id":6938,"nodeType":"StructuredDocumentation","src":"2215:68:25","text":" @notice Check if user qualifies for specific tier"},"functionSelector":"eaccb43f","id":6954,"implemented":true,"kind":"function","modifiers":[],"name":"hasMinStake","nameLocation":"2297:11:25","nodeType":"FunctionDefinition","parameters":{"id":6943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6940,"mutability":"mutable","name":"user","nameLocation":"2317:4:25","nodeType":"VariableDeclaration","scope":6954,"src":"2309:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6939,"name":"address","nodeType":"ElementaryTypeName","src":"2309:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6942,"mutability":"mutable","name":"minAmount","nameLocation":"2331:9:25","nodeType":"VariableDeclaration","scope":6954,"src":"2323:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2308:33:25"},"returnParameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6954,"src":"2365:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6944,"name":"bool","nodeType":"ElementaryTypeName","src":"2365:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2364:6:25"},"scope":7012,"src":"2288:135:25","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[998,1728],"body":{"id":6974,"nodeType":"Block","src":"2598:60:25","statements":[{"expression":{"arguments":[{"id":6969,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"2634:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6970,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"2640:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6971,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"2644:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6966,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2608:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_StakingVault_$7012_$","typeString":"type(contract super StakingVault)"}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2614:19:25","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"2608:25:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2608:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6973,"nodeType":"ExpressionStatement","src":"2608:43:25"}]},"id":6975,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"2479:19:25","nodeType":"FunctionDefinition","overrides":{"id":6964,"nodeType":"OverrideSpecifier","overrides":[{"id":6962,"name":"ERC20","nameLocations":["2575:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"2575:5:25"},{"id":6963,"name":"ERC20Votes","nameLocations":["2582:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":1983,"src":"2582:10:25"}],"src":"2566:27:25"},"parameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6956,"mutability":"mutable","name":"from","nameLocation":"2507:4:25","nodeType":"VariableDeclaration","scope":6975,"src":"2499:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6955,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6958,"mutability":"mutable","name":"to","nameLocation":"2521:2:25","nodeType":"VariableDeclaration","scope":6975,"src":"2513:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6957,"name":"address","nodeType":"ElementaryTypeName","src":"2513:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6960,"mutability":"mutable","name":"amount","nameLocation":"2533:6:25","nodeType":"VariableDeclaration","scope":6975,"src":"2525:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6959,"name":"uint256","nodeType":"ElementaryTypeName","src":"2525:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2498:42:25"},"returnParameters":{"id":6965,"nodeType":"ParameterList","parameters":[],"src":"2598:0:25"},"scope":7012,"src":"2470:188:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[816,1675],"body":{"id":6992,"nodeType":"Block","src":"2764:40:25","statements":[{"expression":{"arguments":[{"id":6988,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"2786:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6989,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"2790:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6985,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2774:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_StakingVault_$7012_$","typeString":"type(contract super StakingVault)"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2780:5:25","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1675,"src":"2774:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6991,"nodeType":"ExpressionStatement","src":"2774:23:25"}]},"id":6993,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"2673:5:25","nodeType":"FunctionDefinition","overrides":{"id":6983,"nodeType":"OverrideSpecifier","overrides":[{"id":6981,"name":"ERC20","nameLocations":["2741:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"2741:5:25"},{"id":6982,"name":"ERC20Votes","nameLocations":["2748:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":1983,"src":"2748:10:25"}],"src":"2732:27:25"},"parameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6977,"mutability":"mutable","name":"to","nameLocation":"2687:2:25","nodeType":"VariableDeclaration","scope":6993,"src":"2679:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6976,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6979,"mutability":"mutable","name":"amount","nameLocation":"2699:6:25","nodeType":"VariableDeclaration","scope":6993,"src":"2691:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6978,"name":"uint256","nodeType":"ElementaryTypeName","src":"2691:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:28:25"},"returnParameters":{"id":6984,"nodeType":"ParameterList","parameters":[],"src":"2764:0:25"},"scope":7012,"src":"2664:140:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[888,1698],"body":{"id":7010,"nodeType":"Block","src":"2915:45:25","statements":[{"expression":{"arguments":[{"id":7006,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"2937:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7007,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"2946:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7003,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2925:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_StakingVault_$7012_$","typeString":"type(contract super StakingVault)"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:5:25","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1698,"src":"2925:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2925:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7009,"nodeType":"ExpressionStatement","src":"2925:28:25"}]},"id":7011,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2819:5:25","nodeType":"FunctionDefinition","overrides":{"id":7001,"nodeType":"OverrideSpecifier","overrides":[{"id":6999,"name":"ERC20","nameLocations":["2892:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"2892:5:25"},{"id":7000,"name":"ERC20Votes","nameLocations":["2899:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":1983,"src":"2899:10:25"}],"src":"2883:27:25"},"parameters":{"id":6998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6995,"mutability":"mutable","name":"account","nameLocation":"2833:7:25","nodeType":"VariableDeclaration","scope":7011,"src":"2825:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6994,"name":"address","nodeType":"ElementaryTypeName","src":"2825:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6997,"mutability":"mutable","name":"amount","nameLocation":"2850:6:25","nodeType":"VariableDeclaration","scope":7011,"src":"2842:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2842:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2824:33:25"},"returnParameters":{"id":7002,"nodeType":"ParameterList","parameters":[],"src":"2915:0:25"},"scope":7012,"src":"2810:150:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7013,"src":"466:2496:25","usedErrors":[2161,2163],"usedEvents":[124,133,195,1011,1020,6791,6797]}],"src":"32:2931:25"},"id":25}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_457":{"entryPoint":null,"id":457,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:26"},"nodeType":"YulFunctionCall","src":"66:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:26"},"nodeType":"YulFunctionCall","src":"56:31:26"},"nodeType":"YulExpressionStatement","src":"56:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:26"},"nodeType":"YulFunctionCall","src":"96:15:26"},"nodeType":"YulExpressionStatement","src":"96:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:26"},"nodeType":"YulFunctionCall","src":"120:15:26"},"nodeType":"YulExpressionStatement","src":"120:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:26"},{"body":{"nodeType":"YulBlock","src":"210:776:26","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:26"},"nodeType":"YulFunctionCall","src":"261:12:26"},"nodeType":"YulExpressionStatement","src":"261:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:26"},"nodeType":"YulFunctionCall","src":"234:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:26"},"nodeType":"YulFunctionCall","src":"230:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:26"},"nodeType":"YulFunctionCall","src":"223:35:26"},"nodeType":"YulIf","src":"220:55:26"},{"nodeType":"YulVariableDeclaration","src":"284:23:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:26"},"nodeType":"YulFunctionCall","src":"294:13:26"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:26","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:26","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:26"},"nodeType":"YulFunctionCall","src":"330:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:26"},"nodeType":"YulFunctionCall","src":"326:18:26"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:26"},"nodeType":"YulFunctionCall","src":"369:18:26"},"nodeType":"YulExpressionStatement","src":"369:18:26"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:26"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:26"},"nodeType":"YulFunctionCall","src":"356:10:26"},"nodeType":"YulIf","src":"353:36:26"},{"nodeType":"YulVariableDeclaration","src":"398:17:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:26"},"nodeType":"YulFunctionCall","src":"408:7:26"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:26"},"nodeType":"YulFunctionCall","src":"438:9:26"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:26"},"nodeType":"YulFunctionCall","src":"498:13:26"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:26"},"nodeType":"YulFunctionCall","src":"494:22:26"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:26","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:26"},"nodeType":"YulFunctionCall","src":"490:31:26"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:26"},"nodeType":"YulFunctionCall","src":"486:40:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:26"},"nodeType":"YulFunctionCall","src":"474:53:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:26"},"nodeType":"YulFunctionCall","src":"588:18:26"},"nodeType":"YulExpressionStatement","src":"588:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:26"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:26"},"nodeType":"YulFunctionCall","src":"542:18:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:26"},"nodeType":"YulFunctionCall","src":"562:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:26"},"nodeType":"YulFunctionCall","src":"539:46:26"},"nodeType":"YulIf","src":"536:72:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:26"},"nodeType":"YulFunctionCall","src":"617:22:26"},"nodeType":"YulExpressionStatement","src":"617:22:26"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:26"},"nodeType":"YulFunctionCall","src":"648:18:26"},"nodeType":"YulExpressionStatement","src":"648:18:26"},{"nodeType":"YulVariableDeclaration","src":"675:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:26","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:26"},"nodeType":"YulFunctionCall","src":"737:12:26"},"nodeType":"YulExpressionStatement","src":"737:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:26"},"nodeType":"YulFunctionCall","src":"708:15:26"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:26"},"nodeType":"YulFunctionCall","src":"704:24:26"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:26"},"nodeType":"YulFunctionCall","src":"701:33:26"},"nodeType":"YulIf","src":"698:53:26"},{"nodeType":"YulVariableDeclaration","src":"760:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:26"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:26"},"nodeType":"YulFunctionCall","src":"850:14:26"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:26"},"nodeType":"YulFunctionCall","src":"846:23:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:26"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:26"},"nodeType":"YulFunctionCall","src":"881:14:26"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:26"},"nodeType":"YulFunctionCall","src":"877:23:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:26"},"nodeType":"YulFunctionCall","src":"871:30:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:26"},"nodeType":"YulFunctionCall","src":"839:63:26"},"nodeType":"YulExpressionStatement","src":"839:63:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:26"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:26"},"nodeType":"YulFunctionCall","src":"787:9:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:26","statements":[{"nodeType":"YulAssignment","src":"799:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:26"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:26"},"nodeType":"YulFunctionCall","src":"804:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:26","statements":[]},"src":"779:133:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:26"},"nodeType":"YulFunctionCall","src":"932:15:26"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:26"},"nodeType":"YulFunctionCall","src":"928:24:26"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:26"},"nodeType":"YulFunctionCall","src":"921:35:26"},"nodeType":"YulExpressionStatement","src":"921:35:26"},{"nodeType":"YulAssignment","src":"965:15:26","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:26"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:26","type":""}],"src":"146:840:26"},{"body":{"nodeType":"YulBlock","src":"1109:444:26","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:26"},"nodeType":"YulFunctionCall","src":"1157:12:26"},"nodeType":"YulExpressionStatement","src":"1157:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:26"},"nodeType":"YulFunctionCall","src":"1126:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:26"},"nodeType":"YulFunctionCall","src":"1122:32:26"},"nodeType":"YulIf","src":"1119:52:26"},{"nodeType":"YulVariableDeclaration","src":"1180:30:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:26"},"nodeType":"YulFunctionCall","src":"1194:16:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:26","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:26","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:26"},"nodeType":"YulFunctionCall","src":"1233:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:26"},"nodeType":"YulFunctionCall","src":"1229:18:26"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:26"},"nodeType":"YulFunctionCall","src":"1276:12:26"},"nodeType":"YulExpressionStatement","src":"1276:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:26"},"nodeType":"YulFunctionCall","src":"1259:14:26"},"nodeType":"YulIf","src":"1256:34:26"},{"nodeType":"YulAssignment","src":"1299:71:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:26"},"nodeType":"YulFunctionCall","src":"1338:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:26"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:26"},"nodeType":"YulFunctionCall","src":"1309:61:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:26"},"nodeType":"YulFunctionCall","src":"1401:18:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:26"},"nodeType":"YulFunctionCall","src":"1395:25:26"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:26"},"nodeType":"YulFunctionCall","src":"1451:12:26"},"nodeType":"YulExpressionStatement","src":"1451:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:26"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:26"},"nodeType":"YulFunctionCall","src":"1432:16:26"},"nodeType":"YulIf","src":"1429:36:26"},{"nodeType":"YulAssignment","src":"1474:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:26"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:26"},"nodeType":"YulFunctionCall","src":"1513:24:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:26"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:26"},"nodeType":"YulFunctionCall","src":"1484:63:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:26"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:26","type":""}],"src":"991:562:26"},{"body":{"nodeType":"YulBlock","src":"1613:325:26","statements":[{"nodeType":"YulAssignment","src":"1623:22:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:26","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:26"},"nodeType":"YulFunctionCall","src":"1633:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:26"},"nodeType":"YulFunctionCall","src":"1680:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:26","statements":[{"nodeType":"YulAssignment","src":"1733:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:26"},"nodeType":"YulFunctionCall","src":"1743:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:26"},"nodeType":"YulFunctionCall","src":"1704:26:26"},"nodeType":"YulIf","src":"1701:61:26"},{"body":{"nodeType":"YulBlock","src":"1821:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:26"},"nodeType":"YulFunctionCall","src":"1845:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:26"},"nodeType":"YulFunctionCall","src":"1835:31:26"},"nodeType":"YulExpressionStatement","src":"1835:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:26"},"nodeType":"YulFunctionCall","src":"1879:15:26"},"nodeType":"YulExpressionStatement","src":"1879:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:26"},"nodeType":"YulFunctionCall","src":"1907:15:26"},"nodeType":"YulExpressionStatement","src":"1907:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:26"},"nodeType":"YulFunctionCall","src":"1797:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:26"},"nodeType":"YulFunctionCall","src":"1774:38:26"},"nodeType":"YulIf","src":"1771:161:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:26","type":""}],"src":"1558:380:26"},{"body":{"nodeType":"YulBlock","src":"1999:65:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:26"},"nodeType":"YulFunctionCall","src":"2009:14:26"},"nodeType":"YulExpressionStatement","src":"2009:14:26"},{"nodeType":"YulAssignment","src":"2032:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:26"},"nodeType":"YulFunctionCall","src":"2040:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:26"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:26","type":""}],"src":"1943:121:26"},{"body":{"nodeType":"YulBlock","src":"2150:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:26","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:26","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:26"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:26"},"nodeType":"YulFunctionCall","src":"2221:17:26"},"nodeType":"YulExpressionStatement","src":"2221:17:26"},{"nodeType":"YulVariableDeclaration","src":"2251:31:26","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:26"},"nodeType":"YulFunctionCall","src":"2263:19:26"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:26","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:26"},"nodeType":"YulFunctionCall","src":"2331:19:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:26"},"nodeType":"YulFunctionCall","src":"2324:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:26"},"nodeType":"YulFunctionCall","src":"2314:38:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:26","statements":[{"nodeType":"YulAssignment","src":"2391:19:26","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:26"},"nodeType":"YulFunctionCall","src":"2368:20:26"},"nodeType":"YulIf","src":"2365:47:26"},{"nodeType":"YulVariableDeclaration","src":"2425:41:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:26","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:26"},"nodeType":"YulFunctionCall","src":"2452:12:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:26"},"nodeType":"YulFunctionCall","src":"2445:20:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:26"},"nodeType":"YulFunctionCall","src":"2435:31:26"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:26","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:26"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:26"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:26"},"nodeType":"YulFunctionCall","src":"2579:17:26"},"nodeType":"YulExpressionStatement","src":"2579:17:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:26"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:26"},"nodeType":"YulFunctionCall","src":"2524:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:26","statements":[{"nodeType":"YulAssignment","src":"2540:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:26"},"nodeType":"YulFunctionCall","src":"2549:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:26","statements":[]},"src":"2516:82:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:26"},"nodeType":"YulFunctionCall","src":"2163:11:26"},"nodeType":"YulIf","src":"2160:448:26"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:26","type":""}],"src":"2069:545:26"},{"body":{"nodeType":"YulBlock","src":"2704:81:26","statements":[{"nodeType":"YulAssignment","src":"2714:65:26","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:26","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:26"},"nodeType":"YulFunctionCall","src":"2743:11:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:26"},"nodeType":"YulFunctionCall","src":"2756:6:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:26"},"nodeType":"YulFunctionCall","src":"2739:24:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:26"},"nodeType":"YulFunctionCall","src":"2735:29:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:26"},"nodeType":"YulFunctionCall","src":"2725:40:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:26","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:26"},"nodeType":"YulFunctionCall","src":"2767:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:26"},"nodeType":"YulFunctionCall","src":"2722:57:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:26","type":""}],"src":"2619:166:26"},{"body":{"nodeType":"YulBlock","src":"2886:1256:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:26"},"nodeType":"YulFunctionCall","src":"2910:10:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:26"},"nodeType":"YulFunctionCall","src":"2965:18:26"},"nodeType":"YulExpressionStatement","src":"2965:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:26","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:26"},"nodeType":"YulFunctionCall","src":"2947:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:26"},"nodeType":"YulFunctionCall","src":"2943:18:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:26"},"nodeType":"YulFunctionCall","src":"2932:30:26"},"nodeType":"YulIf","src":"2929:56:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:26"},"nodeType":"YulFunctionCall","src":"3070:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:26"},"nodeType":"YulFunctionCall","src":"3044:38:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:26"},"nodeType":"YulFunctionCall","src":"2994:97:26"},"nodeType":"YulExpressionStatement","src":"2994:97:26"},{"nodeType":"YulVariableDeclaration","src":"3100:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:26","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:26","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:26","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:26"},"nodeType":"YulFunctionCall","src":"3270:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:26"},"nodeType":"YulFunctionCall","src":"3258:20:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:26"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:26"},"nodeType":"YulFunctionCall","src":"3305:35:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:26"},"nodeType":"YulFunctionCall","src":"3479:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:26"},"nodeType":"YulFunctionCall","src":"3473:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:26"},"nodeType":"YulFunctionCall","src":"3458:42:26"},"nodeType":"YulExpressionStatement","src":"3458:42:26"},{"nodeType":"YulAssignment","src":"3517:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:26"},"nodeType":"YulFunctionCall","src":"3527:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:26"}]},{"nodeType":"YulAssignment","src":"3558:40:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:26"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:26"},"nodeType":"YulFunctionCall","src":"3571:27:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:26"},"nodeType":"YulFunctionCall","src":"3384:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:26","statements":[{"nodeType":"YulAssignment","src":"3401:24:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:26"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:26"},"nodeType":"YulFunctionCall","src":"3406:19:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:26","statements":[]},"src":"3376:236:26"},{"body":{"nodeType":"YulBlock","src":"3660:166:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:26"},"nodeType":"YulFunctionCall","src":"3701:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:26"},"nodeType":"YulFunctionCall","src":"3695:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:26","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:26"},"nodeType":"YulFunctionCall","src":"3780:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:26","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:26"},"nodeType":"YulFunctionCall","src":"3776:24:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:26"},"nodeType":"YulFunctionCall","src":"3802:6:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:26"},"nodeType":"YulFunctionCall","src":"3772:37:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:26"},"nodeType":"YulFunctionCall","src":"3768:42:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:26"},"nodeType":"YulFunctionCall","src":"3753:58:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:26"},"nodeType":"YulFunctionCall","src":"3738:74:26"},"nodeType":"YulExpressionStatement","src":"3738:74:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:26"},"nodeType":"YulFunctionCall","src":"3628:19:26"},"nodeType":"YulIf","src":"3625:201:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:26","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:26"},"nodeType":"YulFunctionCall","src":"3856:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:26"},"nodeType":"YulFunctionCall","src":"3852:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:26"},"nodeType":"YulFunctionCall","src":"3839:36:26"},"nodeType":"YulExpressionStatement","src":"3839:36:26"}]},"nodeType":"YulCase","src":"3222:663:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:26","statements":[{"nodeType":"YulAssignment","src":"3983:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:26"},"nodeType":"YulFunctionCall","src":"3998:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:26"},"nodeType":"YulFunctionCall","src":"3992:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:26"},"nodeType":"YulIf","src":"3943:89:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:26"},"nodeType":"YulFunctionCall","src":"4058:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:26"},"nodeType":"YulFunctionCall","src":"4045:81:26"},"nodeType":"YulExpressionStatement","src":"4045:81:26"}]},"nodeType":"YulCase","src":"3894:242:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:26"},"nodeType":"YulFunctionCall","src":"3199:14:26"},"nodeType":"YulSwitch","src":"3192:944:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:26","type":""}],"src":"2790:1352:26"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000e0e38038062000e0e83398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610b1a80620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e39190610908565b60405180910390f35b6100ff6100fa36600461099d565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f3660046109c7565b6102ac565b604051601281526020016100e3565b6100ff61015136600461099d565b6102d0565b610113610164366004610a03565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031c565b6100ff6101a236600461099d565b61032b565b6100ff6101b536600461099d565b610401565b6101136101c8366004610a25565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a58565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a58565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040f565b60019150505b92915050565b6000336102ba8582856105c2565b6102c5858585610699565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610317908790610aab565b61040f565b60606004805461020f90610a58565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c5828686840361040f565b6000336102a0818585610699565b73ffffffffffffffffffffffffffffffffffffffff83166104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8216610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106935781811015610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103eb565b610693848484840361040f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff82166107df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610693565b600060208083528351808285015260005b8181101561093557858101830151858201604001528201610919565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461099857600080fd5b919050565b600080604083850312156109b057600080fd5b6109b983610974565b946020939093013593505050565b6000806000606084860312156109dc57600080fd5b6109e584610974565b92506109f360208501610974565b9150604084013590509250925092565b600060208284031215610a1557600080fd5b610a1e82610974565b9392505050565b60008060408385031215610a3857600080fd5b610a4183610974565b9150610a4f60208401610974565b90509250929050565b600181811c90821680610a6c57607f821691505b602082108103610aa5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156102a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea265627a7a723158204329d01b9ef059739de93dffafa8e1daeee11edbcbfc722e587e0cce88e7273864736f6c63430008140032","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE0E CODESIZE SUB DUP1 PUSH3 0xE0E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB1A DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x31C JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA25 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2BA DUP6 DUP3 DUP6 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x2C5 DUP6 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2A0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x317 SWAP1 DUP8 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA58 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C5 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x693 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x693 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x919 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B9 DUP4 PUSH2 0x974 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9E5 DUP5 PUSH2 0x974 JUMP JUMPDEST SWAP3 POP PUSH2 0x9F3 PUSH1 0x20 DUP6 ADD PUSH2 0x974 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA1E DUP3 PUSH2 0x974 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 PUSH2 0x974 JUMP JUMPDEST SWAP2 POP PUSH2 0xA4F PUSH1 0x20 DUP5 ADD PUSH2 0x974 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA6C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAA5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 NUMBER 0x29 0xD0 SHL SWAP15 CREATE MSIZE PUSH20 0x9DE93DFFAFA8E1DAEEE11EDBCBFC722E587E0CCE DUP9 0xE7 0x27 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP ORIGIN ","sourceMap":"1532:11312:7:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:7;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:26;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:26;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:26;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:26:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:26;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:26;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:26;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:26;;;3992:26;3943:89;-1:-1:-1;;2747:1:26;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:26;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:26;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:26;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:26:o;:::-;1532:11312:7;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_998":{"entryPoint":null,"id":998,"parameterSlots":3,"returnSlots":0},"@_approve_933":{"entryPoint":1039,"id":933,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_987":{"entryPoint":null,"id":987,"parameterSlots":3,"returnSlots":0},"@_msgSender_2056":{"entryPoint":null,"id":2056,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_976":{"entryPoint":1474,"id":976,"parameterSlots":3,"returnSlots":0},"@_transfer_759":{"entryPoint":1689,"id":759,"parameterSlots":3,"returnSlots":0},"@allowance_554":{"entryPoint":null,"id":554,"parameterSlots":2,"returnSlots":1},"@approve_579":{"entryPoint":658,"id":579,"parameterSlots":2,"returnSlots":1},"@balanceOf_511":{"entryPoint":null,"id":511,"parameterSlots":1,"returnSlots":1},"@decimals_487":{"entryPoint":null,"id":487,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_682":{"entryPoint":811,"id":682,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_641":{"entryPoint":720,"id":641,"parameterSlots":2,"returnSlots":1},"@name_467":{"entryPoint":512,"id":467,"parameterSlots":0,"returnSlots":1},"@symbol_477":{"entryPoint":796,"id":477,"parameterSlots":0,"returnSlots":1},"@totalSupply_497":{"entryPoint":null,"id":497,"parameterSlots":0,"returnSlots":1},"@transferFrom_612":{"entryPoint":684,"id":612,"parameterSlots":3,"returnSlots":1},"@transfer_536":{"entryPoint":1025,"id":536,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2420,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2597,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2503,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2461,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2731,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2648,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5950:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:486:26","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:26","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:26","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:26"},"nodeType":"YulFunctionCall","src":"166:21:26"},"nodeType":"YulExpressionStatement","src":"166:21:26"},{"nodeType":"YulVariableDeclaration","src":"196:27:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:26"},"nodeType":"YulFunctionCall","src":"210:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:26"},"nodeType":"YulFunctionCall","src":"239:18:26"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:26"},"nodeType":"YulFunctionCall","src":"232:34:26"},"nodeType":"YulExpressionStatement","src":"232:34:26"},{"nodeType":"YulVariableDeclaration","src":"275:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:26"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:26"},"nodeType":"YulFunctionCall","src":"369:17:26"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:26"},"nodeType":"YulFunctionCall","src":"365:26:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:26"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:26"},"nodeType":"YulFunctionCall","src":"403:14:26"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:23:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:26"},"nodeType":"YulFunctionCall","src":"393:30:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:26"},"nodeType":"YulFunctionCall","src":"358:66:26"},"nodeType":"YulExpressionStatement","src":"358:66:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:26"},"nodeType":"YulFunctionCall","src":"302:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:26","statements":[{"nodeType":"YulAssignment","src":"318:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:26"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:26"},"nodeType":"YulFunctionCall","src":"323:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:26","statements":[]},"src":"294:140:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:26"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:26"},"nodeType":"YulFunctionCall","src":"454:22:26"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:26"},"nodeType":"YulFunctionCall","src":"450:31:26"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:26"},"nodeType":"YulFunctionCall","src":"443:42:26"},"nodeType":"YulExpressionStatement","src":"443:42:26"},{"nodeType":"YulAssignment","src":"494:121:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:26"},"nodeType":"YulFunctionCall","src":"525:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"542:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:26"},"nodeType":"YulFunctionCall","src":"521:88:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:26"},"nodeType":"YulFunctionCall","src":"506:104:26"},{"kind":"number","nodeType":"YulLiteral","src":"612:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:26"},"nodeType":"YulFunctionCall","src":"502:113:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:26","type":""}],"src":"14:607:26"},{"body":{"nodeType":"YulBlock","src":"675:147:26","statements":[{"nodeType":"YulAssignment","src":"685:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"707:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"694:12:26"},"nodeType":"YulFunctionCall","src":"694:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"685:5:26"}]},{"body":{"nodeType":"YulBlock","src":"800:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"809:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"812:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"802:6:26"},"nodeType":"YulFunctionCall","src":"802:12:26"},"nodeType":"YulExpressionStatement","src":"802:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"736:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"747:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"754:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"743:3:26"},"nodeType":"YulFunctionCall","src":"743:54:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"733:2:26"},"nodeType":"YulFunctionCall","src":"733:65:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"726:6:26"},"nodeType":"YulFunctionCall","src":"726:73:26"},"nodeType":"YulIf","src":"723:93:26"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"654:6:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"665:5:26","type":""}],"src":"626:196:26"},{"body":{"nodeType":"YulBlock","src":"914:167:26","statements":[{"body":{"nodeType":"YulBlock","src":"960:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"969:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"972:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"962:6:26"},"nodeType":"YulFunctionCall","src":"962:12:26"},"nodeType":"YulExpressionStatement","src":"962:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"935:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"944:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"931:3:26"},"nodeType":"YulFunctionCall","src":"931:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"956:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"927:3:26"},"nodeType":"YulFunctionCall","src":"927:32:26"},"nodeType":"YulIf","src":"924:52:26"},{"nodeType":"YulAssignment","src":"985:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"995:18:26"},"nodeType":"YulFunctionCall","src":"995:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"985:6:26"}]},{"nodeType":"YulAssignment","src":"1033:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1060:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1071:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1056:3:26"},"nodeType":"YulFunctionCall","src":"1056:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1043:12:26"},"nodeType":"YulFunctionCall","src":"1043:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1033:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"872:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"883:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"895:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"903:6:26","type":""}],"src":"827:254:26"},{"body":{"nodeType":"YulBlock","src":"1181:92:26","statements":[{"nodeType":"YulAssignment","src":"1191:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1203:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1214:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1199:3:26"},"nodeType":"YulFunctionCall","src":"1199:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1191:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1233:9:26"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1258:6:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1251:6:26"},"nodeType":"YulFunctionCall","src":"1251:14:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1244:6:26"},"nodeType":"YulFunctionCall","src":"1244:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1226:6:26"},"nodeType":"YulFunctionCall","src":"1226:41:26"},"nodeType":"YulExpressionStatement","src":"1226:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1150:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1161:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1172:4:26","type":""}],"src":"1086:187:26"},{"body":{"nodeType":"YulBlock","src":"1379:76:26","statements":[{"nodeType":"YulAssignment","src":"1389:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1401:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1412:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1397:3:26"},"nodeType":"YulFunctionCall","src":"1397:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1389:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1431:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1424:6:26"},"nodeType":"YulFunctionCall","src":"1424:25:26"},"nodeType":"YulExpressionStatement","src":"1424:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1348:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1359:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1370:4:26","type":""}],"src":"1278:177:26"},{"body":{"nodeType":"YulBlock","src":"1564:224:26","statements":[{"body":{"nodeType":"YulBlock","src":"1610:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1619:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1622:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1612:6:26"},"nodeType":"YulFunctionCall","src":"1612:12:26"},"nodeType":"YulExpressionStatement","src":"1612:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1585:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1594:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1581:3:26"},"nodeType":"YulFunctionCall","src":"1581:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1606:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1577:3:26"},"nodeType":"YulFunctionCall","src":"1577:32:26"},"nodeType":"YulIf","src":"1574:52:26"},{"nodeType":"YulAssignment","src":"1635:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1664:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1645:18:26"},"nodeType":"YulFunctionCall","src":"1645:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1635:6:26"}]},{"nodeType":"YulAssignment","src":"1683:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1716:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1727:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1712:3:26"},"nodeType":"YulFunctionCall","src":"1712:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1693:18:26"},"nodeType":"YulFunctionCall","src":"1693:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1683:6:26"}]},{"nodeType":"YulAssignment","src":"1740:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1767:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1778:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1763:3:26"},"nodeType":"YulFunctionCall","src":"1763:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1750:12:26"},"nodeType":"YulFunctionCall","src":"1750:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1740:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1514:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1525:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1537:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1545:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1553:6:26","type":""}],"src":"1460:328:26"},{"body":{"nodeType":"YulBlock","src":"1890:87:26","statements":[{"nodeType":"YulAssignment","src":"1900:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1912:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1923:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1908:3:26"},"nodeType":"YulFunctionCall","src":"1908:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1900:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1942:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1957:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1965:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1953:3:26"},"nodeType":"YulFunctionCall","src":"1953:17:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1935:6:26"},"nodeType":"YulFunctionCall","src":"1935:36:26"},"nodeType":"YulExpressionStatement","src":"1935:36:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1859:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1870:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1881:4:26","type":""}],"src":"1793:184:26"},{"body":{"nodeType":"YulBlock","src":"2052:116:26","statements":[{"body":{"nodeType":"YulBlock","src":"2098:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2107:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2110:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2100:6:26"},"nodeType":"YulFunctionCall","src":"2100:12:26"},"nodeType":"YulExpressionStatement","src":"2100:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2073:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2082:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2069:3:26"},"nodeType":"YulFunctionCall","src":"2069:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2094:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2065:3:26"},"nodeType":"YulFunctionCall","src":"2065:32:26"},"nodeType":"YulIf","src":"2062:52:26"},{"nodeType":"YulAssignment","src":"2123:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2133:18:26"},"nodeType":"YulFunctionCall","src":"2133:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2123:6:26"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2018:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2029:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2041:6:26","type":""}],"src":"1982:186:26"},{"body":{"nodeType":"YulBlock","src":"2260:173:26","statements":[{"body":{"nodeType":"YulBlock","src":"2306:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2315:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2318:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2308:6:26"},"nodeType":"YulFunctionCall","src":"2308:12:26"},"nodeType":"YulExpressionStatement","src":"2308:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2281:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2290:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2277:3:26"},"nodeType":"YulFunctionCall","src":"2277:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2302:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2273:3:26"},"nodeType":"YulFunctionCall","src":"2273:32:26"},"nodeType":"YulIf","src":"2270:52:26"},{"nodeType":"YulAssignment","src":"2331:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2360:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2341:18:26"},"nodeType":"YulFunctionCall","src":"2341:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2331:6:26"}]},{"nodeType":"YulAssignment","src":"2379:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2412:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2423:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2408:3:26"},"nodeType":"YulFunctionCall","src":"2408:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2389:18:26"},"nodeType":"YulFunctionCall","src":"2389:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2379:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2218:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2229:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2241:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2249:6:26","type":""}],"src":"2173:260:26"},{"body":{"nodeType":"YulBlock","src":"2493:382:26","statements":[{"nodeType":"YulAssignment","src":"2503:22:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2517:1:26","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2520:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2513:3:26"},"nodeType":"YulFunctionCall","src":"2513:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2503:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"2534:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2564:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"2570:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2560:3:26"},"nodeType":"YulFunctionCall","src":"2560:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2538:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2611:31:26","statements":[{"nodeType":"YulAssignment","src":"2613:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2627:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2635:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2623:3:26"},"nodeType":"YulFunctionCall","src":"2623:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2613:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2591:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2584:6:26"},"nodeType":"YulFunctionCall","src":"2584:26:26"},"nodeType":"YulIf","src":"2581:61:26"},{"body":{"nodeType":"YulBlock","src":"2701:168:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2722:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2725:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2715:6:26"},"nodeType":"YulFunctionCall","src":"2715:88:26"},"nodeType":"YulExpressionStatement","src":"2715:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2823:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2826:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2816:6:26"},"nodeType":"YulFunctionCall","src":"2816:15:26"},"nodeType":"YulExpressionStatement","src":"2816:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2851:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2854:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2844:6:26"},"nodeType":"YulFunctionCall","src":"2844:15:26"},"nodeType":"YulExpressionStatement","src":"2844:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2657:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2680:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2688:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2677:2:26"},"nodeType":"YulFunctionCall","src":"2677:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2654:2:26"},"nodeType":"YulFunctionCall","src":"2654:38:26"},"nodeType":"YulIf","src":"2651:218:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2473:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2482:6:26","type":""}],"src":"2438:437:26"},{"body":{"nodeType":"YulBlock","src":"2928:231:26","statements":[{"nodeType":"YulAssignment","src":"2938:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2949:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"2952:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2945:3:26"},"nodeType":"YulFunctionCall","src":"2945:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2938:3:26"}]},{"body":{"nodeType":"YulBlock","src":"2985:168:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3006:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3009:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2999:6:26"},"nodeType":"YulFunctionCall","src":"2999:88:26"},"nodeType":"YulExpressionStatement","src":"2999:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3107:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3110:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3100:6:26"},"nodeType":"YulFunctionCall","src":"3100:15:26"},"nodeType":"YulExpressionStatement","src":"3100:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3135:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3138:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3128:6:26"},"nodeType":"YulFunctionCall","src":"3128:15:26"},"nodeType":"YulExpressionStatement","src":"3128:15:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2969:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"2972:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2966:2:26"},"nodeType":"YulFunctionCall","src":"2966:10:26"},"nodeType":"YulIf","src":"2963:190:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2911:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"2914:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2920:3:26","type":""}],"src":"2880:279:26"},{"body":{"nodeType":"YulBlock","src":"3338:227:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3355:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3366:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:26"},"nodeType":"YulFunctionCall","src":"3348:21:26"},"nodeType":"YulExpressionStatement","src":"3348:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3389:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3400:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3385:3:26"},"nodeType":"YulFunctionCall","src":"3385:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"3405:2:26","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3378:6:26"},"nodeType":"YulFunctionCall","src":"3378:30:26"},"nodeType":"YulExpressionStatement","src":"3378:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3428:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3439:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3424:3:26"},"nodeType":"YulFunctionCall","src":"3424:18:26"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3444:34:26","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3417:6:26"},"nodeType":"YulFunctionCall","src":"3417:62:26"},"nodeType":"YulExpressionStatement","src":"3417:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3499:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3510:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3495:3:26"},"nodeType":"YulFunctionCall","src":"3495:18:26"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3515:7:26","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3488:6:26"},"nodeType":"YulFunctionCall","src":"3488:35:26"},"nodeType":"YulExpressionStatement","src":"3488:35:26"},{"nodeType":"YulAssignment","src":"3532:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3544:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3555:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3540:3:26"},"nodeType":"YulFunctionCall","src":"3540:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3532:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3315:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3329:4:26","type":""}],"src":"3164:401:26"},{"body":{"nodeType":"YulBlock","src":"3744:226:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3761:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3772:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3754:6:26"},"nodeType":"YulFunctionCall","src":"3754:21:26"},"nodeType":"YulExpressionStatement","src":"3754:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3795:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3806:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3791:3:26"},"nodeType":"YulFunctionCall","src":"3791:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"3811:2:26","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3784:6:26"},"nodeType":"YulFunctionCall","src":"3784:30:26"},"nodeType":"YulExpressionStatement","src":"3784:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3834:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3845:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3830:3:26"},"nodeType":"YulFunctionCall","src":"3830:18:26"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3850:34:26","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3823:6:26"},"nodeType":"YulFunctionCall","src":"3823:62:26"},"nodeType":"YulExpressionStatement","src":"3823:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3905:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3916:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3901:3:26"},"nodeType":"YulFunctionCall","src":"3901:18:26"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3921:6:26","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3894:6:26"},"nodeType":"YulFunctionCall","src":"3894:34:26"},"nodeType":"YulExpressionStatement","src":"3894:34:26"},{"nodeType":"YulAssignment","src":"3937:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3949:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3960:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3945:3:26"},"nodeType":"YulFunctionCall","src":"3945:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3937:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3721:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3735:4:26","type":""}],"src":"3570:400:26"},{"body":{"nodeType":"YulBlock","src":"4149:224:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4166:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4177:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4159:6:26"},"nodeType":"YulFunctionCall","src":"4159:21:26"},"nodeType":"YulExpressionStatement","src":"4159:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4200:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4211:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4196:3:26"},"nodeType":"YulFunctionCall","src":"4196:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"4216:2:26","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4189:6:26"},"nodeType":"YulFunctionCall","src":"4189:30:26"},"nodeType":"YulExpressionStatement","src":"4189:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4239:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4250:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4235:3:26"},"nodeType":"YulFunctionCall","src":"4235:18:26"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4255:34:26","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4228:6:26"},"nodeType":"YulFunctionCall","src":"4228:62:26"},"nodeType":"YulExpressionStatement","src":"4228:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4310:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4321:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4306:3:26"},"nodeType":"YulFunctionCall","src":"4306:18:26"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4326:4:26","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4299:6:26"},"nodeType":"YulFunctionCall","src":"4299:32:26"},"nodeType":"YulExpressionStatement","src":"4299:32:26"},{"nodeType":"YulAssignment","src":"4340:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4352:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4363:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4348:3:26"},"nodeType":"YulFunctionCall","src":"4348:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4340:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4126:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4140:4:26","type":""}],"src":"3975:398:26"},{"body":{"nodeType":"YulBlock","src":"4552:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4569:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4580:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4562:6:26"},"nodeType":"YulFunctionCall","src":"4562:21:26"},"nodeType":"YulExpressionStatement","src":"4562:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4603:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4614:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4599:3:26"},"nodeType":"YulFunctionCall","src":"4599:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"4619:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4592:6:26"},"nodeType":"YulFunctionCall","src":"4592:30:26"},"nodeType":"YulExpressionStatement","src":"4592:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4642:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4653:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4638:3:26"},"nodeType":"YulFunctionCall","src":"4638:18:26"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4658:31:26","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4631:6:26"},"nodeType":"YulFunctionCall","src":"4631:59:26"},"nodeType":"YulExpressionStatement","src":"4631:59:26"},{"nodeType":"YulAssignment","src":"4699:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4722:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:26"},"nodeType":"YulFunctionCall","src":"4707:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4699:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4529:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4543:4:26","type":""}],"src":"4378:353:26"},{"body":{"nodeType":"YulBlock","src":"4910:227:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4927:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4938:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4920:6:26"},"nodeType":"YulFunctionCall","src":"4920:21:26"},"nodeType":"YulExpressionStatement","src":"4920:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4961:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4972:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4957:3:26"},"nodeType":"YulFunctionCall","src":"4957:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"4977:2:26","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4950:6:26"},"nodeType":"YulFunctionCall","src":"4950:30:26"},"nodeType":"YulExpressionStatement","src":"4950:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5000:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5011:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4996:3:26"},"nodeType":"YulFunctionCall","src":"4996:18:26"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"5016:34:26","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4989:6:26"},"nodeType":"YulFunctionCall","src":"4989:62:26"},"nodeType":"YulExpressionStatement","src":"4989:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5071:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5082:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5067:3:26"},"nodeType":"YulFunctionCall","src":"5067:18:26"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"5087:7:26","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5060:6:26"},"nodeType":"YulFunctionCall","src":"5060:35:26"},"nodeType":"YulExpressionStatement","src":"5060:35:26"},{"nodeType":"YulAssignment","src":"5104:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5116:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5127:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5112:3:26"},"nodeType":"YulFunctionCall","src":"5112:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5104:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4887:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4901:4:26","type":""}],"src":"4736:401:26"},{"body":{"nodeType":"YulBlock","src":"5316:225:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5333:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5344:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5326:6:26"},"nodeType":"YulFunctionCall","src":"5326:21:26"},"nodeType":"YulExpressionStatement","src":"5326:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5367:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5378:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5363:3:26"},"nodeType":"YulFunctionCall","src":"5363:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"5383:2:26","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5356:6:26"},"nodeType":"YulFunctionCall","src":"5356:30:26"},"nodeType":"YulExpressionStatement","src":"5356:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5406:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5417:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5402:3:26"},"nodeType":"YulFunctionCall","src":"5402:18:26"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5422:34:26","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5395:6:26"},"nodeType":"YulFunctionCall","src":"5395:62:26"},"nodeType":"YulExpressionStatement","src":"5395:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5477:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5488:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5473:3:26"},"nodeType":"YulFunctionCall","src":"5473:18:26"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5493:5:26","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5466:6:26"},"nodeType":"YulFunctionCall","src":"5466:33:26"},"nodeType":"YulExpressionStatement","src":"5466:33:26"},{"nodeType":"YulAssignment","src":"5508:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5520:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5531:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5516:3:26"},"nodeType":"YulFunctionCall","src":"5516:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5508:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5293:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5307:4:26","type":""}],"src":"5142:399:26"},{"body":{"nodeType":"YulBlock","src":"5720:228:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5737:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5748:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5730:6:26"},"nodeType":"YulFunctionCall","src":"5730:21:26"},"nodeType":"YulExpressionStatement","src":"5730:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5771:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5782:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5767:3:26"},"nodeType":"YulFunctionCall","src":"5767:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"5787:2:26","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5760:6:26"},"nodeType":"YulFunctionCall","src":"5760:30:26"},"nodeType":"YulExpressionStatement","src":"5760:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5810:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5821:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5806:3:26"},"nodeType":"YulFunctionCall","src":"5806:18:26"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5826:34:26","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5799:6:26"},"nodeType":"YulFunctionCall","src":"5799:62:26"},"nodeType":"YulExpressionStatement","src":"5799:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5881:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5892:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5877:3:26"},"nodeType":"YulFunctionCall","src":"5877:18:26"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5897:8:26","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5870:6:26"},"nodeType":"YulFunctionCall","src":"5870:36:26"},"nodeType":"YulExpressionStatement","src":"5870:36:26"},{"nodeType":"YulAssignment","src":"5915:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5927:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5938:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5923:3:26"},"nodeType":"YulFunctionCall","src":"5923:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5915:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5697:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5711:4:26","type":""}],"src":"5546:402:26"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e39190610908565b60405180910390f35b6100ff6100fa36600461099d565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f3660046109c7565b6102ac565b604051601281526020016100e3565b6100ff61015136600461099d565b6102d0565b610113610164366004610a03565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031c565b6100ff6101a236600461099d565b61032b565b6100ff6101b536600461099d565b610401565b6101136101c8366004610a25565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a58565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a58565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040f565b60019150505b92915050565b6000336102ba8582856105c2565b6102c5858585610699565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610317908790610aab565b61040f565b60606004805461020f90610a58565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c5828686840361040f565b6000336102a0818585610699565b73ffffffffffffffffffffffffffffffffffffffff83166104b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff8216610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106935781811015610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103eb565b610693848484840361040f565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff82166107df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610895576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103eb565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610693565b600060208083528351808285015260005b8181101561093557858101830151858201604001528201610919565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461099857600080fd5b919050565b600080604083850312156109b057600080fd5b6109b983610974565b946020939093013593505050565b6000806000606084860312156109dc57600080fd5b6109e584610974565b92506109f360208501610974565b9150604084013590509250925092565b600060208284031215610a1557600080fd5b610a1e82610974565b9392505050565b60008060408385031215610a3857600080fd5b610a4183610974565b9150610a4f60208401610974565b90509250929050565b600181811c90821680610a6c57607f821691505b602082108103610aa5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156102a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea265627a7a723158204329d01b9ef059739de93dffafa8e1daeee11edbcbfc722e587e0cce88e7273864736f6c63430008140032","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x31C JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA25 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA58 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA58 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2BA DUP6 DUP3 DUP6 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x2C5 DUP6 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2A0 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x317 SWAP1 DUP8 SWAP1 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA58 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C5 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2A0 DUP2 DUP6 DUP6 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x693 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x693 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x40F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x895 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3EB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x935 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x919 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B9 DUP4 PUSH2 0x974 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9E5 DUP5 PUSH2 0x974 JUMP JUMPDEST SWAP3 POP PUSH2 0x9F3 PUSH1 0x20 DUP6 ADD PUSH2 0x974 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA1E DUP3 PUSH2 0x974 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 PUSH2 0x974 JUMP JUMPDEST SWAP2 POP PUSH2 0xA4F PUSH1 0x20 DUP5 ADD PUSH2 0x974 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA6C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xAA5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 NUMBER 0x29 0xD0 SHL SWAP15 CREATE MSIZE PUSH20 0x9DE93DFFAFA8E1DAEEE11EDBCBFC722E587E0CCE DUP9 0xE7 0x27 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP ORIGIN ","sourceMap":"1532:11312:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1251:14:26;;1244:22;1226:41;;1214:2;1199:18;4444:197:7;1086:187:26;3255:106:7;3342:12;;3255:106;;;1424:25:26;;;1412:2;1397:18;3255:106:7;1278:177:26;5203:256:7;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1935:36:26;;1923:2;1908:18;3104:91:7;1793:184:26;5854:234:7;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;3519:18;;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;4102:18;;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;734:10:13;4581:32:7;734:10:13;4597:7:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;734:10:13;5356:38:7;5372:4;734:10:13;5387:6:7;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:7;;5203:256;-1:-1:-1;;;;5203:256:7:o;5854:234::-;734:10:13;5942:4:7;4102:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;5942:4;;734:10:13;5996:64:7;;734:10:13;;4102:27:7;;6021:38;;6049:10;;6021:38;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;734:10:13;6668:4:7;4102:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6668:4;;734:10:13;6812:15:7;6792:16;:35;;6784:85;;;;;;;3366:2:26;6784:85:7;;;3348:21:26;3405:2;3385:18;;;3378:30;3444:34;3424:18;;;3417:62;3515:7;3495:18;;;3488:35;3540:19;;6784:85:7;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;734:10:13;3873:28:7;734:10:13;3890:2:7;3894:6;3873:9;:28::i;10457:340::-;10558:19;;;10550:68;;;;;;;3772:2:26;10550:68:7;;;3754:21:26;3811:2;3791:18;;;3784:30;3850:34;3830:18;;;3823:62;3921:6;3901:18;;;3894:34;3945:19;;10550:68:7;3570:400:26;10550:68:7;10636:21;;;10628:68;;;;;;;4177:2:26;10628:68:7;;;4159:21:26;4216:2;4196:18;;;4189:30;4255:34;4235:18;;;4228:62;4326:4;4306:18;;;4299:32;4348:19;;10628:68:7;3975:398:26;10628:68:7;10707:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1424:25:26;;;10758:32:7;;1397:18:26;10758:32:7;;;;;;;10457:340;;;:::o;11078:411::-;4102:18;;;;11178:24;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;11264:17;11244:37;;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;4580:2:26;11297:68:7;;;4562:21:26;4619:2;4599:18;;;4592:30;4658:31;4638:18;;;4631:59;4707:18;;11297:68:7;4378:353:26;11297:68:7;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;7552:18;;;7544:68;;;;;;;4938:2:26;7544:68:7;;;4920:21:26;4977:2;4957:18;;;4950:30;5016:34;4996:18;;;4989:62;5087:7;5067:18;;;5060:35;5112:19;;7544:68:7;4736:401:26;7544:68:7;7630:16;;;7622:64;;;;;;;5344:2:26;7622:64:7;;;5326:21:26;5383:2;5363:18;;;5356:30;5422:34;5402:18;;;5395:62;5493:5;5473:18;;;5466:33;5516:19;;7622:64:7;5142:399:26;7622:64:7;7768:15;;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;;;;5748:2:26;7793:72:7;;;5730:21:26;5787:2;5767:18;;;5760:30;5826:34;5806:18;;;5799:62;5897:8;5877:18;;;5870:36;5923:19;;7793:72:7;5546:402:26;7793:72:7;7899:15;;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1424:25:26;;;8114:13:7;;8163:26;;1397:18:26;8163:26:7;;;;;;;8200:37;12073:91;14:607:26;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;612:2;542:66;537:2;529:6;525:15;521:88;510:9;506:104;502:113;494:121;;;;14:607;;;;:::o;626:196::-;694:20;;754:42;743:54;;733:65;;723:93;;812:1;809;802:12;723:93;626:196;;;:::o;827:254::-;895:6;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;995:29;1014:9;995:29;:::i;:::-;985:39;1071:2;1056:18;;;;1043:32;;-1:-1:-1;;;827:254:26:o;1460:328::-;1537:6;1545;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;;1693:38;1727:2;1716:9;1712:18;1693:38;:::i;:::-;1683:48;;1778:2;1767:9;1763:18;1750:32;1740:42;;1460:328;;;;;:::o;1982:186::-;2041:6;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;1982:186;-1:-1:-1;;;1982:186:26:o;2173:260::-;2241:6;2249;2302:2;2290:9;2281:7;2277:23;2273:32;2270:52;;;2318:1;2315;2308:12;2270:52;2341:29;2360:9;2341:29;:::i;:::-;2331:39;;2389:38;2423:2;2412:9;2408:18;2389:38;:::i;:::-;2379:48;;2173:260;;;;;:::o;2438:437::-;2517:1;2513:12;;;;2560;;;2581:61;;2635:4;2627:6;2623:17;2613:27;;2581:61;2688:2;2680:6;2677:14;2657:18;2654:38;2651:218;;2725:77;2722:1;2715:88;2826:4;2823:1;2816:15;2854:4;2851:1;2844:15;2651:218;;2438:437;;;:::o;2880:279::-;2945:9;;;2966:10;;;2963:190;;;3009:77;3006:1;2999:88;3110:4;3107:1;3100:15;3138:4;3135:1;3128:15"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f306428e44b4808aedc148095589ac52aa79ef9838f2d7afdc11ce14274b06cb64736f6c63430008140032","opcodes":"PUSH1 0x55 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 RETURN MOD TIMESTAMP DUP15 PREVRANDAO 0xB4 DUP1 DUP11 0xED 0xC1 BASEFEE MULMOD SSTORE DUP10 0xAC MSTORE 0xAA PUSH26 0xEF9838F2D7AFDC11CE14274B06CB64736F6C6343000814003200 ","sourceMap":"424:971:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f306428e44b4808aedc148095589ac52aa79ef9838f2d7afdc11ce14274b06cb64736f6c63430008140032","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 RETURN MOD TIMESTAMP DUP15 PREVRANDAO 0xB4 DUP1 DUP11 0xED 0xC1 BASEFEE MULMOD SSTORE DUP10 0xAC MSTORE 0xAA PUSH26 0xEF9838F2D7AFDC11CE14274B06CB64736F6C6343000814003200 ","sourceMap":"424:971:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158202e22c6c09267ce7c5a190cbdc8c14a16418ff5a917fbbced0084ec884cacdf8664736f6c63430008140032","opcodes":"PUSH1 0x55 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2E 0x22 0xC6 0xC0 SWAP3 PUSH8 0xCE7C5A190CBDC8C1 0x4A AND COINBASE DUP16 CREATE2 0xA9 OR 0xFB 0xBC 0xED STOP DUP5 0xEC DUP9 0x4C 0xAC 0xDF DUP7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP ORIGIN ","sourceMap":"1235:3050:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1235:3050:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158202e22c6c09267ce7c5a190cbdc8c14a16418ff5a917fbbced0084ec884cacdf8664736f6c63430008140032","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2E 0x22 0xC6 0xC0 SWAP3 PUSH8 0xCE7C5A190CBDC8C1 0x4A AND COINBASE DUP16 CREATE2 0xA9 OR 0xFB 0xBC 0xED STOP DUP5 0xEC DUP9 0x4C 0xAC 0xDF DUP7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP ORIGIN ","sourceMap":"1235:3050:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820d0b67358be0742e98d364bdbb5dde414924cd4a1a5cc2981b9694e6a5f7a676964736f6c63430008140032","opcodes":"PUSH1 0x55 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD0 0xB6 PUSH20 0x58BE0742E98D364BDBB5DDE414924CD4A1A5CC29 DUP2 0xB9 PUSH10 0x4E6A5F7A676964736F6C PUSH4 0x43000814 STOP ORIGIN ","sourceMap":"1420:2685:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820d0b67358be0742e98d364bdbb5dde414924cd4a1a5cc2981b9694e6a5f7a676964736f6c63430008140032","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD0 0xB6 PUSH20 0x58BE0742E98D364BDBB5DDE414924CD4A1A5CC29 DUP2 0xB9 PUSH10 0x4E6A5F7A676964736F6C PUSH4 0x43000814 STOP ORIGIN ","sourceMap":"1420:2685:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f2fabf61be4102ebc9a1c90f27545518d842ccb0db2a0399422d9d17f8b8d08d64736f6c63430008140032","opcodes":"PUSH1 0x55 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLCODE STATICCALL 0xBF PUSH2 0xBE41 MUL 0xEB 0xC9 LOG1 0xC9 0xF 0x27 SLOAD SSTORE XOR 0xD8 TIMESTAMP 0xCC 0xB0 0xDB 0x2A SUB SWAP10 TIMESTAMP 0x2D SWAP14 OR 0xF8 0xB8 0xD0 DUP14 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP ORIGIN ","sourceMap":"220:2559:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f2fabf61be4102ebc9a1c90f27545518d842ccb0db2a0399422d9d17f8b8d08d64736f6c63430008140032","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALLCODE STATICCALL 0xBF PUSH2 0xBE41 MUL 0xEB 0xC9 LOG1 0xC9 0xF 0x27 SLOAD SSTORE XOR 0xD8 TIMESTAMP 0xCC 0xB0 0xDB 0x2A SUB SWAP10 TIMESTAMP 0x2D SWAP14 OR 0xF8 0xB8 0xD0 DUP14 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP ORIGIN ","sourceMap":"220:2559:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820845c530111cd63be0b3b6bbb90d7b4f9d9315845eae7a5a53f22546aea4c9dff64736f6c63430008140032","opcodes":"PUSH1 0x55 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP5 0x5C MSTORE8 ADD GT 0xCD PUSH4 0xBE0B3B6B 0xBB SWAP1 0xD7 0xB4 0xF9 0xD9 BALANCE PC GASLIMIT 0xEA 0xE7 0xA5 0xA5 EXTCODEHASH 0x22 SLOAD PUSH11 0xEA4C9DFF64736F6C634300 ADDMOD EQ STOP ORIGIN ","sourceMap":"369:8761:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8761:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820845c530111cd63be0b3b6bbb90d7b4f9d9315845eae7a5a53f22546aea4c9dff64736f6c63430008140032","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP5 0x5C MSTORE8 ADD GT 0xCD PUSH4 0xBE0B3B6B 0xBB SWAP1 0xD7 0xB4 0xF9 0xD9 BALANCE PC GASLIMIT 0xEA 0xE7 0xA5 0xA5 EXTCODEHASH 0x22 SLOAD PUSH11 0xEA4C9DFF64736F6C634300 ADDMOD EQ STOP ORIGIN ","sourceMap":"369:8761:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e63ff3b7f0129c8158d5a6de066753e57808132c049daccbcfbe8b2d58d2112964736f6c63430008140032","opcodes":"PUSH1 0x55 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE6 EXTCODEHASH RETURN 0xB7 CREATE SLT SWAP13 DUP2 PC 0xD5 0xA6 0xDE MOD PUSH8 0x53E57808132C049D 0xAC 0xCB 0xCF 0xBE DUP12 0x2D PC 0xD2 GT 0x29 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP ORIGIN ","sourceMap":"202:12582:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e63ff3b7f0129c8158d5a6de066753e57808132c049daccbcfbe8b2d58d2112964736f6c63430008140032","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE6 EXTCODEHASH RETURN 0xB7 CREATE SLT SWAP13 DUP2 PC 0xD5 0xA6 0xDE MOD PUSH8 0x53E57808132C049D 0xAC 0xCB 0xCF 0xBE DUP12 0x2D PC 0xD2 GT 0x29 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP ORIGIN ","sourceMap":"202:12582:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582074547bbf7d51368fae77cf16943b7a70f247003676aedb8ef23b0ed348bc303464736f6c63430008140032","opcodes":"PUSH1 0x55 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH21 0x547BBF7D51368FAE77CF16943B7A70F247003676AE 0xDB DUP15 CALLCODE EXTCODESIZE 0xE 0xD3 BASEFEE 0xBC ADDRESS CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP ORIGIN ","sourceMap":"927:34153:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;927:34153:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582074547bbf7d51368fae77cf16943b7a70f247003676aedb8ef23b0ed348bc303464736f6c63430008140032","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH21 0x547BBF7D51368FAE77CF16943B7A70F247003676AE 0xDB DUP15 CALLCODE EXTCODESIZE 0xE 0xD3 BASEFEE 0xBC ADDRESS CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP ORIGIN ","sourceMap":"927:34153:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e134e1df15443288056817e3df864662562e6c1a5540437540b08a371f9918a164736f6c63430008140032","opcodes":"PUSH1 0x55 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE1 CALLVALUE 0xE1 0xDF ISZERO PREVRANDAO ORIGIN DUP9 SDIV PUSH9 0x17E3DF864662562E6C BYTE SSTORE BLOCKHASH NUMBER PUSH22 0x40B08A371F9918A164736F6C63430008140032000000 ","sourceMap":"215:1047:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e134e1df15443288056817e3df864662562e6c1a5540437540b08a371f9918a164736f6c63430008140032","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE1 CALLVALUE 0xE1 0xDF ISZERO PREVRANDAO ORIGIN DUP9 SDIV PUSH9 0x17E3DF864662562E6C BYTE SSTORE BLOCKHASH NUMBER PUSH22 0x40B08A371F9918A164736F6C63430008140032000000 ","sourceMap":"215:1047:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/CodeDAOToken.sol":{"CodeDAOToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_5844":{"entryPoint":null,"id":5844,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":337,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":416,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":279,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":257,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2914:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:26"},"nodeType":"YulFunctionCall","src":"66:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:26"},"nodeType":"YulFunctionCall","src":"56:31:26"},"nodeType":"YulExpressionStatement","src":"56:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:26"},"nodeType":"YulFunctionCall","src":"96:15:26"},"nodeType":"YulExpressionStatement","src":"96:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:26"},"nodeType":"YulFunctionCall","src":"120:15:26"},"nodeType":"YulExpressionStatement","src":"120:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:26"},{"body":{"nodeType":"YulBlock","src":"201:325:26","statements":[{"nodeType":"YulAssignment","src":"211:22:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:26","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:26"},"nodeType":"YulFunctionCall","src":"221:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:26"},"nodeType":"YulFunctionCall","src":"268:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:26","statements":[{"nodeType":"YulAssignment","src":"321:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:26"},"nodeType":"YulFunctionCall","src":"331:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:26"},"nodeType":"YulFunctionCall","src":"292:26:26"},"nodeType":"YulIf","src":"289:61:26"},{"body":{"nodeType":"YulBlock","src":"409:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:26"},"nodeType":"YulFunctionCall","src":"433:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:26"},"nodeType":"YulFunctionCall","src":"423:31:26"},"nodeType":"YulExpressionStatement","src":"423:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:26"},"nodeType":"YulFunctionCall","src":"467:15:26"},"nodeType":"YulExpressionStatement","src":"467:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:26"},"nodeType":"YulFunctionCall","src":"495:15:26"},"nodeType":"YulExpressionStatement","src":"495:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:26"},"nodeType":"YulFunctionCall","src":"385:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:26"},"nodeType":"YulFunctionCall","src":"362:38:26"},"nodeType":"YulIf","src":"359:161:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:26","type":""}],"src":"146:380:26"},{"body":{"nodeType":"YulBlock","src":"587:65:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:26"},"nodeType":"YulFunctionCall","src":"597:14:26"},"nodeType":"YulExpressionStatement","src":"597:14:26"},{"nodeType":"YulAssignment","src":"620:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:26"},"nodeType":"YulFunctionCall","src":"628:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:26"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:26","type":""}],"src":"531:121:26"},{"body":{"nodeType":"YulBlock","src":"738:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:26","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:26","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:26","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:26","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:26"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:26"},"nodeType":"YulFunctionCall","src":"809:17:26"},"nodeType":"YulExpressionStatement","src":"809:17:26"},{"nodeType":"YulVariableDeclaration","src":"839:31:26","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:26"},"nodeType":"YulFunctionCall","src":"851:19:26"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:26","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:26"},"nodeType":"YulFunctionCall","src":"919:19:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:26"},"nodeType":"YulFunctionCall","src":"912:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:26"},"nodeType":"YulFunctionCall","src":"902:38:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:26","statements":[{"nodeType":"YulAssignment","src":"979:19:26","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:26"},"nodeType":"YulFunctionCall","src":"956:20:26"},"nodeType":"YulIf","src":"953:47:26"},{"nodeType":"YulVariableDeclaration","src":"1013:41:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:26","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:26"},"nodeType":"YulFunctionCall","src":"1040:12:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:26"},"nodeType":"YulFunctionCall","src":"1033:20:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:26"},"nodeType":"YulFunctionCall","src":"1023:31:26"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:26","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:26"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:26"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:26"},"nodeType":"YulFunctionCall","src":"1167:17:26"},"nodeType":"YulExpressionStatement","src":"1167:17:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:26"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:26"},"nodeType":"YulFunctionCall","src":"1112:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:26","statements":[{"nodeType":"YulAssignment","src":"1128:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:26"},"nodeType":"YulFunctionCall","src":"1137:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:26","statements":[]},"src":"1104:82:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:26"},"nodeType":"YulFunctionCall","src":"751:11:26"},"nodeType":"YulIf","src":"748:448:26"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:26","type":""}],"src":"657:545:26"},{"body":{"nodeType":"YulBlock","src":"1292:81:26","statements":[{"nodeType":"YulAssignment","src":"1302:65:26","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:26","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:26"},"nodeType":"YulFunctionCall","src":"1331:11:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:26"},"nodeType":"YulFunctionCall","src":"1344:6:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:26"},"nodeType":"YulFunctionCall","src":"1327:24:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:26"},"nodeType":"YulFunctionCall","src":"1323:29:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:26"},"nodeType":"YulFunctionCall","src":"1313:40:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:26","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:26"},"nodeType":"YulFunctionCall","src":"1355:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:26"},"nodeType":"YulFunctionCall","src":"1310:57:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:26","type":""}],"src":"1207:166:26"},{"body":{"nodeType":"YulBlock","src":"1474:1256:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:26"},"nodeType":"YulFunctionCall","src":"1498:10:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:26"},"nodeType":"YulFunctionCall","src":"1553:18:26"},"nodeType":"YulExpressionStatement","src":"1553:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:26","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:26"},"nodeType":"YulFunctionCall","src":"1535:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:26"},"nodeType":"YulFunctionCall","src":"1531:18:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:26"},"nodeType":"YulFunctionCall","src":"1520:30:26"},"nodeType":"YulIf","src":"1517:56:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:26"},"nodeType":"YulFunctionCall","src":"1658:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:26"},"nodeType":"YulFunctionCall","src":"1632:38:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:26"},"nodeType":"YulFunctionCall","src":"1582:97:26"},"nodeType":"YulExpressionStatement","src":"1582:97:26"},{"nodeType":"YulVariableDeclaration","src":"1688:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:26","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:26","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:26","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:26"},"nodeType":"YulFunctionCall","src":"1858:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:26"},"nodeType":"YulFunctionCall","src":"1846:20:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:26"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:26"},"nodeType":"YulFunctionCall","src":"1893:35:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:26"},"nodeType":"YulFunctionCall","src":"2067:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:26"},"nodeType":"YulFunctionCall","src":"2061:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:26"},"nodeType":"YulFunctionCall","src":"2046:42:26"},"nodeType":"YulExpressionStatement","src":"2046:42:26"},{"nodeType":"YulAssignment","src":"2105:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:26"},"nodeType":"YulFunctionCall","src":"2115:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:26"}]},{"nodeType":"YulAssignment","src":"2146:40:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:26"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:26"},"nodeType":"YulFunctionCall","src":"2159:27:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:26"},"nodeType":"YulFunctionCall","src":"1972:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:26","statements":[{"nodeType":"YulAssignment","src":"1989:24:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:26"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:26"},"nodeType":"YulFunctionCall","src":"1994:19:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:26","statements":[]},"src":"1964:236:26"},{"body":{"nodeType":"YulBlock","src":"2248:166:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:26"},"nodeType":"YulFunctionCall","src":"2289:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:26"},"nodeType":"YulFunctionCall","src":"2283:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:26","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:26"},"nodeType":"YulFunctionCall","src":"2368:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:26","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:26"},"nodeType":"YulFunctionCall","src":"2364:24:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:26"},"nodeType":"YulFunctionCall","src":"2390:6:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:26"},"nodeType":"YulFunctionCall","src":"2360:37:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:26"},"nodeType":"YulFunctionCall","src":"2356:42:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:26"},"nodeType":"YulFunctionCall","src":"2341:58:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:26"},"nodeType":"YulFunctionCall","src":"2326:74:26"},"nodeType":"YulExpressionStatement","src":"2326:74:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:26"},"nodeType":"YulFunctionCall","src":"2216:19:26"},"nodeType":"YulIf","src":"2213:201:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:26","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:26"},"nodeType":"YulFunctionCall","src":"2444:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:26"},"nodeType":"YulFunctionCall","src":"2440:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:26"},"nodeType":"YulFunctionCall","src":"2427:36:26"},"nodeType":"YulExpressionStatement","src":"2427:36:26"}]},"nodeType":"YulCase","src":"1810:663:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:26","statements":[{"nodeType":"YulAssignment","src":"2571:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:26"},"nodeType":"YulFunctionCall","src":"2586:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:26"},"nodeType":"YulFunctionCall","src":"2580:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:26"},"nodeType":"YulIf","src":"2531:89:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:26"},"nodeType":"YulFunctionCall","src":"2646:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:26"},"nodeType":"YulFunctionCall","src":"2633:81:26"},"nodeType":"YulExpressionStatement","src":"2633:81:26"}]},"nodeType":"YulCase","src":"2482:242:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:26"},"nodeType":"YulFunctionCall","src":"1787:14:26"},"nodeType":"YulSwitch","src":"1780:944:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:26","type":""}],"src":"1378:1352:26"},{"body":{"nodeType":"YulBlock","src":"2836:76:26","statements":[{"nodeType":"YulAssignment","src":"2846:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2858:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2869:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2854:3:26"},"nodeType":"YulFunctionCall","src":"2854:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2846:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"2899:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2881:6:26"},"nodeType":"YulFunctionCall","src":"2881:25:26"},"nodeType":"YulExpressionStatement","src":"2881:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2805:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2816:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2827:4:26","type":""}],"src":"2735:177:26"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c0604052600d60809081526c21b7b232a220a7902a37b5b2b760991b60a05260009061002c90826101a0565b50604080518082019091526004815263434f444560e01b602082015260019061005590826101a0565b506002805460ff191660121790556a52b7d2dcc80cd2e400000060035534801561007e57600080fd5b5060035473813343d30065eae9d1be6521203f5c0874818c286000818152600460209081527f2232058a48e81b3e1f62f444c1229cd845f320d854eaa35a98e66395761e106d849055604051938452919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361025f565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061012b57607f821691505b60208210810361014b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561019b57600081815260208120601f850160051c810160208610156101785750805b601f850160051c820191505b8181101561019757828155600101610184565b5050505b505050565b81516001600160401b038111156101b9576101b9610101565b6101cd816101c78454610117565b84610151565b602080601f83116001811461020257600084156101ea5750858301515b600019600386901b1c1916600185901b178555610197565b600085815260208120601f198616915b8281101561023157888601518255948401946001909101908401610212565b508582101561024f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6108558061026e6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063313ce5671161007657806395d89b411161005b57806395d89b4114610152578063a9059cbb1461015a578063dd62ed3e1461016d57600080fd5b8063313ce5671461011357806370a082311461013257600080fd5b806306fdde03146100a8578063095ea7b3146100c657806318160ddd146100e957806323b872dd14610100575b600080fd5b6100b0610198565b6040516100bd9190610628565b60405180910390f35b6100d96100d43660046106bd565b610226565b60405190151581526020016100bd565b6100f260035481565b6040519081526020016100bd565b6100d961010e3660046106e7565b6102a0565b6002546101209060ff1681565b60405160ff90911681526020016100bd565b6100f2610140366004610723565b60046020526000908152604090205481565b6100b06104fa565b6100d96101683660046106bd565b610507565b6100f261017b366004610745565b600560209081526000928352604080842090915290825290205481565b600080546101a590610778565b80601f01602080910402602001604051908101604052809291908181526020018280546101d190610778565b801561021e5780601f106101f35761010080835404028352916020019161021e565b820191906000526020600020905b81548152906001019060200180831161020157829003601f168201915b505050505081565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061028e9086815260200190565b60405180910390a35060015b92915050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040812054821115610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e636500000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841660009081526005602090815260408083203384529091529020548211156103ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e7420616c6c6f77616e636500000000000000000000604482015260640161032b565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260046020526040812080548492906104039084906107fa565b909155505073ffffffffffffffffffffffffffffffffffffffff83166000908152600460205260408120805484929061043d90849061080d565b909155505073ffffffffffffffffffffffffffffffffffffffff84166000908152600560209081526040808320338452909152812080548492906104829084906107fa565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516104e891815260200190565b60405180910390a35060019392505050565b600180546101a590610778565b33600090815260046020526040812054821115610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e6365000000000000000000000000604482015260640161032b565b336000908152600460205260408120805484929061059f9084906107fa565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040812080548492906105d990849061080d565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff84169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161028e565b600060208083528351808285015260005b8181101561065557858101830151858201604001528201610639565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146106b857600080fd5b919050565b600080604083850312156106d057600080fd5b6106d983610694565b946020939093013593505050565b6000806000606084860312156106fc57600080fd5b61070584610694565b925061071360208501610694565b9150604084013590509250925092565b60006020828403121561073557600080fd5b61073e82610694565b9392505050565b6000806040838503121561075857600080fd5b61076183610694565b915061076f60208401610694565b90509250929050565b600181811c9082168061078c57607f821691505b6020821081036107c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561029a5761029a6107cb565b8082018082111561029a5761029a6107cb56fea265627a7a72315820e5b44834680fde8a98d3938c5c7b5993de6be644e3ec4452045a038763087ec464736f6c63430008140032","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0xD PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH13 0x21B7B232A220A7902A37B5B2B7 PUSH1 0x99 SHL PUSH1 0xA0 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2C SWAP1 DUP3 PUSH2 0x1A0 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x434F4445 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 SWAP1 PUSH2 0x55 SWAP1 DUP3 PUSH2 0x1A0 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH20 0x813343D30065EAE9D1BE6521203F5C0874818C28 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH32 0x2232058A48E81B3E1F62F444C1229CD845F320D854EAA35A98E66395761E106D DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x25F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x12B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x178 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x197 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x184 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1B9 JUMPI PUSH2 0x1B9 PUSH2 0x101 JUMP JUMPDEST PUSH2 0x1CD DUP2 PUSH2 0x1C7 DUP5 SLOAD PUSH2 0x117 JUMP JUMPDEST DUP5 PUSH2 0x151 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x202 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1EA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x197 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x231 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x212 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x24F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x855 DUP1 PUSH2 0x26E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xF2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x120 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1A5 SWAP1 PUSH2 0x778 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D1 SWAP1 PUSH2 0x778 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x201 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x28E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x334 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x403 SWAP1 DUP5 SWAP1 PUSH2 0x7FA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x43D SWAP1 DUP5 SWAP1 PUSH2 0x80D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x482 SWAP1 DUP5 SWAP1 PUSH2 0x7FA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x1A5 SWAP1 PUSH2 0x778 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x59F SWAP1 DUP5 SWAP1 PUSH2 0x7FA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x5D9 SWAP1 DUP5 SWAP1 PUSH2 0x80D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x655 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x639 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D9 DUP4 PUSH2 0x694 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x705 DUP5 PUSH2 0x694 JUMP JUMPDEST SWAP3 POP PUSH2 0x713 PUSH1 0x20 DUP6 ADD PUSH2 0x694 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73E DUP3 PUSH2 0x694 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x761 DUP4 PUSH2 0x694 JUMP JUMPDEST SWAP2 POP PUSH2 0x76F PUSH1 0x20 DUP5 ADD PUSH2 0x694 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x78C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7C5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x29A PUSH2 0x7CB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x29A PUSH2 0x7CB JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE5 0xB4 BASEFEE CALLVALUE PUSH9 0xFDE8A98D3938C5C7B MSIZE SWAP4 0xDE PUSH12 0xE644E3EC4452045A03876308 PUSH31 0xC464736F6C6343000814003200000000000000000000000000000000000000 ","sourceMap":"86:36:23:-:0;58:1619;86:36;;58:1619;86:36;;;-1:-1:-1;;;86:36:23;;-1:-1:-1;;86:36:23;;-1:-1:-1;86:36:23;:::i;:::-;-1:-1:-1;128:29:23;;;;;;;;;;;;-1:-1:-1;;;128:29:23;;;;;;;;;;:::i;:::-;-1:-1:-1;163:26:23;;;-1:-1:-1;;163:26:23;187:2;163:26;;;224:27;195:56;;552:190;;;;;;;;;-1:-1:-1;632:11:23;;586:42;576:53;;;;:9;:53;;;;;:67;;;:53;658:77;2881:25:26;;;586:42:23;;576:53;;658:77;;2854:18:26;658:77:23;;;;;;;58:1619;;14:127:26;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:26;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:26;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:26;;;2580:26;2531:89;-1:-1:-1;;1335:1:26;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:26;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:26;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:26;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:26:o;2735:177::-;58:1619:23;;;;;;"},"deployedBytecode":{"functionDebugData":{"@allowance_5809":{"entryPoint":null,"id":5809,"parameterSlots":0,"returnSlots":0},"@approve_5872":{"entryPoint":550,"id":5872,"parameterSlots":2,"returnSlots":1},"@balanceOf_5803":{"entryPoint":null,"id":5803,"parameterSlots":0,"returnSlots":0},"@decimals_5796":{"entryPoint":null,"id":5796,"parameterSlots":0,"returnSlots":0},"@name_5790":{"entryPoint":408,"id":5790,"parameterSlots":0,"returnSlots":0},"@symbol_5793":{"entryPoint":1274,"id":5793,"parameterSlots":0,"returnSlots":0},"@totalSupply_5799":{"entryPoint":null,"id":5799,"parameterSlots":0,"returnSlots":0},"@transferFrom_5934":{"entryPoint":672,"id":5934,"parameterSlots":3,"returnSlots":1},"@transfer_5976":{"entryPoint":1287,"id":5976,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1684,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1827,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1861,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1767,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1725,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1576,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2061,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2042,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1912,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1995,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4029:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:486:26","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:26","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:26","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:26"},"nodeType":"YulFunctionCall","src":"166:21:26"},"nodeType":"YulExpressionStatement","src":"166:21:26"},{"nodeType":"YulVariableDeclaration","src":"196:27:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:26"},"nodeType":"YulFunctionCall","src":"210:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:26"},"nodeType":"YulFunctionCall","src":"239:18:26"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:26"},"nodeType":"YulFunctionCall","src":"232:34:26"},"nodeType":"YulExpressionStatement","src":"232:34:26"},{"nodeType":"YulVariableDeclaration","src":"275:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:26"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:26"},"nodeType":"YulFunctionCall","src":"369:17:26"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:26"},"nodeType":"YulFunctionCall","src":"365:26:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:26"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:26"},"nodeType":"YulFunctionCall","src":"403:14:26"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:23:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:26"},"nodeType":"YulFunctionCall","src":"393:30:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:26"},"nodeType":"YulFunctionCall","src":"358:66:26"},"nodeType":"YulExpressionStatement","src":"358:66:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:26"},"nodeType":"YulFunctionCall","src":"302:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:26","statements":[{"nodeType":"YulAssignment","src":"318:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:26"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:26"},"nodeType":"YulFunctionCall","src":"323:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:26","statements":[]},"src":"294:140:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:26"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:26"},"nodeType":"YulFunctionCall","src":"454:22:26"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:26"},"nodeType":"YulFunctionCall","src":"450:31:26"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:26"},"nodeType":"YulFunctionCall","src":"443:42:26"},"nodeType":"YulExpressionStatement","src":"443:42:26"},{"nodeType":"YulAssignment","src":"494:121:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:26"},"nodeType":"YulFunctionCall","src":"525:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"542:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:26"},"nodeType":"YulFunctionCall","src":"521:88:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:26"},"nodeType":"YulFunctionCall","src":"506:104:26"},{"kind":"number","nodeType":"YulLiteral","src":"612:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:26"},"nodeType":"YulFunctionCall","src":"502:113:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:26","type":""}],"src":"14:607:26"},{"body":{"nodeType":"YulBlock","src":"675:147:26","statements":[{"nodeType":"YulAssignment","src":"685:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"707:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"694:12:26"},"nodeType":"YulFunctionCall","src":"694:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"685:5:26"}]},{"body":{"nodeType":"YulBlock","src":"800:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"809:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"812:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"802:6:26"},"nodeType":"YulFunctionCall","src":"802:12:26"},"nodeType":"YulExpressionStatement","src":"802:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"736:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"747:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"754:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"743:3:26"},"nodeType":"YulFunctionCall","src":"743:54:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"733:2:26"},"nodeType":"YulFunctionCall","src":"733:65:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"726:6:26"},"nodeType":"YulFunctionCall","src":"726:73:26"},"nodeType":"YulIf","src":"723:93:26"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"654:6:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"665:5:26","type":""}],"src":"626:196:26"},{"body":{"nodeType":"YulBlock","src":"914:167:26","statements":[{"body":{"nodeType":"YulBlock","src":"960:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"969:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"972:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"962:6:26"},"nodeType":"YulFunctionCall","src":"962:12:26"},"nodeType":"YulExpressionStatement","src":"962:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"935:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"944:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"931:3:26"},"nodeType":"YulFunctionCall","src":"931:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"956:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"927:3:26"},"nodeType":"YulFunctionCall","src":"927:32:26"},"nodeType":"YulIf","src":"924:52:26"},{"nodeType":"YulAssignment","src":"985:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"995:18:26"},"nodeType":"YulFunctionCall","src":"995:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"985:6:26"}]},{"nodeType":"YulAssignment","src":"1033:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1060:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1071:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1056:3:26"},"nodeType":"YulFunctionCall","src":"1056:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1043:12:26"},"nodeType":"YulFunctionCall","src":"1043:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1033:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"872:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"883:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"895:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"903:6:26","type":""}],"src":"827:254:26"},{"body":{"nodeType":"YulBlock","src":"1181:92:26","statements":[{"nodeType":"YulAssignment","src":"1191:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1203:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1214:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1199:3:26"},"nodeType":"YulFunctionCall","src":"1199:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1191:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1233:9:26"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1258:6:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1251:6:26"},"nodeType":"YulFunctionCall","src":"1251:14:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1244:6:26"},"nodeType":"YulFunctionCall","src":"1244:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1226:6:26"},"nodeType":"YulFunctionCall","src":"1226:41:26"},"nodeType":"YulExpressionStatement","src":"1226:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1150:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1161:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1172:4:26","type":""}],"src":"1086:187:26"},{"body":{"nodeType":"YulBlock","src":"1379:76:26","statements":[{"nodeType":"YulAssignment","src":"1389:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1401:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1412:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1397:3:26"},"nodeType":"YulFunctionCall","src":"1397:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1389:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1431:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1424:6:26"},"nodeType":"YulFunctionCall","src":"1424:25:26"},"nodeType":"YulExpressionStatement","src":"1424:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1348:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1359:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1370:4:26","type":""}],"src":"1278:177:26"},{"body":{"nodeType":"YulBlock","src":"1564:224:26","statements":[{"body":{"nodeType":"YulBlock","src":"1610:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1619:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1622:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1612:6:26"},"nodeType":"YulFunctionCall","src":"1612:12:26"},"nodeType":"YulExpressionStatement","src":"1612:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1585:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1594:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1581:3:26"},"nodeType":"YulFunctionCall","src":"1581:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1606:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1577:3:26"},"nodeType":"YulFunctionCall","src":"1577:32:26"},"nodeType":"YulIf","src":"1574:52:26"},{"nodeType":"YulAssignment","src":"1635:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1664:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1645:18:26"},"nodeType":"YulFunctionCall","src":"1645:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1635:6:26"}]},{"nodeType":"YulAssignment","src":"1683:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1716:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1727:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1712:3:26"},"nodeType":"YulFunctionCall","src":"1712:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1693:18:26"},"nodeType":"YulFunctionCall","src":"1693:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1683:6:26"}]},{"nodeType":"YulAssignment","src":"1740:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1767:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1778:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1763:3:26"},"nodeType":"YulFunctionCall","src":"1763:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1750:12:26"},"nodeType":"YulFunctionCall","src":"1750:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1740:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1514:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1525:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1537:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1545:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1553:6:26","type":""}],"src":"1460:328:26"},{"body":{"nodeType":"YulBlock","src":"1890:87:26","statements":[{"nodeType":"YulAssignment","src":"1900:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1912:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1923:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1908:3:26"},"nodeType":"YulFunctionCall","src":"1908:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1900:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1942:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1957:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1965:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1953:3:26"},"nodeType":"YulFunctionCall","src":"1953:17:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1935:6:26"},"nodeType":"YulFunctionCall","src":"1935:36:26"},"nodeType":"YulExpressionStatement","src":"1935:36:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1859:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1870:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1881:4:26","type":""}],"src":"1793:184:26"},{"body":{"nodeType":"YulBlock","src":"2052:116:26","statements":[{"body":{"nodeType":"YulBlock","src":"2098:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2107:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2110:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2100:6:26"},"nodeType":"YulFunctionCall","src":"2100:12:26"},"nodeType":"YulExpressionStatement","src":"2100:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2073:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2082:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2069:3:26"},"nodeType":"YulFunctionCall","src":"2069:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2094:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2065:3:26"},"nodeType":"YulFunctionCall","src":"2065:32:26"},"nodeType":"YulIf","src":"2062:52:26"},{"nodeType":"YulAssignment","src":"2123:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2133:18:26"},"nodeType":"YulFunctionCall","src":"2133:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2123:6:26"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2018:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2029:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2041:6:26","type":""}],"src":"1982:186:26"},{"body":{"nodeType":"YulBlock","src":"2260:173:26","statements":[{"body":{"nodeType":"YulBlock","src":"2306:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2315:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2318:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2308:6:26"},"nodeType":"YulFunctionCall","src":"2308:12:26"},"nodeType":"YulExpressionStatement","src":"2308:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2281:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2290:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2277:3:26"},"nodeType":"YulFunctionCall","src":"2277:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2302:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2273:3:26"},"nodeType":"YulFunctionCall","src":"2273:32:26"},"nodeType":"YulIf","src":"2270:52:26"},{"nodeType":"YulAssignment","src":"2331:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2360:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2341:18:26"},"nodeType":"YulFunctionCall","src":"2341:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2331:6:26"}]},{"nodeType":"YulAssignment","src":"2379:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2412:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2423:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2408:3:26"},"nodeType":"YulFunctionCall","src":"2408:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2389:18:26"},"nodeType":"YulFunctionCall","src":"2389:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2379:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2218:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2229:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2241:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2249:6:26","type":""}],"src":"2173:260:26"},{"body":{"nodeType":"YulBlock","src":"2493:382:26","statements":[{"nodeType":"YulAssignment","src":"2503:22:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2517:1:26","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2520:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2513:3:26"},"nodeType":"YulFunctionCall","src":"2513:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2503:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"2534:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2564:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"2570:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2560:3:26"},"nodeType":"YulFunctionCall","src":"2560:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2538:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2611:31:26","statements":[{"nodeType":"YulAssignment","src":"2613:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2627:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2635:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2623:3:26"},"nodeType":"YulFunctionCall","src":"2623:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2613:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2591:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2584:6:26"},"nodeType":"YulFunctionCall","src":"2584:26:26"},"nodeType":"YulIf","src":"2581:61:26"},{"body":{"nodeType":"YulBlock","src":"2701:168:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2722:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2725:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2715:6:26"},"nodeType":"YulFunctionCall","src":"2715:88:26"},"nodeType":"YulExpressionStatement","src":"2715:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2823:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2826:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2816:6:26"},"nodeType":"YulFunctionCall","src":"2816:15:26"},"nodeType":"YulExpressionStatement","src":"2816:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2851:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2854:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2844:6:26"},"nodeType":"YulFunctionCall","src":"2844:15:26"},"nodeType":"YulExpressionStatement","src":"2844:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2657:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2680:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2688:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2677:2:26"},"nodeType":"YulFunctionCall","src":"2677:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2654:2:26"},"nodeType":"YulFunctionCall","src":"2654:38:26"},"nodeType":"YulIf","src":"2651:218:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2473:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2482:6:26","type":""}],"src":"2438:437:26"},{"body":{"nodeType":"YulBlock","src":"3054:170:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3071:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3082:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3064:6:26"},"nodeType":"YulFunctionCall","src":"3064:21:26"},"nodeType":"YulExpressionStatement","src":"3064:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3105:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3116:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:26"},"nodeType":"YulFunctionCall","src":"3101:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"3121:2:26","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3094:6:26"},"nodeType":"YulFunctionCall","src":"3094:30:26"},"nodeType":"YulExpressionStatement","src":"3094:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3144:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3155:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3140:3:26"},"nodeType":"YulFunctionCall","src":"3140:18:26"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"3160:22:26","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3133:6:26"},"nodeType":"YulFunctionCall","src":"3133:50:26"},"nodeType":"YulExpressionStatement","src":"3133:50:26"},{"nodeType":"YulAssignment","src":"3192:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3204:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3215:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3200:3:26"},"nodeType":"YulFunctionCall","src":"3200:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3192:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3031:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3045:4:26","type":""}],"src":"2880:344:26"},{"body":{"nodeType":"YulBlock","src":"3403:172:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3420:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3431:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3413:6:26"},"nodeType":"YulFunctionCall","src":"3413:21:26"},"nodeType":"YulExpressionStatement","src":"3413:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3454:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3465:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3450:3:26"},"nodeType":"YulFunctionCall","src":"3450:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"3470:2:26","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3443:6:26"},"nodeType":"YulFunctionCall","src":"3443:30:26"},"nodeType":"YulExpressionStatement","src":"3443:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3493:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3504:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3489:3:26"},"nodeType":"YulFunctionCall","src":"3489:18:26"},{"hexValue":"496e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"3509:24:26","type":"","value":"Insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3482:6:26"},"nodeType":"YulFunctionCall","src":"3482:52:26"},"nodeType":"YulExpressionStatement","src":"3482:52:26"},{"nodeType":"YulAssignment","src":"3543:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3555:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3566:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3551:3:26"},"nodeType":"YulFunctionCall","src":"3551:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3543:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3380:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:26","type":""}],"src":"3229:346:26"},{"body":{"nodeType":"YulBlock","src":"3612:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:26"},"nodeType":"YulFunctionCall","src":"3622:88:26"},"nodeType":"YulExpressionStatement","src":"3622:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:26"},"nodeType":"YulFunctionCall","src":"3719:15:26"},"nodeType":"YulExpressionStatement","src":"3719:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:26"},"nodeType":"YulFunctionCall","src":"3743:15:26"},"nodeType":"YulExpressionStatement","src":"3743:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3580:184:26"},{"body":{"nodeType":"YulBlock","src":"3818:79:26","statements":[{"nodeType":"YulAssignment","src":"3828:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3840:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"3843:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3836:3:26"},"nodeType":"YulFunctionCall","src":"3836:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"3828:4:26"}]},{"body":{"nodeType":"YulBlock","src":"3869:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3871:16:26"},"nodeType":"YulFunctionCall","src":"3871:18:26"},"nodeType":"YulExpressionStatement","src":"3871:18:26"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"3860:4:26"},{"name":"x","nodeType":"YulIdentifier","src":"3866:1:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3857:2:26"},"nodeType":"YulFunctionCall","src":"3857:11:26"},"nodeType":"YulIf","src":"3854:37:26"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3800:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"3803:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"3809:4:26","type":""}],"src":"3769:128:26"},{"body":{"nodeType":"YulBlock","src":"3950:77:26","statements":[{"nodeType":"YulAssignment","src":"3960:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3971:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"3974:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3967:3:26"},"nodeType":"YulFunctionCall","src":"3967:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3960:3:26"}]},{"body":{"nodeType":"YulBlock","src":"3999:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4001:16:26"},"nodeType":"YulFunctionCall","src":"4001:18:26"},"nodeType":"YulExpressionStatement","src":"4001:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3991:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"3994:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3988:2:26"},"nodeType":"YulFunctionCall","src":"3988:10:26"},"nodeType":"YulIf","src":"3985:36:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3933:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"3936:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3942:3:26","type":""}],"src":"3902:125:26"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a35760003560e01c8063313ce5671161007657806395d89b411161005b57806395d89b4114610152578063a9059cbb1461015a578063dd62ed3e1461016d57600080fd5b8063313ce5671461011357806370a082311461013257600080fd5b806306fdde03146100a8578063095ea7b3146100c657806318160ddd146100e957806323b872dd14610100575b600080fd5b6100b0610198565b6040516100bd9190610628565b60405180910390f35b6100d96100d43660046106bd565b610226565b60405190151581526020016100bd565b6100f260035481565b6040519081526020016100bd565b6100d961010e3660046106e7565b6102a0565b6002546101209060ff1681565b60405160ff90911681526020016100bd565b6100f2610140366004610723565b60046020526000908152604090205481565b6100b06104fa565b6100d96101683660046106bd565b610507565b6100f261017b366004610745565b600560209081526000928352604080842090915290825290205481565b600080546101a590610778565b80601f01602080910402602001604051908101604052809291908181526020018280546101d190610778565b801561021e5780601f106101f35761010080835404028352916020019161021e565b820191906000526020600020905b81548152906001019060200180831161020157829003601f168201915b505050505081565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061028e9086815260200190565b60405180910390a35060015b92915050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040812054821115610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e636500000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841660009081526005602090815260408083203384529091529020548211156103ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e7420616c6c6f77616e636500000000000000000000604482015260640161032b565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260046020526040812080548492906104039084906107fa565b909155505073ffffffffffffffffffffffffffffffffffffffff83166000908152600460205260408120805484929061043d90849061080d565b909155505073ffffffffffffffffffffffffffffffffffffffff84166000908152600560209081526040808320338452909152812080548492906104829084906107fa565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516104e891815260200190565b60405180910390a35060019392505050565b600180546101a590610778565b33600090815260046020526040812054821115610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e6365000000000000000000000000604482015260640161032b565b336000908152600460205260408120805484929061059f9084906107fa565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040812080548492906105d990849061080d565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff84169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161028e565b600060208083528351808285015260005b8181101561065557858101830151858201604001528201610639565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146106b857600080fd5b919050565b600080604083850312156106d057600080fd5b6106d983610694565b946020939093013593505050565b6000806000606084860312156106fc57600080fd5b61070584610694565b925061071360208501610694565b9150604084013590509250925092565b60006020828403121561073557600080fd5b61073e82610694565b9392505050565b6000806040838503121561075857600080fd5b61076183610694565b915061076f60208401610694565b90509250929050565b600181811c9082168061078c57607f821691505b6020821081036107c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561029a5761029a6107cb565b8082018082111561029a5761029a6107cb56fea265627a7a72315820e5b44834680fde8a98d3938c5c7b5993de6be644e3ec4452045a038763087ec464736f6c63430008140032","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xF2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x6E7 JUMP JUMPDEST PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x120 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1A5 SWAP1 PUSH2 0x778 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D1 SWAP1 PUSH2 0x778 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x21E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x201 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x28E SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x334 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x403 SWAP1 DUP5 SWAP1 PUSH2 0x7FA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x43D SWAP1 DUP5 SWAP1 PUSH2 0x80D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x482 SWAP1 DUP5 SWAP1 PUSH2 0x7FA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x1A5 SWAP1 PUSH2 0x778 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x32B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x59F SWAP1 DUP5 SWAP1 PUSH2 0x7FA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x5D9 SWAP1 DUP5 SWAP1 PUSH2 0x80D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x655 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x639 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6D9 DUP4 PUSH2 0x694 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x705 DUP5 PUSH2 0x694 JUMP JUMPDEST SWAP3 POP PUSH2 0x713 PUSH1 0x20 DUP6 ADD PUSH2 0x694 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73E DUP3 PUSH2 0x694 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x761 DUP4 PUSH2 0x694 JUMP JUMPDEST SWAP2 POP PUSH2 0x76F PUSH1 0x20 DUP5 ADD PUSH2 0x694 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x78C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7C5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x29A PUSH2 0x7CB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x29A JUMPI PUSH2 0x29A PUSH2 0x7CB JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE5 0xB4 BASEFEE CALLVALUE PUSH9 0xFDE8A98D3938C5C7B MSIZE SWAP4 0xDE PUSH12 0xE644E3EC4452045A03876308 PUSH31 0xC464736F6C6343000814003200000000000000000000000000000000000000 ","sourceMap":"58:1619:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;86:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;752:200;;;;;;:::i;:::-;;:::i;:::-;;;1251:14:26;;1244:22;1226:41;;1214:2;1199:18;752:200:23;1086:187:26;195:56:23;;;;;;;;;1424:25:26;;;1412:2;1397:18;195:56:23;1278:177:26;962:415:23;;;;;;:::i;:::-;;:::i;163:26::-;;;;;;;;;;;;1965:4:26;1953:17;;;1935:36;;1923:2;1908:18;163:26:23;1793:184:26;262:44:23;;;;;;:::i;:::-;;;;;;;;;;;;;;128:29;;;:::i;1387:288::-;;;;;;:::i;:::-;;:::i;312:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;86:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;752:200::-;845:10;819:4;835:21;;;:9;:21;;;;;;;;;:30;;;;;;;;;;:38;;;888:36;819:4;;835:30;;888:36;;;;868:5;1424:25:26;;1412:2;1397:18;;1278:177;888:36:23;;;;;;;;-1:-1:-1;941:4:23;752:200;;;;;:::o;962:415::-;1067:15;;;1043:4;1067:15;;;:9;:15;;;;;;:24;-1:-1:-1;1067:24:23;1059:57;;;;;;;3082:2:26;1059:57:23;;;3064:21:26;3121:2;3101:18;;;3094:30;3160:22;3140:18;;;3133:50;3200:18;;1059:57:23;;;;;;;;;1134:15;;;;;;;:9;:15;;;;;;;;1150:10;1134:27;;;;;;;;:36;-1:-1:-1;1134:36:23;1126:71;;;;;;;3431:2:26;1126:71:23;;;3413:21:26;3470:2;3450:18;;;3443:30;3509:24;3489:18;;;3482:52;3551:18;;1126:71:23;3229:346:26;1126:71:23;1207:15;;;;;;;:9;:15;;;;;:24;;1226:5;;1207:15;:24;;1226:5;;1207:24;:::i;:::-;;;;-1:-1:-1;;1241:13:23;;;;;;;:9;:13;;;;;:22;;1258:5;;1241:13;:22;;1258:5;;1241:22;:::i;:::-;;;;-1:-1:-1;;1273:15:23;;;;;;;:9;:15;;;;;;;;1289:10;1273:27;;;;;;;:36;;1304:5;;1273:15;:36;;1304:5;;1273:36;:::i;:::-;;;;;;;;1339:2;1324:25;;1333:4;1324:25;;;1343:5;1324:25;;;;1424::26;;1412:2;1397:18;;1278:177;1324:25:23;;;;;;;;-1:-1:-1;1366:4:23;962:415;;;;;:::o;128:29::-;;;;;;;:::i;1387:288::-;1484:10;1450:4;1474:21;;;:9;:21;;;;;;:30;-1:-1:-1;1474:30:23;1466:63;;;;;;;3082:2:26;1466:63:23;;;3064:21:26;3121:2;3101:18;;;3094:30;3160:22;3140:18;;;3133:50;3200:18;;1466:63:23;2880:344:26;1466:63:23;1549:10;1539:21;;;;:9;:21;;;;;:30;;1564:5;;1539:21;:30;;1564:5;;1539:30;:::i;:::-;;;;-1:-1:-1;;1579:13:23;;;;;;;:9;:13;;;;;:22;;1596:5;;1579:13;:22;;1596:5;;1579:22;:::i;:::-;;;;-1:-1:-1;;1616:31:23;;1424:25:26;;;1616:31:23;;;;1625:10;;1616:31;;1412:2:26;1397:18;1616:31:23;1278:177:26;14:607;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;612:2;542:66;537:2;529:6;525:15;521:88;510:9;506:104;502:113;494:121;;;;14:607;;;;:::o;626:196::-;694:20;;754:42;743:54;;733:65;;723:93;;812:1;809;802:12;723:93;626:196;;;:::o;827:254::-;895:6;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;995:29;1014:9;995:29;:::i;:::-;985:39;1071:2;1056:18;;;;1043:32;;-1:-1:-1;;;827:254:26:o;1460:328::-;1537:6;1545;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;;1693:38;1727:2;1716:9;1712:18;1693:38;:::i;:::-;1683:48;;1778:2;1767:9;1763:18;1750:32;1740:42;;1460:328;;;;;:::o;1982:186::-;2041:6;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;1982:186;-1:-1:-1;;;1982:186:26:o;2173:260::-;2241:6;2249;2302:2;2290:9;2281:7;2277:23;2273:32;2270:52;;;2318:1;2315;2308:12;2270:52;2341:29;2360:9;2341:29;:::i;:::-;2331:39;;2389:38;2423:2;2412:9;2408:18;2389:38;:::i;:::-;2379:48;;2173:260;;;;;:::o;2438:437::-;2517:1;2513:12;;;;2560;;;2581:61;;2635:4;2627:6;2623:17;2613:27;;2581:61;2688:2;2680:6;2677:14;2657:18;2654:38;2651:218;;2725:77;2722:1;2715:88;2826:4;2823:1;2816:15;2854:4;2851:1;2844:15;2651:218;;2438:437;;;:::o;3580:184::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3769:128;3836:9;;;3857:11;;;3854:37;;;3871:18;;:::i;3902:125::-;3967:9;;;3988:10;;;3985:36;;;4001:18;;:::i"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CodeDAOToken.sol\":\"CodeDAOToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/CodeDAOToken.sol\":{\"keccak256\":\"0xec23401fc3ce05876b669927cc92c54a2eccfbca101927687568fa9da9082532\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6dc9150d83ce9c485e8d485fa2d5eaf510fb31c283f27c16111cfc8af0b5dd1\",\"dweb:/ipfs/QmaGeLfTEc1fc6BbK9tr5YXU4zLQpkrq3Q52ZseKZ22iVD\"]}},\"version\":1}"}},"contracts/MerkleDistributorV2.sol":{"MerkleDistributorV2":{"abi":[{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_stakingVault","type":"address"},{"internalType":"address","name":"_rootGuardian","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"autoStaked","type":"bool"},{"indexed":false,"internalType":"uint256","name":"epochId","type":"uint256"}],"name":"Claimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"epochId","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"totalAmount","type":"uint256"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"EpochSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"relayer","type":"address"}],"name":"GaslessClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldRelayer","type":"address"},{"indexed":true,"internalType":"address","name":"newRelayer","type":"address"}],"name":"RelayerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"MAX_GASLESS_CLAIMS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"canClaimGasless","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"cumulativeAmount","type":"uint256"},{"internalType":"bool","name":"autoStake","type":"bool"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"},{"internalType":"uint256[]","name":"cumulativeAmounts","type":"uint256[]"},{"internalType":"bool","name":"autoStake","type":"bool"},{"internalType":"bytes32[][]","name":"merkleProofs","type":"bytes32[][]"}],"name":"claimBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"cumulativeAmount","type":"uint256"},{"internalType":"bool","name":"autoStake","type":"bool"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"claimGasless","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"claimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentEpoch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyPause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"epochCaps","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"epochDescriptions","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"epochExpiry","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"epochRoots","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"epochTotals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"fund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"gaslessClaimCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"cumulativeAmount","type":"uint256"}],"name":"getClaimableAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"epochId","type":"uint256"}],"name":"getEpochInfo","outputs":[{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint256","name":"total","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasClaimedGasless","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"relayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rootGuardian","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"epochId","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"expiryDays","type":"uint256"}],"name":"setEpochRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newRelayer","type":"address"}],"name":"setRelayer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newGuardian","type":"address"}],"name":"setRootGuardian","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakingVault","outputs":[{"internalType":"contract StakingVault","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract CodeDAOToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_266":{"entryPoint":null,"id":266,"parameterSlots":0,"returnSlots":0},"@_366":{"entryPoint":null,"id":366,"parameterSlots":0,"returnSlots":0},"@_6126":{"entryPoint":null,"id":6126,"parameterSlots":3,"returnSlots":0},"@_msgSender_2056":{"entryPoint":null,"id":2056,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":124,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":206,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":235,"id":null,"parameterSlots":2,"returnSlots":3}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:576:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:26","statements":[{"nodeType":"YulAssignment","src":"84:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:26"},"nodeType":"YulFunctionCall","src":"93:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:26"}]},{"body":{"nodeType":"YulBlock","src":"169:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:26"},"nodeType":"YulFunctionCall","src":"171:12:26"},"nodeType":"YulExpressionStatement","src":"171:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:26"},"nodeType":"YulFunctionCall","src":"150:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:26"},"nodeType":"YulFunctionCall","src":"146:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:26"},"nodeType":"YulFunctionCall","src":"135:31:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:26"},"nodeType":"YulFunctionCall","src":"125:42:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:26"},"nodeType":"YulFunctionCall","src":"118:50:26"},"nodeType":"YulIf","src":"115:70:26"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:26","type":""}],"src":"14:177:26"},{"body":{"nodeType":"YulBlock","src":"311:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"357:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"366:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"369:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"359:6:26"},"nodeType":"YulFunctionCall","src":"359:12:26"},"nodeType":"YulExpressionStatement","src":"359:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"332:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:26"},"nodeType":"YulFunctionCall","src":"328:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"324:3:26"},"nodeType":"YulFunctionCall","src":"324:32:26"},"nodeType":"YulIf","src":"321:52:26"},{"nodeType":"YulAssignment","src":"382:50:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:26"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"392:29:26"},"nodeType":"YulFunctionCall","src":"392:40:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"382:6:26"}]},{"nodeType":"YulAssignment","src":"441:59:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:26"},"nodeType":"YulFunctionCall","src":"481:18:26"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"451:29:26"},"nodeType":"YulFunctionCall","src":"451:49:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"441:6:26"}]},{"nodeType":"YulAssignment","src":"509:59:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"564:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"549:3:26"},"nodeType":"YulFunctionCall","src":"549:18:26"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"519:29:26"},"nodeType":"YulFunctionCall","src":"519:49:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"509:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"261:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"272:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"284:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"292:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"300:6:26","type":""}],"src":"196:378:26"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b506040516200231a3803806200231a8339810160408190526200003491620000eb565b6000805460ff19169055600180556200004d336200007c565b6001600160a01b0392831660805290821660a052600c80546001600160a01b0319169190921617905562000135565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000e657600080fd5b919050565b6000806000606084860312156200010157600080fd5b6200010c84620000ce565b92506200011c60208501620000ce565b91506200012c60408501620000ce565b90509250925092565b60805160a051612195620001856000396000818161024b015261157a0152600081816104d40152818161073101528181610e5e015281816115a9015281816116ae01526117b801526121956000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80638406c0791161010f578063c85ef1d3116100a2578063cf22f11811610071578063cf22f118146104a0578063f2fde38b146104a9578063fb9e416d146104bc578063fc0c546a146104cf57600080fd5b8063c85ef1d314610447578063c884ef831461045a578063ca1d209d1461047a578063cf077ab01461048d57600080fd5b8063a3df5b63116100de578063a3df5b63146103eb578063a8110752146103f4578063af2a660a14610414578063b3743f601461043457600080fd5b80638406c0791461037a57806385ef751f1461039a5780638d73cffc146103ba5780638da5cb5b146103cd57600080fd5b806353320fc2116101875780636548e9bc116101565780636548e9bc14610336578063715018a61461034957806376671808146103515780638232e06e1461035a57600080fd5b806353320fc2146102e557806355deccc1146102f857806359735f89146103185780635c975abb1461032b57600080fd5b806334fc6fce116101c357806334fc6fce146102925780633f4ba83a146102c057806351858e27146102ca5780635312ea8e146102d257600080fd5b806308883ed5146101ea578063135022c21461022257806324e7964a14610246575b600080fd5b61020d6101f8366004611a05565b600a6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b610235610230366004611a27565b6104f6565b604051610219959493929190611aa4565b61026d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610219565b6102b26102a0366004611a27565b60056020526000908152604090205481565b604051908152602001610219565b6102c8610603565b005b6102c8610615565b6102c86102e0366004611a27565b6106ab565b6102c86102f3366004611adc565b610870565b6102b2610306366004611a27565b60046020526000908152604090205481565b6102c8610326366004611a05565b6109f5565b60005460ff1661020d565b6102c8610344366004611a05565b610a44565b6102c8610ac3565b6102b260035481565b6102b2610368366004611a27565b60076020526000908152604090205481565b60095461026d9073ffffffffffffffffffffffffffffffffffffffff1681565b6102b26103a8366004611a27565b600d6020526000908152604090205481565b61020d6103c8366004611a05565b610ad5565b60025473ffffffffffffffffffffffffffffffffffffffff1661026d565b6102b26103e881565b610407610402366004611a27565b610b14565b6040516102199190611b74565b600c5461026d9073ffffffffffffffffffffffffffffffffffffffff1681565b6102b2610442366004611b87565b610bae565b6102c8610455366004611c0b565b610bf7565b6102b2610468366004611a05565b60086020526000908152604090205481565b6102c8610488366004611a27565b610e23565b6102c861049b366004611c7c565b610ea2565b6102b2600b5481565b6102c86104b7366004611a05565b610ed1565b6102c86104ca366004611cd8565b610f6b565b61026d7f000000000000000000000000000000000000000000000000000000000000000081565b60008181526004602090815260408083205460058352818420546006845282852060079094529184205460035485946060948694859490939192918a11801590610564575060008a8152600760205260409020541580610564575060008a8152600760205260409020544211155b82805461057090611d87565b80601f016020809104026020016040519081016040528092919081815260200182805461059c90611d87565b80156105e95780601f106105be576101008083540402835291602001916105e9565b820191906000526020600020905b8154815290600101906020018083116105cc57829003601f168201915b505050505092509450945094509450945091939590929450565b61060b6110c6565b61061361112d565b565b600c5473ffffffffffffffffffffffffffffffffffffffff16331480610652575060025473ffffffffffffffffffffffffffffffffffffffff1633145b6106a35760405162461bcd60e51b815260206004820152600c60248201527f4e6f7420677561726469616e000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6106136111aa565b6106b36110c6565b600354600090815260076020526040902054158015906106e3575060035460009081526007602052604090205442115b61072f5760405162461bcd60e51b815260206004820152601160248201527f45706f6368206e6f742065787069726564000000000000000000000000000000604482015260640161069a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61078a60025473ffffffffffffffffffffffffffffffffffffffff1690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018490526044015b6020604051808303816000875af11580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108219190611dda565b61086d5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015260640161069a565b50565b6108786110c6565b600354610886906001611e26565b86146108d45760405162461bcd60e51b815260206004820152601260248201527f4d7573742062652073657175656e7469616c0000000000000000000000000000604482015260640161069a565b846109215760405162461bcd60e51b815260206004820152600c60248201527f496e76616c696420726f6f740000000000000000000000000000000000000000604482015260640161069a565b60008681526004602090815260408083208890556005825280832087905560069091529020610951838583611eb7565b50801561097f576109658162015180611fd1565b61096f9042611e26565b6000878152600760205260409020555b606461098c856096611fd1565b6109969190611fe8565b6000878152600d6020526040908190209190915560038790555186907f531f160e49b222fc485f64e252fb1cec5b91deab50c106488f71feeb397b36e5906109e5908890889088908890612023565b60405180910390a2505050505050565b6109fd6110c6565b600c80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610a4c6110c6565b6009805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f605ca4e43489fb38b91aa63dd9147cd3847957694b080b9285ec898b34269f0c90600090a35050565b610acb6110c6565b6106136000611205565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600a602052604081205460ff16158015610b0e57506103e8600b54105b92915050565b60066020526000908152604090208054610b2d90611d87565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5990611d87565b8015610ba65780601f10610b7b57610100808354040283529160200191610ba6565b820191906000526020600020905b815481529060010190602001808311610b8957829003601f168201915b505050505081565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260086020526040812054808311610be5576000915050610b0e565b610bef818461207e565b949350505050565b60095473ffffffffffffffffffffffffffffffffffffffff163314610c5e5760405162461bcd60e51b815260206004820152600b60248201527f4e6f742072656c61796572000000000000000000000000000000000000000000604482015260640161069a565b610c6661127c565b610c6e6112d5565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600a602052604090205460ff1615610ce45760405162461bcd60e51b815260206004820152601460248201527f416c72656164792075736564206761736c657373000000000000000000000000604482015260640161069a565b6103e8600b5410610d375760405162461bcd60e51b815260206004820152601660248201527f4761736c6573732071756f746120657863656564656400000000000000000000604482015260640161069a565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600a6020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600b805491610d9383612091565b91905055506000610da986868686866001611328565b90503373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f812a43286e5be0f69c00b0e4cc2dee191f955b205fcb1d5ad65d900a7cb091c683604051610e0a91815260200190565b60405180910390a350610e1c60018055565b5050505050565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016107de565b610eaa61127c565b610eb26112d5565b610ec133858585856000611328565b50610ecb60018055565b50505050565b610ed96110c6565b73ffffffffffffffffffffffffffffffffffffffff8116610f625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161069a565b61086d81611205565b610f7361127c565b610f7b6112d5565b8584148015610f8957508581145b610fd55760405162461bcd60e51b815260206004820152600e60248201527f4172726179206d69736d61746368000000000000000000000000000000000000604482015260640161069a565b60148611156110265760405162461bcd60e51b815260206004820152600f60248201527f426174636820746f6f206c617267650000000000000000000000000000000000604482015260640161069a565b60005b868110156110b3576110a0888883818110611046576110466120c9565b905060200201602081019061105b9190611a05565b87878481811061106d5761106d6120c9565b9050602002013586868686818110611087576110876120c9565b905060200281019061109991906120f8565b6000611328565b50806110ab81612091565b915050611029565b506110bd60018055565b50505050505050565b60025473ffffffffffffffffffffffffffffffffffffffff1633146106135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161069a565b6111356118db565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b6111b26112d5565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111803390565b6002805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002600154036112ce5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161069a565b6002600155565b60005460ff16156106135760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161069a565b600354600090815260076020526040812054156113a0576003546000908152600760205260409020544211156113a05760405162461bcd60e51b815260206004820152600d60248201527f45706f6368206578706972656400000000000000000000000000000000000000604482015260640161069a565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600860205260409020548087116114155760405162461bcd60e51b815260206004820152601060248201527f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000604482015260640161069a565b61141f818861207e565b6040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060608b901b166020820152603481018990529092506000906054016040516020818303038152906040528051906020012090506114c38686808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250600354815260046020526040902054925085915061192d9050565b61150f5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f6600000000000000000000000000000000000000604482015260640161069a565b73ffffffffffffffffffffffffffffffffffffffff89166000908152600860205260409020889055861561176c576040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156115f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116169190611dda565b6116625760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015260640161069a565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156116f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171b9190611dda565b6117675760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015260640161069a565b611871565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015611801573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118259190611dda565b6118715760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015260640161069a565b6003546040805185815289151560208201529081019190915273ffffffffffffffffffffffffffffffffffffffff8a16907ff0a271696089bb4e9e39c978b100f1892bfc98a87493ad2e459b06c417c6c5839060600160405180910390a250509695505050505050565b60005460ff166106135760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161069a565b600081815b85518110156119d157600086828151811061194f5761194f6120c9565b602002602001015190508083116119915760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506119be565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806119c981612091565b915050611932565b509092149392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611a0057600080fd5b919050565b600060208284031215611a1757600080fd5b611a20826119dc565b9392505050565b600060208284031215611a3957600080fd5b5035919050565b6000815180845260005b81811015611a6657602081850181015186830182015201611a4a565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b85815284602082015260a060408201526000611ac360a0830186611a40565b6060830194909452509015156080909101529392505050565b60008060008060008060a08789031215611af557600080fd5b863595506020870135945060408701359350606087013567ffffffffffffffff80821115611b2257600080fd5b818901915089601f830112611b3657600080fd5b813581811115611b4557600080fd5b8a6020828501011115611b5757600080fd5b602083019550809450505050608087013590509295509295509295565b602081526000611a206020830184611a40565b60008060408385031215611b9a57600080fd5b611ba3836119dc565b946020939093013593505050565b801515811461086d57600080fd5b60008083601f840112611bd157600080fd5b50813567ffffffffffffffff811115611be957600080fd5b6020830191508360208260051b8501011115611c0457600080fd5b9250929050565b600080600080600060808688031215611c2357600080fd5b611c2c866119dc565b9450602086013593506040860135611c4381611bb1565b9250606086013567ffffffffffffffff811115611c5f57600080fd5b611c6b88828901611bbf565b969995985093965092949392505050565b60008060008060608587031215611c9257600080fd5b843593506020850135611ca481611bb1565b9250604085013567ffffffffffffffff811115611cc057600080fd5b611ccc87828801611bbf565b95989497509550505050565b60008060008060008060006080888a031215611cf357600080fd5b873567ffffffffffffffff80821115611d0b57600080fd5b611d178b838c01611bbf565b909950975060208a0135915080821115611d3057600080fd5b611d3c8b838c01611bbf565b909750955060408a01359150611d5182611bb1565b90935060608901359080821115611d6757600080fd5b50611d748a828b01611bbf565b989b979a50959850939692959293505050565b600181811c90821680611d9b57607f821691505b602082108103611dd4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215611dec57600080fd5b8151611a2081611bb1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610b0e57610b0e611df7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f821115611eb257600081815260208120601f850160051c81016020861015611e8f5750805b601f850160051c820191505b81811015611eae57828155600101611e9b565b5050505b505050565b67ffffffffffffffff831115611ecf57611ecf611e39565b611ee383611edd8354611d87565b83611e68565b6000601f841160018114611f355760008515611eff5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610e1c565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b82811015611f845786850135825560209485019460019092019101611f64565b5086821015611fbf577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b8082028115828204841417610b0e57610b0e611df7565b60008261201e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b84815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019392505050565b81810381811115610b0e57610b0e611df7565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120c2576120c2611df7565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261212d57600080fd5b83018035915067ffffffffffffffff82111561214857600080fd5b6020019150600581901b3603821315611c0457600080fdfea265627a7a7231582077db7b016bf311d62f8c9bd2a0049de1399d67f938541aafb677111f6666c2c764736f6c63430008140032","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x231A CODESIZE SUB DUP1 PUSH3 0x231A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0xEB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SSTORE PUSH3 0x4D CALLER PUSH3 0x7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x80 MSTORE SWAP1 DUP3 AND PUSH1 0xA0 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH3 0x135 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x10C DUP5 PUSH3 0xCE JUMP JUMPDEST SWAP3 POP PUSH3 0x11C PUSH1 0x20 DUP6 ADD PUSH3 0xCE JUMP JUMPDEST SWAP2 POP PUSH3 0x12C PUSH1 0x40 DUP6 ADD PUSH3 0xCE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2195 PUSH3 0x185 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x24B ADD MSTORE PUSH2 0x157A ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4D4 ADD MSTORE DUP2 DUP2 PUSH2 0x731 ADD MSTORE DUP2 DUP2 PUSH2 0xE5E ADD MSTORE DUP2 DUP2 PUSH2 0x15A9 ADD MSTORE DUP2 DUP2 PUSH2 0x16AE ADD MSTORE PUSH2 0x17B8 ADD MSTORE PUSH2 0x2195 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8406C079 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC85EF1D3 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCF22F118 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF22F118 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xFB9E416D EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC85EF1D3 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xCF077AB0 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3DF5B63 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA3DF5B63 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xA8110752 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xAF2A660A EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xB3743F60 EQ PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8406C079 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x85EF751F EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x8D73CFFC EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x53320FC2 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x6548E9BC GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x6548E9BC EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x76671808 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x8232E06E EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x53320FC2 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x55DECCC1 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x59735F89 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34FC6FCE GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x34FC6FCE EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8883ED5 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x135022C2 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x24E7964A EQ PUSH2 0x246 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20D PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST PUSH2 0x26D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH2 0x615 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ADC JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x20D JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x26D SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x26D JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x407 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1B74 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x26D SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B87 JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x49B CALLDATASIZE PUSH1 0x4 PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x26D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x7 SWAP1 SWAP5 MSTORE SWAP2 DUP5 KECCAK256 SLOAD PUSH1 0x3 SLOAD DUP6 SWAP5 PUSH1 0x60 SWAP5 DUP7 SWAP5 DUP6 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 DUP11 GT DUP1 ISZERO SWAP1 PUSH2 0x564 JUMPI POP PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 PUSH2 0x564 JUMPI POP PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT ISZERO JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x570 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59C SWAP1 PUSH2 0x1D87 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x60B PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x613 PUSH2 0x112D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x652 JUMPI POP PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420677561726469616E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x613 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x6B3 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6E3 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT JUMPDEST PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45706F6368206E6F742065787069726564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x78A PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x878 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x886 SWAP1 PUSH1 0x1 PUSH2 0x1E26 JUMP JUMPDEST DUP7 EQ PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652073657175656E7469616C0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST DUP5 PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726F6F740000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x951 DUP4 DUP6 DUP4 PUSH2 0x1EB7 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x97F JUMPI PUSH2 0x965 DUP2 PUSH3 0x15180 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x96F SWAP1 TIMESTAMP PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x64 PUSH2 0x98C DUP6 PUSH1 0x96 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x996 SWAP2 SWAP1 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP8 SWAP1 SSTORE MLOAD DUP7 SWAP1 PUSH32 0x531F160E49B222FC485F64E252FB1CEC5B91DEAB50C106488F71FEEB397B36E5 SWAP1 PUSH2 0x9E5 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9FD PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA4C PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x605CA4E43489FB38B91AA63DD9147CD3847957694B080B9285EC898B34269F0C SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xACB PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x613 PUSH1 0x0 PUSH2 0x1205 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xB0E JUMPI POP PUSH2 0x3E8 PUSH1 0xB SLOAD LT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xB2D SWAP1 PUSH2 0x1D87 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB59 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBA6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB7B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB89 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 DUP4 GT PUSH2 0xBE5 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xBEF DUP2 DUP5 PUSH2 0x207E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xC5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742072656C61796572000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0xC66 PUSH2 0x127C JUMP JUMPDEST PUSH2 0xC6E PUSH2 0x12D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792075736564206761736C657373000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0xB SLOAD LT PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4761736C6573732071756F746120657863656564656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD SWAP2 PUSH2 0xD93 DUP4 PUSH2 0x2091 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH2 0xDA9 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1328 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x812A43286E5BE0F69C00B0E4CC2DEE191F955B205FCB1D5AD65D900A7CB091C6 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE0A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xE1C PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0xEAA PUSH2 0x127C JUMP JUMPDEST PUSH2 0xEB2 PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0xEC1 CALLER DUP6 DUP6 DUP6 DUP6 PUSH1 0x0 PUSH2 0x1328 JUMP JUMPDEST POP PUSH2 0xECB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xED9 PUSH2 0x10C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x86D DUP2 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0xF73 PUSH2 0x127C JUMP JUMPDEST PUSH2 0xF7B PUSH2 0x12D5 JUMP JUMPDEST DUP6 DUP5 EQ DUP1 ISZERO PUSH2 0xF89 JUMPI POP DUP6 DUP2 EQ JUMPDEST PUSH2 0xFD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4172726179206D69736D61746368000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x14 DUP7 GT ISZERO PUSH2 0x1026 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174636820746F6F206C617267650000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10A0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x1046 JUMPI PUSH2 0x1046 PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x105B SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x106D JUMPI PUSH2 0x106D PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP7 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x1087 JUMPI PUSH2 0x1087 PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1099 SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1328 JUMP JUMPDEST POP DUP1 PUSH2 0x10AB DUP2 PUSH2 0x2091 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1029 JUMP JUMPDEST POP PUSH2 0x10BD PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x1135 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x11B2 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1180 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x12CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45706F6368206578706972656400000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 DUP8 GT PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x141F DUP2 DUP9 PUSH2 0x207E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x60 DUP12 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x14C3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 POP DUP6 SWAP2 POP PUSH2 0x192D SWAP1 POP JUMP JUMPDEST PUSH2 0x150F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP9 SWAP1 SSTORE DUP7 ISZERO PUSH2 0x176C JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1616 SWAP2 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH2 0x1662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x171B SWAP2 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH2 0x1767 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1801 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1825 SWAP2 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH2 0x1871 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE DUP10 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND SWAP1 PUSH32 0xF0A271696089BB4E9E39C978B100F1892BFC98A87493AD2E459B06C417C6C583 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x19D1 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x194F JUMPI PUSH2 0x194F PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1991 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x19C9 DUP2 PUSH2 0x2091 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1932 JUMP JUMPDEST POP SWAP1 SWAP3 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1A00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A20 DUP3 PUSH2 0x19DC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A66 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1A4A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1AC3 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1A40 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1AF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1B57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 POP DUP1 SWAP5 POP POP POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A40 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA3 DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1BD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1C04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C2C DUP7 PUSH2 0x19DC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1C43 DUP2 PUSH2 0x1BB1 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6B DUP9 DUP3 DUP10 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1CA4 DUP2 PUSH2 0x1BB1 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CCC DUP8 DUP3 DUP9 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1CF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1D0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D17 DUP12 DUP4 DUP13 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D3C DUP12 DUP4 DUP13 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1D51 DUP3 PUSH2 0x1BB1 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1D67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D74 DUP11 DUP3 DUP12 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D9B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DD4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A20 DUP2 PUSH2 0x1BB1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0E PUSH2 0x1DF7 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1E8F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EAE JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E9B JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1ECF JUMPI PUSH2 0x1ECF PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1EE3 DUP4 PUSH2 0x1EDD DUP4 SLOAD PUSH2 0x1D87 JUMP JUMPDEST DUP4 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1F35 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x1EFF JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xE1C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F84 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1F64 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x1FBF JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xB0E JUMPI PUSH2 0xB0E PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x201E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND ADD ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0E PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x20C2 JUMPI PUSH2 0x20C2 PUSH2 0x1DF7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x212D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP PUSH1 0x5 DUP2 SWAP1 SHL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x1C04 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH24 0xDB7B016BF311D62F8C9BD2A0049DE1399D67F938541AAFB6 PUSH24 0x111F6666C2C764736F6C6343000814003200000000000000 ","sourceMap":"477:9540:24:-:0;;;1936:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1006:5:5;996:15;;-1:-1:-1;;996:15:5;;;-1:-1:-1;1821:22:6;;936:32:0;734:10:13;936:18:0;:32::i;:::-;-1:-1:-1;;;;;2050:28:24;;;;;2088:42;;;;;2140:12;:28;;-1:-1:-1;;;;;;2140:28:24;;;;;;;;477:9540;;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:177:26:-;93:13;;-1:-1:-1;;;;;135:31:26;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;477:9540:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MAX_GASLESS_CLAIMS_6030":{"entryPoint":null,"id":6030,"parameterSlots":0,"returnSlots":0},"@_checkOwner_54":{"entryPoint":4294,"id":54,"parameterSlots":0,"returnSlots":0},"@_claim_6498":{"entryPoint":4904,"id":6498,"parameterSlots":6,"returnSlots":1},"@_msgSender_2056":{"entryPoint":null,"id":2056,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_400":{"entryPoint":null,"id":400,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_392":{"entryPoint":4732,"id":392,"parameterSlots":0,"returnSlots":0},"@_pause_330":{"entryPoint":4522,"id":330,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_303":{"entryPoint":4821,"id":303,"parameterSlots":0,"returnSlots":0},"@_requirePaused_314":{"entryPoint":6363,"id":314,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":4613,"id":111,"parameterSlots":1,"returnSlots":0},"@_unpause_346":{"entryPoint":4397,"id":346,"parameterSlots":0,"returnSlots":0},"@_verifyProof_6769":{"entryPoint":6445,"id":6769,"parameterSlots":3,"returnSlots":1},"@canClaimGasless_6543":{"entryPoint":2773,"id":6543,"parameterSlots":1,"returnSlots":1},"@claimBatch_6376":{"entryPoint":3947,"id":6376,"parameterSlots":7,"returnSlots":0},"@claimGasless_6305":{"entryPoint":3063,"id":6305,"parameterSlots":5,"returnSlots":0},"@claim_6244":{"entryPoint":3746,"id":6244,"parameterSlots":4,"returnSlots":0},"@claimed_6019":{"entryPoint":null,"id":6019,"parameterSlots":0,"returnSlots":0},"@currentEpoch_5999":{"entryPoint":null,"id":5999,"parameterSlots":0,"returnSlots":0},"@emergencyPause_6601":{"entryPoint":1557,"id":6601,"parameterSlots":0,"returnSlots":0},"@emergencyWithdraw_6681":{"entryPoint":1707,"id":6681,"parameterSlots":1,"returnSlots":0},"@epochCaps_6036":{"entryPoint":null,"id":6036,"parameterSlots":0,"returnSlots":0},"@epochDescriptions_6011":{"entryPoint":2836,"id":6011,"parameterSlots":0,"returnSlots":0},"@epochExpiry_6015":{"entryPoint":null,"id":6015,"parameterSlots":0,"returnSlots":0},"@epochRoots_6003":{"entryPoint":null,"id":6003,"parameterSlots":0,"returnSlots":0},"@epochTotals_6007":{"entryPoint":null,"id":6007,"parameterSlots":0,"returnSlots":0},"@fund_6702":{"entryPoint":3619,"id":6702,"parameterSlots":1,"returnSlots":0},"@gaslessClaimCount_6027":{"entryPoint":null,"id":6027,"parameterSlots":0,"returnSlots":0},"@getClaimableAmount_6525":{"entryPoint":2990,"id":6525,"parameterSlots":2,"returnSlots":1},"@getEpochInfo_6591":{"entryPoint":1270,"id":6591,"parameterSlots":1,"returnSlots":5},"@hasClaimedGasless_6025":{"entryPoint":null,"id":6025,"parameterSlots":0,"returnSlots":0},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@paused_291":{"entryPoint":null,"id":291,"parameterSlots":0,"returnSlots":1},"@relayer_6021":{"entryPoint":null,"id":6021,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_68":{"entryPoint":2755,"id":68,"parameterSlots":0,"returnSlots":0},"@rootGuardian_6032":{"entryPoint":null,"id":6032,"parameterSlots":0,"returnSlots":0},"@setEpochRoot_6219":{"entryPoint":2160,"id":6219,"parameterSlots":6,"returnSlots":0},"@setRelayer_6633":{"entryPoint":2628,"id":6633,"parameterSlots":1,"returnSlots":0},"@setRootGuardian_6646":{"entryPoint":2549,"id":6646,"parameterSlots":1,"returnSlots":0},"@stakingVault_5997":{"entryPoint":null,"id":5997,"parameterSlots":0,"returnSlots":0},"@token_5994":{"entryPoint":null,"id":5994,"parameterSlots":0,"returnSlots":0},"@transferOwnership_91":{"entryPoint":3793,"id":91,"parameterSlots":1,"returnSlots":0},"@unpause_6611":{"entryPoint":1539,"id":6611,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":6620,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":7103,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":6661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7047,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_boolt_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":7179,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_boolt_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr":{"entryPoint":7384,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7642,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_boolt_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":7292,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_bytes32t_uint256t_string_calldata_ptrt_uint256":{"entryPoint":6876,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_string":{"entryPoint":6720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_string_calldata_ptr__to_t_bytes32_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8227,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_string_memory_ptr_t_uint256_t_bool__to_t_bytes32_t_uint256_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed":{"entryPoint":6820,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_contract$_CodeDAOToken_$5977__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_StakingVault_$7012__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7028,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_01223b358a83cf16c382ca2254ee151e0086fe9f0732d6475b41d28505fea433__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_088853b5bb250eafe849065e7d60f60015ee3fb957178d2aa308fb3738bede9e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ffd0806d1b574340f5b668d20cfcedab9830e74fed2b4e9907ad8f64504099f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_39588804c758f2e9908849f62c124c120e3572ec1154e4327059638e645163ac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_72f83046ddffaf81af5c1d224a38227024b385ad46ab7d308f45ea1aeb727eaf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7918a60beddf52ea68c65acda1fe95623829b3022188a2b54dd97ea7b4027146__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7c8cd47c74c6c9d7f2ff54a7132a5c333bcd308d8d791df9e3b2b4f9527061c9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e3437ea1fdc654989b0469b4bec9c9787bb5d78bb1f030e346172fec21872449__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ed0268729b1b972f40db9ec4fb593736302a056f098512ce1e1ce894f4595e46__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_efc84abca57e9d633bbdaac133490421501c7d188355f8cfc6bd88789251ec91__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool_t_uint256__to_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"access_calldata_tail_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":8440,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7718,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8168,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":8145,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8318,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":7784,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":7863,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7559,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":8337,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7671,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8393,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7737,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":7089,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20882:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:147:26","statements":[{"nodeType":"YulAssignment","src":"73:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:26"},"nodeType":"YulFunctionCall","src":"82:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:26"}]},{"body":{"nodeType":"YulBlock","src":"188:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"200:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"190:6:26"},"nodeType":"YulFunctionCall","src":"190:12:26"},"nodeType":"YulExpressionStatement","src":"190:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"142:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:26"},"nodeType":"YulFunctionCall","src":"131:54:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:26"},"nodeType":"YulFunctionCall","src":"121:65:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:26"},"nodeType":"YulFunctionCall","src":"114:73:26"},"nodeType":"YulIf","src":"111:93:26"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:26","type":""}],"src":"14:196:26"},{"body":{"nodeType":"YulBlock","src":"285:116:26","statements":[{"body":{"nodeType":"YulBlock","src":"331:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"340:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"343:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"333:6:26"},"nodeType":"YulFunctionCall","src":"333:12:26"},"nodeType":"YulExpressionStatement","src":"333:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"306:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"315:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"302:3:26"},"nodeType":"YulFunctionCall","src":"302:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"327:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"298:3:26"},"nodeType":"YulFunctionCall","src":"298:32:26"},"nodeType":"YulIf","src":"295:52:26"},{"nodeType":"YulAssignment","src":"356:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"385:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"366:18:26"},"nodeType":"YulFunctionCall","src":"366:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"356:6:26"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"251:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"262:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"274:6:26","type":""}],"src":"215:186:26"},{"body":{"nodeType":"YulBlock","src":"501:92:26","statements":[{"nodeType":"YulAssignment","src":"511:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"523:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"534:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"519:3:26"},"nodeType":"YulFunctionCall","src":"519:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"511:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:26"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"578:6:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"571:6:26"},"nodeType":"YulFunctionCall","src":"571:14:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"564:6:26"},"nodeType":"YulFunctionCall","src":"564:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"546:6:26"},"nodeType":"YulFunctionCall","src":"546:41:26"},"nodeType":"YulExpressionStatement","src":"546:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"470:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"481:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"492:4:26","type":""}],"src":"406:187:26"},{"body":{"nodeType":"YulBlock","src":"668:110:26","statements":[{"body":{"nodeType":"YulBlock","src":"714:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"723:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"726:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"716:6:26"},"nodeType":"YulFunctionCall","src":"716:12:26"},"nodeType":"YulExpressionStatement","src":"716:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"689:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"698:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"685:3:26"},"nodeType":"YulFunctionCall","src":"685:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"710:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"681:3:26"},"nodeType":"YulFunctionCall","src":"681:32:26"},"nodeType":"YulIf","src":"678:52:26"},{"nodeType":"YulAssignment","src":"739:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"762:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"749:12:26"},"nodeType":"YulFunctionCall","src":"749:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"739:6:26"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"634:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"645:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"657:6:26","type":""}],"src":"598:180:26"},{"body":{"nodeType":"YulBlock","src":"833:432:26","statements":[{"nodeType":"YulVariableDeclaration","src":"843:26:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"863:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"857:5:26"},"nodeType":"YulFunctionCall","src":"857:12:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"847:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"885:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"890:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"878:6:26"},"nodeType":"YulFunctionCall","src":"878:19:26"},"nodeType":"YulExpressionStatement","src":"878:19:26"},{"nodeType":"YulVariableDeclaration","src":"906:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"915:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"910:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:110:26","statements":[{"nodeType":"YulVariableDeclaration","src":"991:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1001:4:26","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"995:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1033:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1038:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1029:3:26"},"nodeType":"YulFunctionCall","src":"1029:11:26"},{"name":"_1","nodeType":"YulIdentifier","src":"1042:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:26"},"nodeType":"YulFunctionCall","src":"1025:20:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1061:5:26"},{"name":"i","nodeType":"YulIdentifier","src":"1068:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1057:3:26"},"nodeType":"YulFunctionCall","src":"1057:13:26"},{"name":"_1","nodeType":"YulIdentifier","src":"1072:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1053:3:26"},"nodeType":"YulFunctionCall","src":"1053:22:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1047:5:26"},"nodeType":"YulFunctionCall","src":"1047:29:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1018:6:26"},"nodeType":"YulFunctionCall","src":"1018:59:26"},"nodeType":"YulExpressionStatement","src":"1018:59:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"936:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"939:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"933:2:26"},"nodeType":"YulFunctionCall","src":"933:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"947:21:26","statements":[{"nodeType":"YulAssignment","src":"949:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"958:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"961:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"954:3:26"},"nodeType":"YulFunctionCall","src":"954:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"949:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"929:3:26","statements":[]},"src":"925:162:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1111:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1116:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1107:3:26"},"nodeType":"YulFunctionCall","src":"1107:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"1125:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1103:3:26"},"nodeType":"YulFunctionCall","src":"1103:27:26"},{"kind":"number","nodeType":"YulLiteral","src":"1132:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1096:6:26"},"nodeType":"YulFunctionCall","src":"1096:38:26"},"nodeType":"YulExpressionStatement","src":"1096:38:26"},{"nodeType":"YulAssignment","src":"1143:116:26","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1158:3:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1171:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1179:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1167:3:26"},"nodeType":"YulFunctionCall","src":"1167:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"1184:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1163:3:26"},"nodeType":"YulFunctionCall","src":"1163:88:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1154:3:26"},"nodeType":"YulFunctionCall","src":"1154:98:26"},{"kind":"number","nodeType":"YulLiteral","src":"1254:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1150:3:26"},"nodeType":"YulFunctionCall","src":"1150:109:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1143:3:26"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"810:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"817:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"825:3:26","type":""}],"src":"783:482:26"},{"body":{"nodeType":"YulBlock","src":"1497:290:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1514:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"1525:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1507:6:26"},"nodeType":"YulFunctionCall","src":"1507:25:26"},"nodeType":"YulExpressionStatement","src":"1507:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1552:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1563:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1548:3:26"},"nodeType":"YulFunctionCall","src":"1548:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"1568:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1541:6:26"},"nodeType":"YulFunctionCall","src":"1541:34:26"},"nodeType":"YulExpressionStatement","src":"1541:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1606:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1591:3:26"},"nodeType":"YulFunctionCall","src":"1591:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"1611:3:26","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1584:6:26"},"nodeType":"YulFunctionCall","src":"1584:31:26"},"nodeType":"YulExpressionStatement","src":"1584:31:26"},{"nodeType":"YulAssignment","src":"1624:54:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1650:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1662:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1673:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1658:3:26"},"nodeType":"YulFunctionCall","src":"1658:19:26"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1632:17:26"},"nodeType":"YulFunctionCall","src":"1632:46:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1624:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1698:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1709:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1694:3:26"},"nodeType":"YulFunctionCall","src":"1694:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"1714:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1687:6:26"},"nodeType":"YulFunctionCall","src":"1687:34:26"},"nodeType":"YulExpressionStatement","src":"1687:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1741:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1752:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1737:3:26"},"nodeType":"YulFunctionCall","src":"1737:19:26"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"1772:6:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1765:6:26"},"nodeType":"YulFunctionCall","src":"1765:14:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1758:6:26"},"nodeType":"YulFunctionCall","src":"1758:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1730:6:26"},"nodeType":"YulFunctionCall","src":"1730:51:26"},"nodeType":"YulExpressionStatement","src":"1730:51:26"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_string_memory_ptr_t_uint256_t_bool__to_t_bytes32_t_uint256_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1434:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1445:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1453:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1461:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1469:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1477:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1488:4:26","type":""}],"src":"1270:517:26"},{"body":{"nodeType":"YulBlock","src":"1914:125:26","statements":[{"nodeType":"YulAssignment","src":"1924:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1936:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1947:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1932:3:26"},"nodeType":"YulFunctionCall","src":"1932:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1924:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1966:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1981:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1989:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1977:3:26"},"nodeType":"YulFunctionCall","src":"1977:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1959:6:26"},"nodeType":"YulFunctionCall","src":"1959:74:26"},"nodeType":"YulExpressionStatement","src":"1959:74:26"}]},"name":"abi_encode_tuple_t_contract$_StakingVault_$7012__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1883:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1894:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1905:4:26","type":""}],"src":"1792:247:26"},{"body":{"nodeType":"YulBlock","src":"2145:76:26","statements":[{"nodeType":"YulAssignment","src":"2155:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2167:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2178:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2163:3:26"},"nodeType":"YulFunctionCall","src":"2163:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2155:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2197:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"2208:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2190:6:26"},"nodeType":"YulFunctionCall","src":"2190:25:26"},"nodeType":"YulExpressionStatement","src":"2190:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2114:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2125:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2136:4:26","type":""}],"src":"2044:177:26"},{"body":{"nodeType":"YulBlock","src":"2384:708:26","statements":[{"body":{"nodeType":"YulBlock","src":"2431:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2440:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2443:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2433:6:26"},"nodeType":"YulFunctionCall","src":"2433:12:26"},"nodeType":"YulExpressionStatement","src":"2433:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2405:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2414:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2401:3:26"},"nodeType":"YulFunctionCall","src":"2401:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2426:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2397:3:26"},"nodeType":"YulFunctionCall","src":"2397:33:26"},"nodeType":"YulIf","src":"2394:53:26"},{"nodeType":"YulAssignment","src":"2456:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2479:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2466:12:26"},"nodeType":"YulFunctionCall","src":"2466:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2456:6:26"}]},{"nodeType":"YulAssignment","src":"2498:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2525:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2536:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2521:3:26"},"nodeType":"YulFunctionCall","src":"2521:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2508:12:26"},"nodeType":"YulFunctionCall","src":"2508:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2498:6:26"}]},{"nodeType":"YulAssignment","src":"2549:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2576:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2587:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:26"},"nodeType":"YulFunctionCall","src":"2572:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2559:12:26"},"nodeType":"YulFunctionCall","src":"2559:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2549:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"2600:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2631:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2642:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2627:3:26"},"nodeType":"YulFunctionCall","src":"2627:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2614:12:26"},"nodeType":"YulFunctionCall","src":"2614:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2604:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2655:28:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2665:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2659:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2710:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2719:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2722:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2712:6:26"},"nodeType":"YulFunctionCall","src":"2712:12:26"},"nodeType":"YulExpressionStatement","src":"2712:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2698:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"2706:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2695:2:26"},"nodeType":"YulFunctionCall","src":"2695:14:26"},"nodeType":"YulIf","src":"2692:34:26"},{"nodeType":"YulVariableDeclaration","src":"2735:32:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2749:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2760:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2745:3:26"},"nodeType":"YulFunctionCall","src":"2745:22:26"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2739:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2815:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2824:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2827:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2817:6:26"},"nodeType":"YulFunctionCall","src":"2817:12:26"},"nodeType":"YulExpressionStatement","src":"2817:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2794:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"2798:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2790:3:26"},"nodeType":"YulFunctionCall","src":"2790:13:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2805:7:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2786:3:26"},"nodeType":"YulFunctionCall","src":"2786:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2779:6:26"},"nodeType":"YulFunctionCall","src":"2779:35:26"},"nodeType":"YulIf","src":"2776:55:26"},{"nodeType":"YulVariableDeclaration","src":"2840:30:26","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2867:2:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2854:12:26"},"nodeType":"YulFunctionCall","src":"2854:16:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2844:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2897:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2906:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2909:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2899:6:26"},"nodeType":"YulFunctionCall","src":"2899:12:26"},"nodeType":"YulExpressionStatement","src":"2899:12:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2885:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"2893:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2882:2:26"},"nodeType":"YulFunctionCall","src":"2882:14:26"},"nodeType":"YulIf","src":"2879:34:26"},{"body":{"nodeType":"YulBlock","src":"2963:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2972:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2975:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2965:6:26"},"nodeType":"YulFunctionCall","src":"2965:12:26"},"nodeType":"YulExpressionStatement","src":"2965:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2936:2:26"},{"name":"length","nodeType":"YulIdentifier","src":"2940:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2932:3:26"},"nodeType":"YulFunctionCall","src":"2932:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"2949:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2928:3:26"},"nodeType":"YulFunctionCall","src":"2928:24:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2954:7:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2925:2:26"},"nodeType":"YulFunctionCall","src":"2925:37:26"},"nodeType":"YulIf","src":"2922:57:26"},{"nodeType":"YulAssignment","src":"2988:21:26","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3002:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"3006:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2998:3:26"},"nodeType":"YulFunctionCall","src":"2998:11:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2988:6:26"}]},{"nodeType":"YulAssignment","src":"3018:16:26","value":{"name":"length","nodeType":"YulIdentifier","src":"3028:6:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3018:6:26"}]},{"nodeType":"YulAssignment","src":"3043:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3070:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3081:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3066:3:26"},"nodeType":"YulFunctionCall","src":"3066:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3053:12:26"},"nodeType":"YulFunctionCall","src":"3053:33:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3043:6:26"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32t_uint256t_string_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2310:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2321:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2333:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2341:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2349:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2357:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2365:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2373:6:26","type":""}],"src":"2226:866:26"},{"body":{"nodeType":"YulBlock","src":"3198:76:26","statements":[{"nodeType":"YulAssignment","src":"3208:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3220:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3231:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3216:3:26"},"nodeType":"YulFunctionCall","src":"3216:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3208:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3250:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"3261:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3243:6:26"},"nodeType":"YulFunctionCall","src":"3243:25:26"},"nodeType":"YulExpressionStatement","src":"3243:25:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3167:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3178:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3189:4:26","type":""}],"src":"3097:177:26"},{"body":{"nodeType":"YulBlock","src":"3380:125:26","statements":[{"nodeType":"YulAssignment","src":"3390:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3402:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3413:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3398:3:26"},"nodeType":"YulFunctionCall","src":"3398:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3390:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3432:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3447:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3455:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3443:3:26"},"nodeType":"YulFunctionCall","src":"3443:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3425:6:26"},"nodeType":"YulFunctionCall","src":"3425:74:26"},"nodeType":"YulExpressionStatement","src":"3425:74:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3349:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3360:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3371:4:26","type":""}],"src":"3279:226:26"},{"body":{"nodeType":"YulBlock","src":"3631:99:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3648:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3659:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3641:6:26"},"nodeType":"YulFunctionCall","src":"3641:21:26"},"nodeType":"YulExpressionStatement","src":"3641:21:26"},{"nodeType":"YulAssignment","src":"3671:53:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3697:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:26"},"nodeType":"YulFunctionCall","src":"3705:18:26"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3679:17:26"},"nodeType":"YulFunctionCall","src":"3679:45:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3671:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3600:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3611:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3622:4:26","type":""}],"src":"3510:220:26"},{"body":{"nodeType":"YulBlock","src":"3822:167:26","statements":[{"body":{"nodeType":"YulBlock","src":"3868:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3877:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3880:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3870:6:26"},"nodeType":"YulFunctionCall","src":"3870:12:26"},"nodeType":"YulExpressionStatement","src":"3870:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3843:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3852:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3839:3:26"},"nodeType":"YulFunctionCall","src":"3839:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3864:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3835:3:26"},"nodeType":"YulFunctionCall","src":"3835:32:26"},"nodeType":"YulIf","src":"3832:52:26"},{"nodeType":"YulAssignment","src":"3893:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3922:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3903:18:26"},"nodeType":"YulFunctionCall","src":"3903:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3893:6:26"}]},{"nodeType":"YulAssignment","src":"3941:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3968:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3979:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3964:3:26"},"nodeType":"YulFunctionCall","src":"3964:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3951:12:26"},"nodeType":"YulFunctionCall","src":"3951:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3941:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3780:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3791:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3803:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3811:6:26","type":""}],"src":"3735:254:26"},{"body":{"nodeType":"YulBlock","src":"4036:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"4090:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4099:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4102:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4092:6:26"},"nodeType":"YulFunctionCall","src":"4092:12:26"},"nodeType":"YulExpressionStatement","src":"4092:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4059:5:26"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4080:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4073:6:26"},"nodeType":"YulFunctionCall","src":"4073:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4066:6:26"},"nodeType":"YulFunctionCall","src":"4066:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4056:2:26"},"nodeType":"YulFunctionCall","src":"4056:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4049:6:26"},"nodeType":"YulFunctionCall","src":"4049:40:26"},"nodeType":"YulIf","src":"4046:60:26"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4025:5:26","type":""}],"src":"3994:118:26"},{"body":{"nodeType":"YulBlock","src":"4201:283:26","statements":[{"body":{"nodeType":"YulBlock","src":"4250:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4259:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4262:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4252:6:26"},"nodeType":"YulFunctionCall","src":"4252:12:26"},"nodeType":"YulExpressionStatement","src":"4252:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4229:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4237:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4225:3:26"},"nodeType":"YulFunctionCall","src":"4225:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"4244:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4221:3:26"},"nodeType":"YulFunctionCall","src":"4221:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4214:6:26"},"nodeType":"YulFunctionCall","src":"4214:35:26"},"nodeType":"YulIf","src":"4211:55:26"},{"nodeType":"YulAssignment","src":"4275:30:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4298:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4285:12:26"},"nodeType":"YulFunctionCall","src":"4285:20:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4275:6:26"}]},{"body":{"nodeType":"YulBlock","src":"4348:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4357:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4360:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4350:6:26"},"nodeType":"YulFunctionCall","src":"4350:12:26"},"nodeType":"YulExpressionStatement","src":"4350:12:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4320:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4328:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4317:2:26"},"nodeType":"YulFunctionCall","src":"4317:30:26"},"nodeType":"YulIf","src":"4314:50:26"},{"nodeType":"YulAssignment","src":"4373:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4389:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4397:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4385:3:26"},"nodeType":"YulFunctionCall","src":"4385:17:26"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4373:8:26"}]},{"body":{"nodeType":"YulBlock","src":"4462:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4471:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4474:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4464:6:26"},"nodeType":"YulFunctionCall","src":"4464:12:26"},"nodeType":"YulExpressionStatement","src":"4464:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4425:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:26","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"4440:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4433:3:26"},"nodeType":"YulFunctionCall","src":"4433:14:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4421:3:26"},"nodeType":"YulFunctionCall","src":"4421:27:26"},{"kind":"number","nodeType":"YulLiteral","src":"4450:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4417:3:26"},"nodeType":"YulFunctionCall","src":"4417:38:26"},{"name":"end","nodeType":"YulIdentifier","src":"4457:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4414:2:26"},"nodeType":"YulFunctionCall","src":"4414:47:26"},"nodeType":"YulIf","src":"4411:67:26"}]},"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4164:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4172:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"4180:8:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"4190:6:26","type":""}],"src":"4117:367:26"},{"body":{"nodeType":"YulBlock","src":"4642:556:26","statements":[{"body":{"nodeType":"YulBlock","src":"4689:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4698:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4701:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4691:6:26"},"nodeType":"YulFunctionCall","src":"4691:12:26"},"nodeType":"YulExpressionStatement","src":"4691:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4663:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4672:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4659:3:26"},"nodeType":"YulFunctionCall","src":"4659:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4684:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4655:3:26"},"nodeType":"YulFunctionCall","src":"4655:33:26"},"nodeType":"YulIf","src":"4652:53:26"},{"nodeType":"YulAssignment","src":"4714:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4743:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4724:18:26"},"nodeType":"YulFunctionCall","src":"4724:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4714:6:26"}]},{"nodeType":"YulAssignment","src":"4762:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4789:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4800:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4785:3:26"},"nodeType":"YulFunctionCall","src":"4785:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4772:12:26"},"nodeType":"YulFunctionCall","src":"4772:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4762:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"4813:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4843:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4854:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4839:3:26"},"nodeType":"YulFunctionCall","src":"4839:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4826:12:26"},"nodeType":"YulFunctionCall","src":"4826:32:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4817:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4889:5:26"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"4867:21:26"},"nodeType":"YulFunctionCall","src":"4867:28:26"},"nodeType":"YulExpressionStatement","src":"4867:28:26"},{"nodeType":"YulAssignment","src":"4904:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"4914:5:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4904:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"4928:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4959:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4970:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4955:3:26"},"nodeType":"YulFunctionCall","src":"4955:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4942:12:26"},"nodeType":"YulFunctionCall","src":"4942:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4932:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5017:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5026:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5029:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5019:6:26"},"nodeType":"YulFunctionCall","src":"5019:12:26"},"nodeType":"YulExpressionStatement","src":"5019:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4989:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4997:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4986:2:26"},"nodeType":"YulFunctionCall","src":"4986:30:26"},"nodeType":"YulIf","src":"4983:50:26"},{"nodeType":"YulVariableDeclaration","src":"5042:96:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5110:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5121:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5106:3:26"},"nodeType":"YulFunctionCall","src":"5106:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5130:7:26"}],"functionName":{"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulIdentifier","src":"5068:37:26"},"nodeType":"YulFunctionCall","src":"5068:70:26"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"5046:8:26","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"5056:8:26","type":""}]},{"nodeType":"YulAssignment","src":"5147:18:26","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"5157:8:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5147:6:26"}]},{"nodeType":"YulAssignment","src":"5174:18:26","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"5184:8:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5174:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_boolt_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4576:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4587:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4599:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4607:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4615:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4623:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4631:6:26","type":""}],"src":"4489:709:26"},{"body":{"nodeType":"YulBlock","src":"5339:498:26","statements":[{"body":{"nodeType":"YulBlock","src":"5385:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5394:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5397:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5387:6:26"},"nodeType":"YulFunctionCall","src":"5387:12:26"},"nodeType":"YulExpressionStatement","src":"5387:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5360:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5369:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5356:3:26"},"nodeType":"YulFunctionCall","src":"5356:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5381:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5352:3:26"},"nodeType":"YulFunctionCall","src":"5352:32:26"},"nodeType":"YulIf","src":"5349:52:26"},{"nodeType":"YulAssignment","src":"5410:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5433:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5420:12:26"},"nodeType":"YulFunctionCall","src":"5420:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5410:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"5452:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5482:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5493:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5478:3:26"},"nodeType":"YulFunctionCall","src":"5478:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5465:12:26"},"nodeType":"YulFunctionCall","src":"5465:32:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5456:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5528:5:26"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"5506:21:26"},"nodeType":"YulFunctionCall","src":"5506:28:26"},"nodeType":"YulExpressionStatement","src":"5506:28:26"},{"nodeType":"YulAssignment","src":"5543:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"5553:5:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5543:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"5567:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5598:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5609:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5594:3:26"},"nodeType":"YulFunctionCall","src":"5594:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5581:12:26"},"nodeType":"YulFunctionCall","src":"5581:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5571:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5656:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5665:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5668:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5658:6:26"},"nodeType":"YulFunctionCall","src":"5658:12:26"},"nodeType":"YulExpressionStatement","src":"5658:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5636:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5625:2:26"},"nodeType":"YulFunctionCall","src":"5625:30:26"},"nodeType":"YulIf","src":"5622:50:26"},{"nodeType":"YulVariableDeclaration","src":"5681:96:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5749:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5760:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5745:3:26"},"nodeType":"YulFunctionCall","src":"5745:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5769:7:26"}],"functionName":{"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulIdentifier","src":"5707:37:26"},"nodeType":"YulFunctionCall","src":"5707:70:26"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"5685:8:26","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"5695:8:26","type":""}]},{"nodeType":"YulAssignment","src":"5786:18:26","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"5796:8:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5786:6:26"}]},{"nodeType":"YulAssignment","src":"5813:18:26","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"5823:8:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5813:6:26"}]}]},"name":"abi_decode_tuple_t_uint256t_boolt_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5281:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5292:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5304:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5312:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5320:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5328:6:26","type":""}],"src":"5203:634:26"},{"body":{"nodeType":"YulBlock","src":"6092:995:26","statements":[{"body":{"nodeType":"YulBlock","src":"6139:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6148:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6151:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6141:6:26"},"nodeType":"YulFunctionCall","src":"6141:12:26"},"nodeType":"YulExpressionStatement","src":"6141:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6113:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6122:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6109:3:26"},"nodeType":"YulFunctionCall","src":"6109:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6134:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6105:3:26"},"nodeType":"YulFunctionCall","src":"6105:33:26"},"nodeType":"YulIf","src":"6102:53:26"},{"nodeType":"YulVariableDeclaration","src":"6164:37:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6191:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6178:12:26"},"nodeType":"YulFunctionCall","src":"6178:23:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6168:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6210:28:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6220:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6214:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6265:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6274:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6277:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6267:6:26"},"nodeType":"YulFunctionCall","src":"6267:12:26"},"nodeType":"YulExpressionStatement","src":"6267:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6253:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"6261:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6250:2:26"},"nodeType":"YulFunctionCall","src":"6250:14:26"},"nodeType":"YulIf","src":"6247:34:26"},{"nodeType":"YulVariableDeclaration","src":"6290:96:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6358:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6369:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6354:3:26"},"nodeType":"YulFunctionCall","src":"6354:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6378:7:26"}],"functionName":{"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulIdentifier","src":"6316:37:26"},"nodeType":"YulFunctionCall","src":"6316:70:26"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"6294:8:26","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"6304:8:26","type":""}]},{"nodeType":"YulAssignment","src":"6395:18:26","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"6405:8:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6395:6:26"}]},{"nodeType":"YulAssignment","src":"6422:18:26","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"6432:8:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6422:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"6449:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6493:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:26"},"nodeType":"YulFunctionCall","src":"6478:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6465:12:26"},"nodeType":"YulFunctionCall","src":"6465:32:26"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6453:8:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6526:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6535:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6538:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6528:6:26"},"nodeType":"YulFunctionCall","src":"6528:12:26"},"nodeType":"YulExpressionStatement","src":"6528:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6512:8:26"},{"name":"_1","nodeType":"YulIdentifier","src":"6522:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6509:2:26"},"nodeType":"YulFunctionCall","src":"6509:16:26"},"nodeType":"YulIf","src":"6506:36:26"},{"nodeType":"YulVariableDeclaration","src":"6551:98:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6619:9:26"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6630:8:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6615:3:26"},"nodeType":"YulFunctionCall","src":"6615:24:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6641:7:26"}],"functionName":{"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulIdentifier","src":"6577:37:26"},"nodeType":"YulFunctionCall","src":"6577:72:26"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"6555:8:26","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"6565:8:26","type":""}]},{"nodeType":"YulAssignment","src":"6658:18:26","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"6668:8:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6658:6:26"}]},{"nodeType":"YulAssignment","src":"6685:18:26","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"6695:8:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6685:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"6712:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6742:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6753:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6738:3:26"},"nodeType":"YulFunctionCall","src":"6738:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6725:12:26"},"nodeType":"YulFunctionCall","src":"6725:32:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6716:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6788:5:26"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"6766:21:26"},"nodeType":"YulFunctionCall","src":"6766:28:26"},"nodeType":"YulExpressionStatement","src":"6766:28:26"},{"nodeType":"YulAssignment","src":"6803:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"6813:5:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6803:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"6827:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6860:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6871:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6856:3:26"},"nodeType":"YulFunctionCall","src":"6856:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6843:12:26"},"nodeType":"YulFunctionCall","src":"6843:32:26"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"6831:8:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6904:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6913:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6916:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6906:6:26"},"nodeType":"YulFunctionCall","src":"6906:12:26"},"nodeType":"YulExpressionStatement","src":"6906:12:26"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"6890:8:26"},{"name":"_1","nodeType":"YulIdentifier","src":"6900:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6887:2:26"},"nodeType":"YulFunctionCall","src":"6887:16:26"},"nodeType":"YulIf","src":"6884:36:26"},{"nodeType":"YulVariableDeclaration","src":"6929:98:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6997:9:26"},{"name":"offset_2","nodeType":"YulIdentifier","src":"7008:8:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6993:3:26"},"nodeType":"YulFunctionCall","src":"6993:24:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7019:7:26"}],"functionName":{"name":"abi_decode_array_bytes32_dyn_calldata","nodeType":"YulIdentifier","src":"6955:37:26"},"nodeType":"YulFunctionCall","src":"6955:72:26"},"variables":[{"name":"value5_1","nodeType":"YulTypedName","src":"6933:8:26","type":""},{"name":"value6_1","nodeType":"YulTypedName","src":"6943:8:26","type":""}]},{"nodeType":"YulAssignment","src":"7036:18:26","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"7046:8:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7036:6:26"}]},{"nodeType":"YulAssignment","src":"7063:18:26","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"7073:8:26"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7063:6:26"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_boolt_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6010:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6021:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6033:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6041:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6049:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6057:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6065:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6073:6:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6081:6:26","type":""}],"src":"5842:1245:26"},{"body":{"nodeType":"YulBlock","src":"7214:125:26","statements":[{"nodeType":"YulAssignment","src":"7224:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7236:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7247:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7232:3:26"},"nodeType":"YulFunctionCall","src":"7232:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7224:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7266:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7281:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7289:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7277:3:26"},"nodeType":"YulFunctionCall","src":"7277:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7259:6:26"},"nodeType":"YulFunctionCall","src":"7259:74:26"},"nodeType":"YulExpressionStatement","src":"7259:74:26"}]},"name":"abi_encode_tuple_t_contract$_CodeDAOToken_$5977__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7183:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7194:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7205:4:26","type":""}],"src":"7092:247:26"},{"body":{"nodeType":"YulBlock","src":"7399:382:26","statements":[{"nodeType":"YulAssignment","src":"7409:22:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7423:1:26","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7426:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7419:3:26"},"nodeType":"YulFunctionCall","src":"7419:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7409:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"7440:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7470:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7476:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7466:3:26"},"nodeType":"YulFunctionCall","src":"7466:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7444:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7517:31:26","statements":[{"nodeType":"YulAssignment","src":"7519:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7533:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7541:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7529:3:26"},"nodeType":"YulFunctionCall","src":"7529:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7519:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7497:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7490:6:26"},"nodeType":"YulFunctionCall","src":"7490:26:26"},"nodeType":"YulIf","src":"7487:61:26"},{"body":{"nodeType":"YulBlock","src":"7607:168:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7628:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7631:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7621:6:26"},"nodeType":"YulFunctionCall","src":"7621:88:26"},"nodeType":"YulExpressionStatement","src":"7621:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7729:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7732:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7722:6:26"},"nodeType":"YulFunctionCall","src":"7722:15:26"},"nodeType":"YulExpressionStatement","src":"7722:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7757:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7760:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7750:6:26"},"nodeType":"YulFunctionCall","src":"7750:15:26"},"nodeType":"YulExpressionStatement","src":"7750:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7563:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7586:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7594:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7583:2:26"},"nodeType":"YulFunctionCall","src":"7583:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7560:2:26"},"nodeType":"YulFunctionCall","src":"7560:38:26"},"nodeType":"YulIf","src":"7557:218:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7379:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7388:6:26","type":""}],"src":"7344:437:26"},{"body":{"nodeType":"YulBlock","src":"7960:162:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7977:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7988:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7970:6:26"},"nodeType":"YulFunctionCall","src":"7970:21:26"},"nodeType":"YulExpressionStatement","src":"7970:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8011:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8022:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8007:3:26"},"nodeType":"YulFunctionCall","src":"8007:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"8027:2:26","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8000:6:26"},"nodeType":"YulFunctionCall","src":"8000:30:26"},"nodeType":"YulExpressionStatement","src":"8000:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8050:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8061:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8046:3:26"},"nodeType":"YulFunctionCall","src":"8046:18:26"},{"hexValue":"4e6f7420677561726469616e","kind":"string","nodeType":"YulLiteral","src":"8066:14:26","type":"","value":"Not guardian"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8039:6:26"},"nodeType":"YulFunctionCall","src":"8039:42:26"},"nodeType":"YulExpressionStatement","src":"8039:42:26"},{"nodeType":"YulAssignment","src":"8090:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8102:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8113:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8098:3:26"},"nodeType":"YulFunctionCall","src":"8098:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8090:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_088853b5bb250eafe849065e7d60f60015ee3fb957178d2aa308fb3738bede9e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7937:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7951:4:26","type":""}],"src":"7786:336:26"},{"body":{"nodeType":"YulBlock","src":"8301:167:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8318:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8329:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8311:6:26"},"nodeType":"YulFunctionCall","src":"8311:21:26"},"nodeType":"YulExpressionStatement","src":"8311:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8352:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8363:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8348:3:26"},"nodeType":"YulFunctionCall","src":"8348:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"8368:2:26","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8341:6:26"},"nodeType":"YulFunctionCall","src":"8341:30:26"},"nodeType":"YulExpressionStatement","src":"8341:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8391:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8402:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8387:3:26"},"nodeType":"YulFunctionCall","src":"8387:18:26"},{"hexValue":"45706f6368206e6f742065787069726564","kind":"string","nodeType":"YulLiteral","src":"8407:19:26","type":"","value":"Epoch not expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8380:6:26"},"nodeType":"YulFunctionCall","src":"8380:47:26"},"nodeType":"YulExpressionStatement","src":"8380:47:26"},{"nodeType":"YulAssignment","src":"8436:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8448:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8459:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8444:3:26"},"nodeType":"YulFunctionCall","src":"8444:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8436:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_7918a60beddf52ea68c65acda1fe95623829b3022188a2b54dd97ea7b4027146__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8278:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8292:4:26","type":""}],"src":"8127:341:26"},{"body":{"nodeType":"YulBlock","src":"8602:168:26","statements":[{"nodeType":"YulAssignment","src":"8612:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8624:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8635:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8620:3:26"},"nodeType":"YulFunctionCall","src":"8620:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8612:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8654:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8669:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8677:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8665:3:26"},"nodeType":"YulFunctionCall","src":"8665:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8647:6:26"},"nodeType":"YulFunctionCall","src":"8647:74:26"},"nodeType":"YulExpressionStatement","src":"8647:74:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8741:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8752:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8737:3:26"},"nodeType":"YulFunctionCall","src":"8737:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"8757:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8730:6:26"},"nodeType":"YulFunctionCall","src":"8730:34:26"},"nodeType":"YulExpressionStatement","src":"8730:34:26"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8563:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8574:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8582:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8593:4:26","type":""}],"src":"8473:297:26"},{"body":{"nodeType":"YulBlock","src":"8853:167:26","statements":[{"body":{"nodeType":"YulBlock","src":"8899:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8908:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8911:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8901:6:26"},"nodeType":"YulFunctionCall","src":"8901:12:26"},"nodeType":"YulExpressionStatement","src":"8901:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8874:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"8883:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8870:3:26"},"nodeType":"YulFunctionCall","src":"8870:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"8895:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8866:3:26"},"nodeType":"YulFunctionCall","src":"8866:32:26"},"nodeType":"YulIf","src":"8863:52:26"},{"nodeType":"YulVariableDeclaration","src":"8924:29:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8943:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8937:5:26"},"nodeType":"YulFunctionCall","src":"8937:16:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8928:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8984:5:26"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"8962:21:26"},"nodeType":"YulFunctionCall","src":"8962:28:26"},"nodeType":"YulExpressionStatement","src":"8962:28:26"},{"nodeType":"YulAssignment","src":"8999:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"9009:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8999:6:26"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8819:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8830:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8842:6:26","type":""}],"src":"8775:245:26"},{"body":{"nodeType":"YulBlock","src":"9199:165:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9216:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9227:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9209:6:26"},"nodeType":"YulFunctionCall","src":"9209:21:26"},"nodeType":"YulExpressionStatement","src":"9209:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9250:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9261:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9246:3:26"},"nodeType":"YulFunctionCall","src":"9246:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"9266:2:26","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9239:6:26"},"nodeType":"YulFunctionCall","src":"9239:30:26"},"nodeType":"YulExpressionStatement","src":"9239:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9289:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9300:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9285:3:26"},"nodeType":"YulFunctionCall","src":"9285:18:26"},{"hexValue":"5472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"9305:17:26","type":"","value":"Transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9278:6:26"},"nodeType":"YulFunctionCall","src":"9278:45:26"},"nodeType":"YulExpressionStatement","src":"9278:45:26"},{"nodeType":"YulAssignment","src":"9332:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9344:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9355:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9340:3:26"},"nodeType":"YulFunctionCall","src":"9340:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9332:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9176:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9190:4:26","type":""}],"src":"9025:339:26"},{"body":{"nodeType":"YulBlock","src":"9401:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9418:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9421:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9411:6:26"},"nodeType":"YulFunctionCall","src":"9411:88:26"},"nodeType":"YulExpressionStatement","src":"9411:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9515:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9518:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9508:6:26"},"nodeType":"YulFunctionCall","src":"9508:15:26"},"nodeType":"YulExpressionStatement","src":"9508:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9539:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9542:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9532:6:26"},"nodeType":"YulFunctionCall","src":"9532:15:26"},"nodeType":"YulExpressionStatement","src":"9532:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9369:184:26"},{"body":{"nodeType":"YulBlock","src":"9606:77:26","statements":[{"nodeType":"YulAssignment","src":"9616:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9627:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"9630:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9623:3:26"},"nodeType":"YulFunctionCall","src":"9623:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9616:3:26"}]},{"body":{"nodeType":"YulBlock","src":"9655:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9657:16:26"},"nodeType":"YulFunctionCall","src":"9657:18:26"},"nodeType":"YulExpressionStatement","src":"9657:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9647:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"9650:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9644:2:26"},"nodeType":"YulFunctionCall","src":"9644:10:26"},"nodeType":"YulIf","src":"9641:36:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9589:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"9592:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9598:3:26","type":""}],"src":"9558:125:26"},{"body":{"nodeType":"YulBlock","src":"9862:168:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9879:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9890:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9872:6:26"},"nodeType":"YulFunctionCall","src":"9872:21:26"},"nodeType":"YulExpressionStatement","src":"9872:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9913:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9924:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9909:3:26"},"nodeType":"YulFunctionCall","src":"9909:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"9929:2:26","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9902:6:26"},"nodeType":"YulFunctionCall","src":"9902:30:26"},"nodeType":"YulExpressionStatement","src":"9902:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9952:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9963:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9948:3:26"},"nodeType":"YulFunctionCall","src":"9948:18:26"},{"hexValue":"4d7573742062652073657175656e7469616c","kind":"string","nodeType":"YulLiteral","src":"9968:20:26","type":"","value":"Must be sequential"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9941:6:26"},"nodeType":"YulFunctionCall","src":"9941:48:26"},"nodeType":"YulExpressionStatement","src":"9941:48:26"},{"nodeType":"YulAssignment","src":"9998:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10010:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10021:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10006:3:26"},"nodeType":"YulFunctionCall","src":"10006:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9998:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_39588804c758f2e9908849f62c124c120e3572ec1154e4327059638e645163ac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9839:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9853:4:26","type":""}],"src":"9688:342:26"},{"body":{"nodeType":"YulBlock","src":"10209:162:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10226:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10237:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10219:6:26"},"nodeType":"YulFunctionCall","src":"10219:21:26"},"nodeType":"YulExpressionStatement","src":"10219:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10260:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10271:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10256:3:26"},"nodeType":"YulFunctionCall","src":"10256:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"10276:2:26","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10249:6:26"},"nodeType":"YulFunctionCall","src":"10249:30:26"},"nodeType":"YulExpressionStatement","src":"10249:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10299:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10310:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10295:3:26"},"nodeType":"YulFunctionCall","src":"10295:18:26"},{"hexValue":"496e76616c696420726f6f74","kind":"string","nodeType":"YulLiteral","src":"10315:14:26","type":"","value":"Invalid root"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10288:6:26"},"nodeType":"YulFunctionCall","src":"10288:42:26"},"nodeType":"YulExpressionStatement","src":"10288:42:26"},{"nodeType":"YulAssignment","src":"10339:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10351:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10362:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10347:3:26"},"nodeType":"YulFunctionCall","src":"10347:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10339:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_01223b358a83cf16c382ca2254ee151e0086fe9f0732d6475b41d28505fea433__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10186:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10200:4:26","type":""}],"src":"10035:336:26"},{"body":{"nodeType":"YulBlock","src":"10408:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10425:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10428:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10418:6:26"},"nodeType":"YulFunctionCall","src":"10418:88:26"},"nodeType":"YulExpressionStatement","src":"10418:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10522:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10525:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10515:6:26"},"nodeType":"YulFunctionCall","src":"10515:15:26"},"nodeType":"YulExpressionStatement","src":"10515:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10546:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10549:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10539:6:26"},"nodeType":"YulFunctionCall","src":"10539:15:26"},"nodeType":"YulExpressionStatement","src":"10539:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10376:184:26"},{"body":{"nodeType":"YulBlock","src":"10621:65:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10638:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"10641:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10631:6:26"},"nodeType":"YulFunctionCall","src":"10631:14:26"},"nodeType":"YulExpressionStatement","src":"10631:14:26"},{"nodeType":"YulAssignment","src":"10654:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10672:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10675:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10662:9:26"},"nodeType":"YulFunctionCall","src":"10662:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10654:4:26"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10604:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10612:4:26","type":""}],"src":"10565:121:26"},{"body":{"nodeType":"YulBlock","src":"10772:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"10805:425:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10819:11:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10829:1:26","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10823:2:26","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10850:2:26"},{"name":"array","nodeType":"YulIdentifier","src":"10854:5:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10843:6:26"},"nodeType":"YulFunctionCall","src":"10843:17:26"},"nodeType":"YulExpressionStatement","src":"10843:17:26"},{"nodeType":"YulVariableDeclaration","src":"10873:31:26","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"10895:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"10899:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10885:9:26"},"nodeType":"YulFunctionCall","src":"10885:19:26"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"10877:4:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10917:57:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10940:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10950:1:26","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"10957:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"10969:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10953:3:26"},"nodeType":"YulFunctionCall","src":"10953:19:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10946:3:26"},"nodeType":"YulFunctionCall","src":"10946:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10936:3:26"},"nodeType":"YulFunctionCall","src":"10936:38:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"10921:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"11011:23:26","statements":[{"nodeType":"YulAssignment","src":"11013:19:26","value":{"name":"data","nodeType":"YulIdentifier","src":"11028:4:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"11013:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"10993:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"11005:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10990:2:26"},"nodeType":"YulFunctionCall","src":"10990:20:26"},"nodeType":"YulIf","src":"10987:47:26"},{"nodeType":"YulVariableDeclaration","src":"11047:41:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11061:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11071:1:26","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11078:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11083:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11074:3:26"},"nodeType":"YulFunctionCall","src":"11074:12:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11067:3:26"},"nodeType":"YulFunctionCall","src":"11067:20:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11057:3:26"},"nodeType":"YulFunctionCall","src":"11057:31:26"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"11051:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11101:24:26","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"11114:11:26"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"11105:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"11199:21:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11208:5:26"},{"name":"_1","nodeType":"YulIdentifier","src":"11215:2:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11201:6:26"},"nodeType":"YulFunctionCall","src":"11201:17:26"},"nodeType":"YulExpressionStatement","src":"11201:17:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11149:5:26"},{"name":"_2","nodeType":"YulIdentifier","src":"11156:2:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11146:2:26"},"nodeType":"YulFunctionCall","src":"11146:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11160:26:26","statements":[{"nodeType":"YulAssignment","src":"11162:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11175:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"11182:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11171:3:26"},"nodeType":"YulFunctionCall","src":"11171:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"11162:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"11142:3:26","statements":[]},"src":"11138:82:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"10788:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"10793:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10785:2:26"},"nodeType":"YulFunctionCall","src":"10785:11:26"},"nodeType":"YulIf","src":"10782:448:26"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"10744:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"10751:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"10756:10:26","type":""}],"src":"10691:545:26"},{"body":{"nodeType":"YulBlock","src":"11326:141:26","statements":[{"nodeType":"YulAssignment","src":"11336:125:26","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11351:4:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11369:1:26","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"11372:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11365:3:26"},"nodeType":"YulFunctionCall","src":"11365:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"11378:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11361:3:26"},"nodeType":"YulFunctionCall","src":"11361:84:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11357:3:26"},"nodeType":"YulFunctionCall","src":"11357:89:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11347:3:26"},"nodeType":"YulFunctionCall","src":"11347:100:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11453:1:26","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"11456:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11449:3:26"},"nodeType":"YulFunctionCall","src":"11449:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11344:2:26"},"nodeType":"YulFunctionCall","src":"11344:117:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"11336:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11303:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"11309:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"11317:4:26","type":""}],"src":"11241:226:26"},{"body":{"nodeType":"YulBlock","src":"11575:1222:26","statements":[{"body":{"nodeType":"YulBlock","src":"11616:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11618:16:26"},"nodeType":"YulFunctionCall","src":"11618:18:26"},"nodeType":"YulExpressionStatement","src":"11618:18:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11591:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11596:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11588:2:26"},"nodeType":"YulFunctionCall","src":"11588:27:26"},"nodeType":"YulIf","src":"11585:53:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11691:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11729:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11723:5:26"},"nodeType":"YulFunctionCall","src":"11723:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"11697:25:26"},"nodeType":"YulFunctionCall","src":"11697:38:26"},{"name":"len","nodeType":"YulIdentifier","src":"11737:3:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"11647:43:26"},"nodeType":"YulFunctionCall","src":"11647:94:26"},"nodeType":"YulExpressionStatement","src":"11647:94:26"},{"nodeType":"YulVariableDeclaration","src":"11750:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11767:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"11754:9:26","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"11811:728:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11825:91:26","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11844:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11849:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11840:3:26"},"nodeType":"YulFunctionCall","src":"11840:76:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"11829:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11929:49:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11973:4:26"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"11943:29:26"},"nodeType":"YulFunctionCall","src":"11943:35:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"11933:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11991:18:26","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"12000:9:26"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11995:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"12079:172:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12104:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12129:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12134:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12125:3:26"},"nodeType":"YulFunctionCall","src":"12125:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12112:12:26"},"nodeType":"YulFunctionCall","src":"12112:33:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12097:6:26"},"nodeType":"YulFunctionCall","src":"12097:49:26"},"nodeType":"YulExpressionStatement","src":"12097:49:26"},{"nodeType":"YulAssignment","src":"12163:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12177:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:26"},"nodeType":"YulFunctionCall","src":"12173:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12163:6:26"}]},{"nodeType":"YulAssignment","src":"12204:33:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12221:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12232:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12217:3:26"},"nodeType":"YulFunctionCall","src":"12217:20:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12204:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12033:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"12036:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12030:2:26"},"nodeType":"YulFunctionCall","src":"12030:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12045:21:26","statements":[{"nodeType":"YulAssignment","src":"12047:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12056:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"12059:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12052:3:26"},"nodeType":"YulFunctionCall","src":"12052:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12047:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"12026:3:26","statements":[]},"src":"12022:229:26"},{"body":{"nodeType":"YulBlock","src":"12296:187:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12321:6:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12350:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12355:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12346:3:26"},"nodeType":"YulFunctionCall","src":"12346:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12333:12:26"},"nodeType":"YulFunctionCall","src":"12333:33:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12384:1:26","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"12387:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12380:3:26"},"nodeType":"YulFunctionCall","src":"12380:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"12393:3:26","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12376:3:26"},"nodeType":"YulFunctionCall","src":"12376:21:26"},{"kind":"number","nodeType":"YulLiteral","src":"12399:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12372:3:26"},"nodeType":"YulFunctionCall","src":"12372:94:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12368:3:26"},"nodeType":"YulFunctionCall","src":"12368:99:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12329:3:26"},"nodeType":"YulFunctionCall","src":"12329:139:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12314:6:26"},"nodeType":"YulFunctionCall","src":"12314:155:26"},"nodeType":"YulExpressionStatement","src":"12314:155:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12270:7:26"},{"name":"len","nodeType":"YulIdentifier","src":"12279:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12267:2:26"},"nodeType":"YulFunctionCall","src":"12267:16:26"},"nodeType":"YulIf","src":"12264:219:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12503:4:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12517:1:26","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"12520:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12513:3:26"},"nodeType":"YulFunctionCall","src":"12513:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"12526:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12509:3:26"},"nodeType":"YulFunctionCall","src":"12509:19:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12496:6:26"},"nodeType":"YulFunctionCall","src":"12496:33:26"},"nodeType":"YulExpressionStatement","src":"12496:33:26"}]},"nodeType":"YulCase","src":"11804:735:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11809:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12556:235:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12570:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"12583:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12574:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"12616:74:26","statements":[{"nodeType":"YulAssignment","src":"12634:42:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12660:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12665:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12656:3:26"},"nodeType":"YulFunctionCall","src":"12656:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12643:12:26"},"nodeType":"YulFunctionCall","src":"12643:33:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12634:5:26"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"12600:3:26"},"nodeType":"YulIf","src":"12597:93:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12710:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12769:5:26"},{"name":"len","nodeType":"YulIdentifier","src":"12776:3:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"12716:52:26"},"nodeType":"YulFunctionCall","src":"12716:64:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12703:6:26"},"nodeType":"YulFunctionCall","src":"12703:78:26"},"nodeType":"YulExpressionStatement","src":"12703:78:26"}]},"nodeType":"YulCase","src":"12548:243:26","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11787:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11792:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11784:2:26"},"nodeType":"YulFunctionCall","src":"11784:11:26"},"nodeType":"YulSwitch","src":"11777:1014:26"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11555:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"11561:3:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"11566:3:26","type":""}],"src":"11472:1325:26"},{"body":{"nodeType":"YulBlock","src":"12854:116:26","statements":[{"nodeType":"YulAssignment","src":"12864:20:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12879:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"12882:1:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12875:3:26"},"nodeType":"YulFunctionCall","src":"12875:9:26"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"12864:7:26"}]},{"body":{"nodeType":"YulBlock","src":"12942:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12944:16:26"},"nodeType":"YulFunctionCall","src":"12944:18:26"},"nodeType":"YulExpressionStatement","src":"12944:18:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12913:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12906:6:26"},"nodeType":"YulFunctionCall","src":"12906:9:26"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12920:1:26"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"12927:7:26"},{"name":"x","nodeType":"YulIdentifier","src":"12936:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12923:3:26"},"nodeType":"YulFunctionCall","src":"12923:15:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12917:2:26"},"nodeType":"YulFunctionCall","src":"12917:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"12903:2:26"},"nodeType":"YulFunctionCall","src":"12903:37:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12896:6:26"},"nodeType":"YulFunctionCall","src":"12896:45:26"},"nodeType":"YulIf","src":"12893:71:26"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12833:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"12836:1:26","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"12842:7:26","type":""}],"src":"12802:168:26"},{"body":{"nodeType":"YulBlock","src":"13021:228:26","statements":[{"body":{"nodeType":"YulBlock","src":"13052:168:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13073:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13076:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13066:6:26"},"nodeType":"YulFunctionCall","src":"13066:88:26"},"nodeType":"YulExpressionStatement","src":"13066:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13174:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13177:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13167:6:26"},"nodeType":"YulFunctionCall","src":"13167:15:26"},"nodeType":"YulExpressionStatement","src":"13167:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13202:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13205:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13195:6:26"},"nodeType":"YulFunctionCall","src":"13195:15:26"},"nodeType":"YulExpressionStatement","src":"13195:15:26"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13041:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13034:6:26"},"nodeType":"YulFunctionCall","src":"13034:9:26"},"nodeType":"YulIf","src":"13031:189:26"},{"nodeType":"YulAssignment","src":"13229:14:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13238:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"13241:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13234:3:26"},"nodeType":"YulFunctionCall","src":"13234:9:26"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"13229:1:26"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13006:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"13009:1:26","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"13015:1:26","type":""}],"src":"12975:274:26"},{"body":{"nodeType":"YulBlock","src":"13441:407:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13458:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"13469:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13451:6:26"},"nodeType":"YulFunctionCall","src":"13451:25:26"},"nodeType":"YulExpressionStatement","src":"13451:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13496:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13507:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13492:3:26"},"nodeType":"YulFunctionCall","src":"13492:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"13512:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13485:6:26"},"nodeType":"YulFunctionCall","src":"13485:34:26"},"nodeType":"YulExpressionStatement","src":"13485:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13539:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13550:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13535:3:26"},"nodeType":"YulFunctionCall","src":"13535:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"13555:2:26","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13528:6:26"},"nodeType":"YulFunctionCall","src":"13528:30:26"},"nodeType":"YulExpressionStatement","src":"13528:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13578:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13589:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13574:3:26"},"nodeType":"YulFunctionCall","src":"13574:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"13594:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13567:6:26"},"nodeType":"YulFunctionCall","src":"13567:34:26"},"nodeType":"YulExpressionStatement","src":"13567:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13627:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13638:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13623:3:26"},"nodeType":"YulFunctionCall","src":"13623:19:26"},{"name":"value2","nodeType":"YulIdentifier","src":"13644:6:26"},{"name":"value3","nodeType":"YulIdentifier","src":"13652:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13610:12:26"},"nodeType":"YulFunctionCall","src":"13610:49:26"},"nodeType":"YulExpressionStatement","src":"13610:49:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13683:9:26"},{"name":"value3","nodeType":"YulIdentifier","src":"13694:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13679:3:26"},"nodeType":"YulFunctionCall","src":"13679:22:26"},{"kind":"number","nodeType":"YulLiteral","src":"13703:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13675:3:26"},"nodeType":"YulFunctionCall","src":"13675:32:26"},{"kind":"number","nodeType":"YulLiteral","src":"13709:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13668:6:26"},"nodeType":"YulFunctionCall","src":"13668:43:26"},"nodeType":"YulExpressionStatement","src":"13668:43:26"},{"nodeType":"YulAssignment","src":"13720:122:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13736:9:26"},{"arguments":[{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13755:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13763:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13751:3:26"},"nodeType":"YulFunctionCall","src":"13751:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"13768:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13747:3:26"},"nodeType":"YulFunctionCall","src":"13747:88:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13732:3:26"},"nodeType":"YulFunctionCall","src":"13732:104:26"},{"kind":"number","nodeType":"YulLiteral","src":"13838:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13728:3:26"},"nodeType":"YulFunctionCall","src":"13728:114:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13720:4:26"}]}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_string_calldata_ptr__to_t_bytes32_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13386:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13397:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13405:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13413:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13421:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13432:4:26","type":""}],"src":"13254:594:26"},{"body":{"nodeType":"YulBlock","src":"13902:79:26","statements":[{"nodeType":"YulAssignment","src":"13912:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13924:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"13927:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13920:3:26"},"nodeType":"YulFunctionCall","src":"13920:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"13912:4:26"}]},{"body":{"nodeType":"YulBlock","src":"13953:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13955:16:26"},"nodeType":"YulFunctionCall","src":"13955:18:26"},"nodeType":"YulExpressionStatement","src":"13955:18:26"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"13944:4:26"},{"name":"x","nodeType":"YulIdentifier","src":"13950:1:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13941:2:26"},"nodeType":"YulFunctionCall","src":"13941:11:26"},"nodeType":"YulIf","src":"13938:37:26"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13884:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"13887:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"13893:4:26","type":""}],"src":"13853:128:26"},{"body":{"nodeType":"YulBlock","src":"14160:161:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14177:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14188:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14170:6:26"},"nodeType":"YulFunctionCall","src":"14170:21:26"},"nodeType":"YulExpressionStatement","src":"14170:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14211:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14222:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14207:3:26"},"nodeType":"YulFunctionCall","src":"14207:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"14227:2:26","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14200:6:26"},"nodeType":"YulFunctionCall","src":"14200:30:26"},"nodeType":"YulExpressionStatement","src":"14200:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14250:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14261:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14246:3:26"},"nodeType":"YulFunctionCall","src":"14246:18:26"},{"hexValue":"4e6f742072656c61796572","kind":"string","nodeType":"YulLiteral","src":"14266:13:26","type":"","value":"Not relayer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14239:6:26"},"nodeType":"YulFunctionCall","src":"14239:41:26"},"nodeType":"YulExpressionStatement","src":"14239:41:26"},{"nodeType":"YulAssignment","src":"14289:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14301:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14312:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14297:3:26"},"nodeType":"YulFunctionCall","src":"14297:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14289:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_ed0268729b1b972f40db9ec4fb593736302a056f098512ce1e1ce894f4595e46__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14137:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14151:4:26","type":""}],"src":"13986:335:26"},{"body":{"nodeType":"YulBlock","src":"14500:170:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14517:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14528:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14510:6:26"},"nodeType":"YulFunctionCall","src":"14510:21:26"},"nodeType":"YulExpressionStatement","src":"14510:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14551:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14562:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14547:3:26"},"nodeType":"YulFunctionCall","src":"14547:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"14567:2:26","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14540:6:26"},"nodeType":"YulFunctionCall","src":"14540:30:26"},"nodeType":"YulExpressionStatement","src":"14540:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14590:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14601:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14586:3:26"},"nodeType":"YulFunctionCall","src":"14586:18:26"},{"hexValue":"416c72656164792075736564206761736c657373","kind":"string","nodeType":"YulLiteral","src":"14606:22:26","type":"","value":"Already used gasless"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14579:6:26"},"nodeType":"YulFunctionCall","src":"14579:50:26"},"nodeType":"YulExpressionStatement","src":"14579:50:26"},{"nodeType":"YulAssignment","src":"14638:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14650:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14661:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14646:3:26"},"nodeType":"YulFunctionCall","src":"14646:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14638:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ffd0806d1b574340f5b668d20cfcedab9830e74fed2b4e9907ad8f64504099f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14477:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14491:4:26","type":""}],"src":"14326:344:26"},{"body":{"nodeType":"YulBlock","src":"14849:172:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14866:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14877:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14859:6:26"},"nodeType":"YulFunctionCall","src":"14859:21:26"},"nodeType":"YulExpressionStatement","src":"14859:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14900:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14911:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14896:3:26"},"nodeType":"YulFunctionCall","src":"14896:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"14916:2:26","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14889:6:26"},"nodeType":"YulFunctionCall","src":"14889:30:26"},"nodeType":"YulExpressionStatement","src":"14889:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14939:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14950:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14935:3:26"},"nodeType":"YulFunctionCall","src":"14935:18:26"},{"hexValue":"4761736c6573732071756f7461206578636565646564","kind":"string","nodeType":"YulLiteral","src":"14955:24:26","type":"","value":"Gasless quota exceeded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14928:6:26"},"nodeType":"YulFunctionCall","src":"14928:52:26"},"nodeType":"YulExpressionStatement","src":"14928:52:26"},{"nodeType":"YulAssignment","src":"14989:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15001:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15012:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14997:3:26"},"nodeType":"YulFunctionCall","src":"14997:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14989:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_7c8cd47c74c6c9d7f2ff54a7132a5c333bcd308d8d791df9e3b2b4f9527061c9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14826:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14840:4:26","type":""}],"src":"14675:346:26"},{"body":{"nodeType":"YulBlock","src":"15073:148:26","statements":[{"body":{"nodeType":"YulBlock","src":"15164:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15166:16:26"},"nodeType":"YulFunctionCall","src":"15166:18:26"},"nodeType":"YulExpressionStatement","src":"15166:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15089:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"15096:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15086:2:26"},"nodeType":"YulFunctionCall","src":"15086:77:26"},"nodeType":"YulIf","src":"15083:103:26"},{"nodeType":"YulAssignment","src":"15195:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15206:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"15213:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15202:3:26"},"nodeType":"YulFunctionCall","src":"15202:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15195:3:26"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15055:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"15065:3:26","type":""}],"src":"15026:195:26"},{"body":{"nodeType":"YulBlock","src":"15383:241:26","statements":[{"nodeType":"YulAssignment","src":"15393:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15405:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15416:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15401:3:26"},"nodeType":"YulFunctionCall","src":"15401:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15393:4:26"}]},{"nodeType":"YulVariableDeclaration","src":"15428:52:26","value":{"kind":"number","nodeType":"YulLiteral","src":"15438:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15432:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15496:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15511:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"15519:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15507:3:26"},"nodeType":"YulFunctionCall","src":"15507:15:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15489:6:26"},"nodeType":"YulFunctionCall","src":"15489:34:26"},"nodeType":"YulExpressionStatement","src":"15489:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15543:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15554:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15539:3:26"},"nodeType":"YulFunctionCall","src":"15539:18:26"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15563:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"15571:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15559:3:26"},"nodeType":"YulFunctionCall","src":"15559:15:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15532:6:26"},"nodeType":"YulFunctionCall","src":"15532:43:26"},"nodeType":"YulExpressionStatement","src":"15532:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15595:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15606:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15591:3:26"},"nodeType":"YulFunctionCall","src":"15591:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"15611:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15584:6:26"},"nodeType":"YulFunctionCall","src":"15584:34:26"},"nodeType":"YulExpressionStatement","src":"15584:34:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15336:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15347:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15355:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15363:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15374:4:26","type":""}],"src":"15226:398:26"},{"body":{"nodeType":"YulBlock","src":"15803:228:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15820:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15831:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15813:6:26"},"nodeType":"YulFunctionCall","src":"15813:21:26"},"nodeType":"YulExpressionStatement","src":"15813:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15854:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15865:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15850:3:26"},"nodeType":"YulFunctionCall","src":"15850:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"15870:2:26","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15843:6:26"},"nodeType":"YulFunctionCall","src":"15843:30:26"},"nodeType":"YulExpressionStatement","src":"15843:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15893:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15904:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15889:3:26"},"nodeType":"YulFunctionCall","src":"15889:18:26"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"15909:34:26","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15882:6:26"},"nodeType":"YulFunctionCall","src":"15882:62:26"},"nodeType":"YulExpressionStatement","src":"15882:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15964:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15975:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15960:3:26"},"nodeType":"YulFunctionCall","src":"15960:18:26"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"15980:8:26","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15953:6:26"},"nodeType":"YulFunctionCall","src":"15953:36:26"},"nodeType":"YulExpressionStatement","src":"15953:36:26"},{"nodeType":"YulAssignment","src":"15998:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16010:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16021:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16006:3:26"},"nodeType":"YulFunctionCall","src":"16006:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15998:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15780:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15794:4:26","type":""}],"src":"15629:402:26"},{"body":{"nodeType":"YulBlock","src":"16210:164:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16227:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16238:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16220:6:26"},"nodeType":"YulFunctionCall","src":"16220:21:26"},"nodeType":"YulExpressionStatement","src":"16220:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16261:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16272:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16257:3:26"},"nodeType":"YulFunctionCall","src":"16257:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"16277:2:26","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16250:6:26"},"nodeType":"YulFunctionCall","src":"16250:30:26"},"nodeType":"YulExpressionStatement","src":"16250:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16300:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16311:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16296:3:26"},"nodeType":"YulFunctionCall","src":"16296:18:26"},{"hexValue":"4172726179206d69736d61746368","kind":"string","nodeType":"YulLiteral","src":"16316:16:26","type":"","value":"Array mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16289:6:26"},"nodeType":"YulFunctionCall","src":"16289:44:26"},"nodeType":"YulExpressionStatement","src":"16289:44:26"},{"nodeType":"YulAssignment","src":"16342:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16354:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16365:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16350:3:26"},"nodeType":"YulFunctionCall","src":"16350:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16342:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_72f83046ddffaf81af5c1d224a38227024b385ad46ab7d308f45ea1aeb727eaf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16187:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16201:4:26","type":""}],"src":"16036:338:26"},{"body":{"nodeType":"YulBlock","src":"16553:165:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16570:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16581:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16563:6:26"},"nodeType":"YulFunctionCall","src":"16563:21:26"},"nodeType":"YulExpressionStatement","src":"16563:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16604:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16615:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16600:3:26"},"nodeType":"YulFunctionCall","src":"16600:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"16620:2:26","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16593:6:26"},"nodeType":"YulFunctionCall","src":"16593:30:26"},"nodeType":"YulExpressionStatement","src":"16593:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16643:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16654:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16639:3:26"},"nodeType":"YulFunctionCall","src":"16639:18:26"},{"hexValue":"426174636820746f6f206c61726765","kind":"string","nodeType":"YulLiteral","src":"16659:17:26","type":"","value":"Batch too large"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16632:6:26"},"nodeType":"YulFunctionCall","src":"16632:45:26"},"nodeType":"YulExpressionStatement","src":"16632:45:26"},{"nodeType":"YulAssignment","src":"16686:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16698:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16709:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16694:3:26"},"nodeType":"YulFunctionCall","src":"16694:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16686:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_efc84abca57e9d633bbdaac133490421501c7d188355f8cfc6bd88789251ec91__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16530:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16544:4:26","type":""}],"src":"16379:339:26"},{"body":{"nodeType":"YulBlock","src":"16755:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16772:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16775:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16765:6:26"},"nodeType":"YulFunctionCall","src":"16765:88:26"},"nodeType":"YulExpressionStatement","src":"16765:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16869:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16872:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16862:6:26"},"nodeType":"YulFunctionCall","src":"16862:15:26"},"nodeType":"YulExpressionStatement","src":"16862:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16893:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16896:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16886:6:26"},"nodeType":"YulFunctionCall","src":"16886:15:26"},"nodeType":"YulExpressionStatement","src":"16886:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"16723:184:26"},{"body":{"nodeType":"YulBlock","src":"17022:494:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17032:51:26","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"17071:11:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17058:12:26"},"nodeType":"YulFunctionCall","src":"17058:25:26"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"17036:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"17231:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17240:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17243:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17233:6:26"},"nodeType":"YulFunctionCall","src":"17233:12:26"},"nodeType":"YulExpressionStatement","src":"17233:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"17106:18:26"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"17134:12:26"},"nodeType":"YulFunctionCall","src":"17134:14:26"},{"name":"base_ref","nodeType":"YulIdentifier","src":"17150:8:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17130:3:26"},"nodeType":"YulFunctionCall","src":"17130:29:26"},{"kind":"number","nodeType":"YulLiteral","src":"17161:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17126:3:26"},"nodeType":"YulFunctionCall","src":"17126:102:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17102:3:26"},"nodeType":"YulFunctionCall","src":"17102:127:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17095:6:26"},"nodeType":"YulFunctionCall","src":"17095:135:26"},"nodeType":"YulIf","src":"17092:155:26"},{"nodeType":"YulVariableDeclaration","src":"17256:47:26","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"17274:8:26"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"17284:18:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17270:3:26"},"nodeType":"YulFunctionCall","src":"17270:33:26"},"variables":[{"name":"addr_1","nodeType":"YulTypedName","src":"17260:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17312:30:26","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"17335:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17322:12:26"},"nodeType":"YulFunctionCall","src":"17322:20:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17312:6:26"}]},{"body":{"nodeType":"YulBlock","src":"17385:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17394:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17397:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17387:6:26"},"nodeType":"YulFunctionCall","src":"17387:12:26"},"nodeType":"YulExpressionStatement","src":"17387:12:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17357:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17365:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17354:2:26"},"nodeType":"YulFunctionCall","src":"17354:30:26"},"nodeType":"YulIf","src":"17351:50:26"},{"nodeType":"YulAssignment","src":"17410:25:26","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"17422:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17430:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17418:3:26"},"nodeType":"YulFunctionCall","src":"17418:17:26"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"17410:4:26"}]},{"body":{"nodeType":"YulBlock","src":"17494:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17503:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17506:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17496:6:26"},"nodeType":"YulFunctionCall","src":"17496:12:26"},"nodeType":"YulExpressionStatement","src":"17496:12:26"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"17451:4:26"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"17461:12:26"},"nodeType":"YulFunctionCall","src":"17461:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17481:1:26","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"17484:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17477:3:26"},"nodeType":"YulFunctionCall","src":"17477:14:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17457:3:26"},"nodeType":"YulFunctionCall","src":"17457:35:26"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"17447:3:26"},"nodeType":"YulFunctionCall","src":"17447:46:26"},"nodeType":"YulIf","src":"17444:66:26"}]},"name":"access_calldata_tail_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"16979:8:26","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"16989:11:26","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"17005:4:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"17011:6:26","type":""}],"src":"16912:604:26"},{"body":{"nodeType":"YulBlock","src":"17695:182:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17712:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17723:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17705:6:26"},"nodeType":"YulFunctionCall","src":"17705:21:26"},"nodeType":"YulExpressionStatement","src":"17705:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17746:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17757:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17742:3:26"},"nodeType":"YulFunctionCall","src":"17742:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"17762:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17735:6:26"},"nodeType":"YulFunctionCall","src":"17735:30:26"},"nodeType":"YulExpressionStatement","src":"17735:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17785:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17796:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17781:3:26"},"nodeType":"YulFunctionCall","src":"17781:18:26"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"17801:34:26","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17774:6:26"},"nodeType":"YulFunctionCall","src":"17774:62:26"},"nodeType":"YulExpressionStatement","src":"17774:62:26"},{"nodeType":"YulAssignment","src":"17845:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17857:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17868:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17853:3:26"},"nodeType":"YulFunctionCall","src":"17853:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17845:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17672:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17686:4:26","type":""}],"src":"17521:356:26"},{"body":{"nodeType":"YulBlock","src":"18056:181:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18073:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18084:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18066:6:26"},"nodeType":"YulFunctionCall","src":"18066:21:26"},"nodeType":"YulExpressionStatement","src":"18066:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18107:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18118:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18103:3:26"},"nodeType":"YulFunctionCall","src":"18103:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"18123:2:26","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18096:6:26"},"nodeType":"YulFunctionCall","src":"18096:30:26"},"nodeType":"YulExpressionStatement","src":"18096:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18146:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18157:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18142:3:26"},"nodeType":"YulFunctionCall","src":"18142:18:26"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"18162:33:26","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18135:6:26"},"nodeType":"YulFunctionCall","src":"18135:61:26"},"nodeType":"YulExpressionStatement","src":"18135:61:26"},{"nodeType":"YulAssignment","src":"18205:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18217:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18228:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18213:3:26"},"nodeType":"YulFunctionCall","src":"18213:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18205:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18033:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18047:4:26","type":""}],"src":"17882:355:26"},{"body":{"nodeType":"YulBlock","src":"18416:166:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18433:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18444:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18426:6:26"},"nodeType":"YulFunctionCall","src":"18426:21:26"},"nodeType":"YulExpressionStatement","src":"18426:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18467:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18478:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18463:3:26"},"nodeType":"YulFunctionCall","src":"18463:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"18483:2:26","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18456:6:26"},"nodeType":"YulFunctionCall","src":"18456:30:26"},"nodeType":"YulExpressionStatement","src":"18456:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18506:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18517:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18502:3:26"},"nodeType":"YulFunctionCall","src":"18502:18:26"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"18522:18:26","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18495:6:26"},"nodeType":"YulFunctionCall","src":"18495:46:26"},"nodeType":"YulExpressionStatement","src":"18495:46:26"},{"nodeType":"YulAssignment","src":"18550:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18562:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18573:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18558:3:26"},"nodeType":"YulFunctionCall","src":"18558:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18550:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18393:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18407:4:26","type":""}],"src":"18242:340:26"},{"body":{"nodeType":"YulBlock","src":"18761:163:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18778:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18789:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18771:6:26"},"nodeType":"YulFunctionCall","src":"18771:21:26"},"nodeType":"YulExpressionStatement","src":"18771:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18812:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18823:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18808:3:26"},"nodeType":"YulFunctionCall","src":"18808:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"18828:2:26","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18801:6:26"},"nodeType":"YulFunctionCall","src":"18801:30:26"},"nodeType":"YulExpressionStatement","src":"18801:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18851:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18862:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18847:3:26"},"nodeType":"YulFunctionCall","src":"18847:18:26"},{"hexValue":"45706f63682065787069726564","kind":"string","nodeType":"YulLiteral","src":"18867:15:26","type":"","value":"Epoch expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18840:6:26"},"nodeType":"YulFunctionCall","src":"18840:43:26"},"nodeType":"YulExpressionStatement","src":"18840:43:26"},{"nodeType":"YulAssignment","src":"18892:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18904:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18915:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18900:3:26"},"nodeType":"YulFunctionCall","src":"18900:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18892:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_e3437ea1fdc654989b0469b4bec9c9787bb5d78bb1f030e346172fec21872449__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18738:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18752:4:26","type":""}],"src":"18587:337:26"},{"body":{"nodeType":"YulBlock","src":"19103:166:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19120:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19131:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19113:6:26"},"nodeType":"YulFunctionCall","src":"19113:21:26"},"nodeType":"YulExpressionStatement","src":"19113:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19154:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19165:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19150:3:26"},"nodeType":"YulFunctionCall","src":"19150:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"19170:2:26","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19143:6:26"},"nodeType":"YulFunctionCall","src":"19143:30:26"},"nodeType":"YulExpressionStatement","src":"19143:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19193:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19204:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19189:3:26"},"nodeType":"YulFunctionCall","src":"19189:18:26"},{"hexValue":"4e6f7468696e6720746f20636c61696d","kind":"string","nodeType":"YulLiteral","src":"19209:18:26","type":"","value":"Nothing to claim"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19182:6:26"},"nodeType":"YulFunctionCall","src":"19182:46:26"},"nodeType":"YulExpressionStatement","src":"19182:46:26"},{"nodeType":"YulAssignment","src":"19237:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19249:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19260:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19245:3:26"},"nodeType":"YulFunctionCall","src":"19245:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19237:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19080:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19094:4:26","type":""}],"src":"18929:340:26"},{"body":{"nodeType":"YulBlock","src":"19421:182:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19438:3:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19451:2:26","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"19455:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19447:3:26"},"nodeType":"YulFunctionCall","src":"19447:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"19464:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19443:3:26"},"nodeType":"YulFunctionCall","src":"19443:88:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19431:6:26"},"nodeType":"YulFunctionCall","src":"19431:101:26"},"nodeType":"YulExpressionStatement","src":"19431:101:26"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19552:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19557:2:26","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19548:3:26"},"nodeType":"YulFunctionCall","src":"19548:12:26"},{"name":"value1","nodeType":"YulIdentifier","src":"19562:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19541:6:26"},"nodeType":"YulFunctionCall","src":"19541:28:26"},"nodeType":"YulExpressionStatement","src":"19541:28:26"},{"nodeType":"YulAssignment","src":"19578:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19589:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19594:2:26","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19585:3:26"},"nodeType":"YulFunctionCall","src":"19585:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19578:3:26"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19389:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19394:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19402:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19413:3:26","type":""}],"src":"19274:329:26"},{"body":{"nodeType":"YulBlock","src":"19782:163:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19799:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19810:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19792:6:26"},"nodeType":"YulFunctionCall","src":"19792:21:26"},"nodeType":"YulExpressionStatement","src":"19792:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19833:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19844:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19829:3:26"},"nodeType":"YulFunctionCall","src":"19829:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"19849:2:26","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19822:6:26"},"nodeType":"YulFunctionCall","src":"19822:30:26"},"nodeType":"YulExpressionStatement","src":"19822:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19872:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19883:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19868:3:26"},"nodeType":"YulFunctionCall","src":"19868:18:26"},{"hexValue":"496e76616c69642070726f6f66","kind":"string","nodeType":"YulLiteral","src":"19888:15:26","type":"","value":"Invalid proof"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19861:6:26"},"nodeType":"YulFunctionCall","src":"19861:43:26"},"nodeType":"YulExpressionStatement","src":"19861:43:26"},{"nodeType":"YulAssignment","src":"19913:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19925:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19936:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19921:3:26"},"nodeType":"YulFunctionCall","src":"19921:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19913:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19759:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19773:4:26","type":""}],"src":"19608:337:26"},{"body":{"nodeType":"YulBlock","src":"20101:178:26","statements":[{"nodeType":"YulAssignment","src":"20111:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20123:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20134:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20119:3:26"},"nodeType":"YulFunctionCall","src":"20119:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20111:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20153:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"20164:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20146:6:26"},"nodeType":"YulFunctionCall","src":"20146:25:26"},"nodeType":"YulExpressionStatement","src":"20146:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20191:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20202:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20187:3:26"},"nodeType":"YulFunctionCall","src":"20187:18:26"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20221:6:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20214:6:26"},"nodeType":"YulFunctionCall","src":"20214:14:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20207:6:26"},"nodeType":"YulFunctionCall","src":"20207:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20180:6:26"},"nodeType":"YulFunctionCall","src":"20180:50:26"},"nodeType":"YulExpressionStatement","src":"20180:50:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20250:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20261:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20246:3:26"},"nodeType":"YulFunctionCall","src":"20246:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"20266:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20239:6:26"},"nodeType":"YulFunctionCall","src":"20239:34:26"},"nodeType":"YulExpressionStatement","src":"20239:34:26"}]},"name":"abi_encode_tuple_t_uint256_t_bool_t_uint256__to_t_uint256_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20054:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20065:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20073:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20081:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20092:4:26","type":""}],"src":"19950:329:26"},{"body":{"nodeType":"YulBlock","src":"20458:170:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20475:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20486:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20468:6:26"},"nodeType":"YulFunctionCall","src":"20468:21:26"},"nodeType":"YulExpressionStatement","src":"20468:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20509:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20520:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20505:3:26"},"nodeType":"YulFunctionCall","src":"20505:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"20525:2:26","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20498:6:26"},"nodeType":"YulFunctionCall","src":"20498:30:26"},"nodeType":"YulExpressionStatement","src":"20498:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20548:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20559:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20544:3:26"},"nodeType":"YulFunctionCall","src":"20544:18:26"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"20564:22:26","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20537:6:26"},"nodeType":"YulFunctionCall","src":"20537:50:26"},"nodeType":"YulExpressionStatement","src":"20537:50:26"},{"nodeType":"YulAssignment","src":"20596:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20608:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20619:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20604:3:26"},"nodeType":"YulFunctionCall","src":"20604:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20596:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20435:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20449:4:26","type":""}],"src":"20284:344:26"},{"body":{"nodeType":"YulBlock","src":"20780:100:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20797:3:26"},{"name":"value0","nodeType":"YulIdentifier","src":"20802:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20790:6:26"},"nodeType":"YulFunctionCall","src":"20790:19:26"},"nodeType":"YulExpressionStatement","src":"20790:19:26"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20829:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20834:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20825:3:26"},"nodeType":"YulFunctionCall","src":"20825:12:26"},{"name":"value1","nodeType":"YulIdentifier","src":"20839:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20818:6:26"},"nodeType":"YulFunctionCall","src":"20818:28:26"},"nodeType":"YulExpressionStatement","src":"20818:28:26"},{"nodeType":"YulAssignment","src":"20855:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20866:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20871:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20862:3:26"},"nodeType":"YulFunctionCall","src":"20862:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20855:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20748:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20753:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20761:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20772:3:26","type":""}],"src":"20633:247:26"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_string_memory_ptr_t_uint256_t_bool__to_t_bytes32_t_uint256_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_string(value2, add(headStart, 160))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_contract$_StakingVault_$7012__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_bytes32t_uint256t_string_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n        value5 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_array_bytes32_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_boolt_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_uint256t_boolt_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_boolt_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value4 := value\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_encode_tuple_t_contract$_CodeDAOToken_$5977__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_088853b5bb250eafe849065e7d60f60015ee3fb957178d2aa308fb3738bede9e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not guardian\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7918a60beddf52ea68c65acda1fe95623829b3022188a2b54dd97ea7b4027146__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Epoch not expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_39588804c758f2e9908849f62c124c120e3572ec1154e4327059638e645163ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Must be sequential\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_01223b358a83cf16c382ca2254ee151e0086fe9f0732d6475b41d28505fea433__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Invalid root\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_string_calldata_ptr__to_t_bytes32_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        mstore(add(headStart, 96), value3)\n        calldatacopy(add(headStart, 128), value2, value3)\n        mstore(add(add(headStart, value3), 128), 0)\n        tail := add(add(headStart, and(add(value3, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ed0268729b1b972f40db9ec4fb593736302a056f098512ce1e1ce894f4595e46__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Not relayer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0ffd0806d1b574340f5b668d20cfcedab9830e74fed2b4e9907ad8f64504099f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Already used gasless\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7c8cd47c74c6c9d7f2ff54a7132a5c333bcd308d8d791df9e3b2b4f9527061c9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Gasless quota exceeded\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_72f83046ddffaf81af5c1d224a38227024b385ad46ab7d308f45ea1aeb727eaf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Array mismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_efc84abca57e9d633bbdaac133490421501c7d188355f8cfc6bd88789251ec91__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Batch too large\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function access_calldata_tail_t_array$_t_bytes32_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e3437ea1fdc654989b0469b4bec9c9787bb5d78bb1f030e346172fec21872449__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Epoch expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Nothing to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid proof\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_bool_t_uint256__to_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"5994":[{"length":32,"start":1236},{"length":32,"start":1841},{"length":32,"start":3678},{"length":32,"start":5545},{"length":32,"start":5806},{"length":32,"start":6072}],"5997":[{"length":32,"start":587},{"length":32,"start":5498}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101e55760003560e01c80638406c0791161010f578063c85ef1d3116100a2578063cf22f11811610071578063cf22f118146104a0578063f2fde38b146104a9578063fb9e416d146104bc578063fc0c546a146104cf57600080fd5b8063c85ef1d314610447578063c884ef831461045a578063ca1d209d1461047a578063cf077ab01461048d57600080fd5b8063a3df5b63116100de578063a3df5b63146103eb578063a8110752146103f4578063af2a660a14610414578063b3743f601461043457600080fd5b80638406c0791461037a57806385ef751f1461039a5780638d73cffc146103ba5780638da5cb5b146103cd57600080fd5b806353320fc2116101875780636548e9bc116101565780636548e9bc14610336578063715018a61461034957806376671808146103515780638232e06e1461035a57600080fd5b806353320fc2146102e557806355deccc1146102f857806359735f89146103185780635c975abb1461032b57600080fd5b806334fc6fce116101c357806334fc6fce146102925780633f4ba83a146102c057806351858e27146102ca5780635312ea8e146102d257600080fd5b806308883ed5146101ea578063135022c21461022257806324e7964a14610246575b600080fd5b61020d6101f8366004611a05565b600a6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b610235610230366004611a27565b6104f6565b604051610219959493929190611aa4565b61026d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610219565b6102b26102a0366004611a27565b60056020526000908152604090205481565b604051908152602001610219565b6102c8610603565b005b6102c8610615565b6102c86102e0366004611a27565b6106ab565b6102c86102f3366004611adc565b610870565b6102b2610306366004611a27565b60046020526000908152604090205481565b6102c8610326366004611a05565b6109f5565b60005460ff1661020d565b6102c8610344366004611a05565b610a44565b6102c8610ac3565b6102b260035481565b6102b2610368366004611a27565b60076020526000908152604090205481565b60095461026d9073ffffffffffffffffffffffffffffffffffffffff1681565b6102b26103a8366004611a27565b600d6020526000908152604090205481565b61020d6103c8366004611a05565b610ad5565b60025473ffffffffffffffffffffffffffffffffffffffff1661026d565b6102b26103e881565b610407610402366004611a27565b610b14565b6040516102199190611b74565b600c5461026d9073ffffffffffffffffffffffffffffffffffffffff1681565b6102b2610442366004611b87565b610bae565b6102c8610455366004611c0b565b610bf7565b6102b2610468366004611a05565b60086020526000908152604090205481565b6102c8610488366004611a27565b610e23565b6102c861049b366004611c7c565b610ea2565b6102b2600b5481565b6102c86104b7366004611a05565b610ed1565b6102c86104ca366004611cd8565b610f6b565b61026d7f000000000000000000000000000000000000000000000000000000000000000081565b60008181526004602090815260408083205460058352818420546006845282852060079094529184205460035485946060948694859490939192918a11801590610564575060008a8152600760205260409020541580610564575060008a8152600760205260409020544211155b82805461057090611d87565b80601f016020809104026020016040519081016040528092919081815260200182805461059c90611d87565b80156105e95780601f106105be576101008083540402835291602001916105e9565b820191906000526020600020905b8154815290600101906020018083116105cc57829003601f168201915b505050505092509450945094509450945091939590929450565b61060b6110c6565b61061361112d565b565b600c5473ffffffffffffffffffffffffffffffffffffffff16331480610652575060025473ffffffffffffffffffffffffffffffffffffffff1633145b6106a35760405162461bcd60e51b815260206004820152600c60248201527f4e6f7420677561726469616e000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6106136111aa565b6106b36110c6565b600354600090815260076020526040902054158015906106e3575060035460009081526007602052604090205442115b61072f5760405162461bcd60e51b815260206004820152601160248201527f45706f6368206e6f742065787069726564000000000000000000000000000000604482015260640161069a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61078a60025473ffffffffffffffffffffffffffffffffffffffff1690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018490526044015b6020604051808303816000875af11580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108219190611dda565b61086d5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015260640161069a565b50565b6108786110c6565b600354610886906001611e26565b86146108d45760405162461bcd60e51b815260206004820152601260248201527f4d7573742062652073657175656e7469616c0000000000000000000000000000604482015260640161069a565b846109215760405162461bcd60e51b815260206004820152600c60248201527f496e76616c696420726f6f740000000000000000000000000000000000000000604482015260640161069a565b60008681526004602090815260408083208890556005825280832087905560069091529020610951838583611eb7565b50801561097f576109658162015180611fd1565b61096f9042611e26565b6000878152600760205260409020555b606461098c856096611fd1565b6109969190611fe8565b6000878152600d6020526040908190209190915560038790555186907f531f160e49b222fc485f64e252fb1cec5b91deab50c106488f71feeb397b36e5906109e5908890889088908890612023565b60405180910390a2505050505050565b6109fd6110c6565b600c80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610a4c6110c6565b6009805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f605ca4e43489fb38b91aa63dd9147cd3847957694b080b9285ec898b34269f0c90600090a35050565b610acb6110c6565b6106136000611205565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600a602052604081205460ff16158015610b0e57506103e8600b54105b92915050565b60066020526000908152604090208054610b2d90611d87565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5990611d87565b8015610ba65780601f10610b7b57610100808354040283529160200191610ba6565b820191906000526020600020905b815481529060010190602001808311610b8957829003601f168201915b505050505081565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260086020526040812054808311610be5576000915050610b0e565b610bef818461207e565b949350505050565b60095473ffffffffffffffffffffffffffffffffffffffff163314610c5e5760405162461bcd60e51b815260206004820152600b60248201527f4e6f742072656c61796572000000000000000000000000000000000000000000604482015260640161069a565b610c6661127c565b610c6e6112d5565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600a602052604090205460ff1615610ce45760405162461bcd60e51b815260206004820152601460248201527f416c72656164792075736564206761736c657373000000000000000000000000604482015260640161069a565b6103e8600b5410610d375760405162461bcd60e51b815260206004820152601660248201527f4761736c6573732071756f746120657863656564656400000000000000000000604482015260640161069a565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600a6020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055600b805491610d9383612091565b91905055506000610da986868686866001611328565b90503373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f812a43286e5be0f69c00b0e4cc2dee191f955b205fcb1d5ad65d900a7cb091c683604051610e0a91815260200190565b60405180910390a350610e1c60018055565b5050505050565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906323b872dd906064016107de565b610eaa61127c565b610eb26112d5565b610ec133858585856000611328565b50610ecb60018055565b50505050565b610ed96110c6565b73ffffffffffffffffffffffffffffffffffffffff8116610f625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161069a565b61086d81611205565b610f7361127c565b610f7b6112d5565b8584148015610f8957508581145b610fd55760405162461bcd60e51b815260206004820152600e60248201527f4172726179206d69736d61746368000000000000000000000000000000000000604482015260640161069a565b60148611156110265760405162461bcd60e51b815260206004820152600f60248201527f426174636820746f6f206c617267650000000000000000000000000000000000604482015260640161069a565b60005b868110156110b3576110a0888883818110611046576110466120c9565b905060200201602081019061105b9190611a05565b87878481811061106d5761106d6120c9565b9050602002013586868686818110611087576110876120c9565b905060200281019061109991906120f8565b6000611328565b50806110ab81612091565b915050611029565b506110bd60018055565b50505050505050565b60025473ffffffffffffffffffffffffffffffffffffffff1633146106135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161069a565b6111356118db565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b6111b26112d5565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111803390565b6002805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002600154036112ce5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161069a565b6002600155565b60005460ff16156106135760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161069a565b600354600090815260076020526040812054156113a0576003546000908152600760205260409020544211156113a05760405162461bcd60e51b815260206004820152600d60248201527f45706f6368206578706972656400000000000000000000000000000000000000604482015260640161069a565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600860205260409020548087116114155760405162461bcd60e51b815260206004820152601060248201527f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000604482015260640161069a565b61141f818861207e565b6040517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060608b901b166020820152603481018990529092506000906054016040516020818303038152906040528051906020012090506114c38686808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250600354815260046020526040902054925085915061192d9050565b61150f5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f6600000000000000000000000000000000000000604482015260640161069a565b73ffffffffffffffffffffffffffffffffffffffff89166000908152600860205260409020889055861561176c576040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156115f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116169190611dda565b6116625760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015260640161069a565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156116f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171b9190611dda565b6117675760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015260640161069a565b611871565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015611801573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118259190611dda565b6118715760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c65640000000000000000000000000000000000604482015260640161069a565b6003546040805185815289151560208201529081019190915273ffffffffffffffffffffffffffffffffffffffff8a16907ff0a271696089bb4e9e39c978b100f1892bfc98a87493ad2e459b06c417c6c5839060600160405180910390a250509695505050505050565b60005460ff166106135760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161069a565b600081815b85518110156119d157600086828151811061194f5761194f6120c9565b602002602001015190508083116119915760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506119be565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806119c981612091565b915050611932565b509092149392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611a0057600080fd5b919050565b600060208284031215611a1757600080fd5b611a20826119dc565b9392505050565b600060208284031215611a3957600080fd5b5035919050565b6000815180845260005b81811015611a6657602081850181015186830182015201611a4a565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b85815284602082015260a060408201526000611ac360a0830186611a40565b6060830194909452509015156080909101529392505050565b60008060008060008060a08789031215611af557600080fd5b863595506020870135945060408701359350606087013567ffffffffffffffff80821115611b2257600080fd5b818901915089601f830112611b3657600080fd5b813581811115611b4557600080fd5b8a6020828501011115611b5757600080fd5b602083019550809450505050608087013590509295509295509295565b602081526000611a206020830184611a40565b60008060408385031215611b9a57600080fd5b611ba3836119dc565b946020939093013593505050565b801515811461086d57600080fd5b60008083601f840112611bd157600080fd5b50813567ffffffffffffffff811115611be957600080fd5b6020830191508360208260051b8501011115611c0457600080fd5b9250929050565b600080600080600060808688031215611c2357600080fd5b611c2c866119dc565b9450602086013593506040860135611c4381611bb1565b9250606086013567ffffffffffffffff811115611c5f57600080fd5b611c6b88828901611bbf565b969995985093965092949392505050565b60008060008060608587031215611c9257600080fd5b843593506020850135611ca481611bb1565b9250604085013567ffffffffffffffff811115611cc057600080fd5b611ccc87828801611bbf565b95989497509550505050565b60008060008060008060006080888a031215611cf357600080fd5b873567ffffffffffffffff80821115611d0b57600080fd5b611d178b838c01611bbf565b909950975060208a0135915080821115611d3057600080fd5b611d3c8b838c01611bbf565b909750955060408a01359150611d5182611bb1565b90935060608901359080821115611d6757600080fd5b50611d748a828b01611bbf565b989b979a50959850939692959293505050565b600181811c90821680611d9b57607f821691505b602082108103611dd4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215611dec57600080fd5b8151611a2081611bb1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610b0e57610b0e611df7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f821115611eb257600081815260208120601f850160051c81016020861015611e8f5750805b601f850160051c820191505b81811015611eae57828155600101611e9b565b5050505b505050565b67ffffffffffffffff831115611ecf57611ecf611e39565b611ee383611edd8354611d87565b83611e68565b6000601f841160018114611f355760008515611eff5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b178355610e1c565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b82811015611f845786850135825560209485019460019092019101611f64565b5086821015611fbf577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555050505050565b8082028115828204841417610b0e57610b0e611df7565b60008261201e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b84815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019392505050565b81810381811115610b0e57610b0e611df7565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120c2576120c2611df7565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261212d57600080fd5b83018035915067ffffffffffffffff82111561214857600080fd5b6020019150600581901b3603821315611c0457600080fdfea265627a7a7231582077db7b016bf311d62f8c9bd2a0049de1399d67f938541aafb677111f6666c2c764736f6c63430008140032","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8406C079 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC85EF1D3 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCF22F118 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCF22F118 EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xFB9E416D EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC85EF1D3 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xC884EF83 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xCF077AB0 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3DF5B63 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA3DF5B63 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xA8110752 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xAF2A660A EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xB3743F60 EQ PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8406C079 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x85EF751F EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x8D73CFFC EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x53320FC2 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x6548E9BC GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x6548E9BC EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x76671808 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x8232E06E EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x53320FC2 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x55DECCC1 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x59735F89 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34FC6FCE GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x34FC6FCE EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8883ED5 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x135022C2 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x24E7964A EQ PUSH2 0x246 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20D PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA4 JUMP JUMPDEST PUSH2 0x26D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x219 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C8 PUSH2 0x615 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ADC JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x20D JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x368 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x26D SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x3A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x26D JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x407 PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1B74 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x26D SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B87 JUMP JUMPDEST PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A27 JUMP JUMPDEST PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x49B CALLDATASIZE PUSH1 0x4 PUSH2 0x1C7C JUMP JUMPDEST PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x26D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x6 DUP5 MSTORE DUP3 DUP6 KECCAK256 PUSH1 0x7 SWAP1 SWAP5 MSTORE SWAP2 DUP5 KECCAK256 SLOAD PUSH1 0x3 SLOAD DUP6 SWAP5 PUSH1 0x60 SWAP5 DUP7 SWAP5 DUP6 SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 DUP11 GT DUP1 ISZERO SWAP1 PUSH2 0x564 JUMPI POP PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 PUSH2 0x564 JUMPI POP PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT ISZERO JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x570 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59C SWAP1 PUSH2 0x1D87 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x60B PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x613 PUSH2 0x112D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xC SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x652 JUMPI POP PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420677561726469616E0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x613 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x6B3 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6E3 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT JUMPDEST PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45706F6368206E6F742065787069726564000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x78A PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x878 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x886 SWAP1 PUSH1 0x1 PUSH2 0x1E26 JUMP JUMPDEST DUP7 EQ PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652073657175656E7469616C0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST DUP5 PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726F6F740000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x951 DUP4 DUP6 DUP4 PUSH2 0x1EB7 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x97F JUMPI PUSH2 0x965 DUP2 PUSH3 0x15180 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x96F SWAP1 TIMESTAMP PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x64 PUSH2 0x98C DUP6 PUSH1 0x96 PUSH2 0x1FD1 JUMP JUMPDEST PUSH2 0x996 SWAP2 SWAP1 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP8 SWAP1 SSTORE MLOAD DUP7 SWAP1 PUSH32 0x531F160E49B222FC485F64E252FB1CEC5B91DEAB50C106488F71FEEB397B36E5 SWAP1 PUSH2 0x9E5 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9FD PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA4C PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x605CA4E43489FB38B91AA63DD9147CD3847957694B080B9285EC898B34269F0C SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xACB PUSH2 0x10C6 JUMP JUMPDEST PUSH2 0x613 PUSH1 0x0 PUSH2 0x1205 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xB0E JUMPI POP PUSH2 0x3E8 PUSH1 0xB SLOAD LT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xB2D SWAP1 PUSH2 0x1D87 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB59 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBA6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB7B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB89 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 DUP4 GT PUSH2 0xBE5 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xBEF DUP2 DUP5 PUSH2 0x207E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xC5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742072656C61796572000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0xC66 PUSH2 0x127C JUMP JUMPDEST PUSH2 0xC6E PUSH2 0x12D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C72656164792075736564206761736C657373000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0xB SLOAD LT PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4761736C6573732071756F746120657863656564656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD SWAP2 PUSH2 0xD93 DUP4 PUSH2 0x2091 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH2 0xDA9 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0x1328 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x812A43286E5BE0F69C00B0E4CC2DEE191F955B205FCB1D5AD65D900A7CB091C6 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE0A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xE1C PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0xEAA PUSH2 0x127C JUMP JUMPDEST PUSH2 0xEB2 PUSH2 0x12D5 JUMP JUMPDEST PUSH2 0xEC1 CALLER DUP6 DUP6 DUP6 DUP6 PUSH1 0x0 PUSH2 0x1328 JUMP JUMPDEST POP PUSH2 0xECB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xED9 PUSH2 0x10C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x86D DUP2 PUSH2 0x1205 JUMP JUMPDEST PUSH2 0xF73 PUSH2 0x127C JUMP JUMPDEST PUSH2 0xF7B PUSH2 0x12D5 JUMP JUMPDEST DUP6 DUP5 EQ DUP1 ISZERO PUSH2 0xF89 JUMPI POP DUP6 DUP2 EQ JUMPDEST PUSH2 0xFD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4172726179206D69736D61746368000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x14 DUP7 GT ISZERO PUSH2 0x1026 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174636820746F6F206C617267650000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10A0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x1046 JUMPI PUSH2 0x1046 PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x105B SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x106D JUMPI PUSH2 0x106D PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP7 DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x1087 JUMPI PUSH2 0x1087 PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1099 SWAP2 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1328 JUMP JUMPDEST POP DUP1 PUSH2 0x10AB DUP2 PUSH2 0x2091 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1029 JUMP JUMPDEST POP PUSH2 0x10BD PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x1135 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x11B2 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1180 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x12CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45706F6368206578706972656400000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 DUP8 GT PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x141F DUP2 DUP9 PUSH2 0x207E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x60 DUP12 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x14C3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 POP DUP6 SWAP2 POP PUSH2 0x192D SWAP1 POP JUMP JUMPDEST PUSH2 0x150F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP9 SWAP1 SSTORE DUP7 ISZERO PUSH2 0x176C JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1616 SWAP2 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH2 0x1662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x171B SWAP2 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH2 0x1767 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1801 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1825 SWAP2 SWAP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH2 0x1871 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE DUP10 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND SWAP1 PUSH32 0xF0A271696089BB4E9E39C978B100F1892BFC98A87493AD2E459B06C417C6C583 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x19D1 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x194F JUMPI PUSH2 0x194F PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1991 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x19C9 DUP2 PUSH2 0x2091 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1932 JUMP JUMPDEST POP SWAP1 SWAP3 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1A00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A20 DUP3 PUSH2 0x19DC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A66 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1A4A JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1AC3 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1A40 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1AF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP10 ADD SWAP2 POP DUP10 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP11 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1B57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP6 POP DUP1 SWAP5 POP POP POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A40 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA3 DUP4 PUSH2 0x19DC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1BD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1C04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C2C DUP7 PUSH2 0x19DC JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1C43 DUP2 PUSH2 0x1BB1 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6B DUP9 DUP3 DUP10 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1CA4 DUP2 PUSH2 0x1BB1 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CCC DUP8 DUP3 DUP9 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1CF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1D0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D17 DUP12 DUP4 DUP13 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D3C DUP12 DUP4 DUP13 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1D51 DUP3 PUSH2 0x1BB1 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x1D67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D74 DUP11 DUP3 DUP12 ADD PUSH2 0x1BBF JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1D9B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DD4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A20 DUP2 PUSH2 0x1BB1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0E PUSH2 0x1DF7 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1EB2 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1E8F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EAE JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E9B JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1ECF JUMPI PUSH2 0x1ECF PUSH2 0x1E39 JUMP JUMPDEST PUSH2 0x1EE3 DUP4 PUSH2 0x1EDD DUP4 SLOAD PUSH2 0x1D87 JUMP JUMPDEST DUP4 PUSH2 0x1E68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1F35 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x1EFF JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0xE1C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1F84 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1F64 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x1FBF JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xB0E JUMPI PUSH2 0xB0E PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x201E JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x80 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND ADD ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0E PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x20C2 JUMPI PUSH2 0x20C2 PUSH2 0x1DF7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x212D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP PUSH1 0x5 DUP2 SWAP1 SHL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x1C04 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH24 0xDB7B016BF311D62F8C9BD2A0049DE1399D67F938541AAFB6 PUSH24 0x111F6666C2C764736F6C6343000814003200000000000000 ","sourceMap":"477:9540:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;571:14:26;;564:22;546:41;;534:2;519:18;1052:49:24;;;;;;;;7635:481;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;591:42::-;;;;;;;;1989::26;1977:55;;;1959:74;;1947:2;1932:18;591:42:24;1792:247:26;750:46:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2190:25:26;;;2178:2;2163:18;750:46:24;2044:177:26;8318:65:24;;;:::i;:::-;;8185:73;;;:::i;8892:254::-;;;;;;:::i;:::-;;:::i;2567:838::-;;;;;;:::i;:::-;;:::i;699:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;8696:108;;;;;;:::i;:::-;;:::i;1615:84:5:-;1662:4;1685:7;;;1615:84;;8447:187:24;;;;;;:::i;:::-;;:::i;1824:101:0:-;;;:::i;666:27:24:-;;;;;;859:46;;;;;;:::i;:::-;;;;;;;;;;;;;;1024:22;;;;;;;;;1264:44;;;;;;:::i;:::-;;;;;;;;;;;;;;7414:158;;;;;;:::i;:::-;;:::i;1201:85:0:-;1273:6;;;;1201:85;;1145:49:24;;1190:4;1145:49;;802:51;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1231:27::-;;;;;;;;;7066:263;;;;;;:::i;:::-;;:::i;4193:591::-;;;;;;:::i;:::-;;:::i;950:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;9205:137;;;;;;:::i;:::-;;:::i;3679:239::-;;;;;;:::i;:::-;;:::i;1107:32::-;;;;;;2074:198:0;;;;;;:::i;:::-;;:::i;4867:547:24:-;;;;;;:::i;:::-;;:::i;550:35::-;;;;;7635:481;7706:12;7861:19;;;:10;:19;;;;;;;;;7894:11;:20;;;;;;7928:17;:26;;;;;7968:11;:20;;;;;;;8013:12;;7706;;7751:25;;7706:12;;;;7861:19;;7894:20;;7928:26;8002:23;;;;;:97;;-1:-1:-1;8030:20:24;;;;:11;:20;;;;;;:25;;:68;;-1:-1:-1;8078:20:24;;;;:11;:20;;;;;;8059:15;:39;;8030:68;7840:269;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7635:481;;;;;;;:::o;8318:65::-;1094:13:0;:11;:13::i;:::-;8366:10:24::1;:8;:10::i;:::-;8318:65::o:0;8185:73::-;1854:12;;;;1840:10;:26;;:51;;-1:-1:-1;1273:6:0;;;;1870:10:24;:21;1840:51;1832:76;;;;-1:-1:-1;;;1832:76:24;;7988:2:26;1832:76:24;;;7970:21:26;8027:2;8007:18;;;8000:30;8066:14;8046:18;;;8039:42;8098:18;;1832:76:24;;;;;;;;;8243:8:::1;:6;:8::i;8892:254::-:0;1094:13:0;:11;:13::i;:::-;8984:12:24::1;::::0;9000:1:::1;8972:25:::0;;;:11:::1;:25;::::0;;;;;:29;;;;:76:::1;;-1:-1:-1::0;9035:12:24::1;::::0;9023:25:::1;::::0;;;:11:::1;:25;::::0;;;;;9005:15:::1;:43;8972:76;8964:106;;;::::0;-1:-1:-1;;;8964:106:24;;8329:2:26;8964:106:24::1;::::0;::::1;8311:21:26::0;8368:2;8348:18;;;8341:30;8407:19;8387:18;;;8380:47;8444:18;;8964:106:24::1;8127:341:26::0;8964:106:24::1;9088:5;:14;;;9103:7;1273:6:0::0;;;;;1201:85;9103:7:24::1;9088:31;::::0;;::::1;::::0;;;;;;8677:42:26;8665:55;;;9088:31:24::1;::::0;::::1;8647:74:26::0;8737:18;;;8730:34;;;8620:18;;9088:31:24::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9080:59;;;::::0;-1:-1:-1;;;9080:59:24;;9227:2:26;9080:59:24::1;::::0;::::1;9209:21:26::0;9266:2;9246:18;;;9239:30;9305:17;9285:18;;;9278:45;9340:18;;9080:59:24::1;9025:339:26::0;9080:59:24::1;8892:254:::0;:::o;2567:838::-;1094:13:0;:11;:13::i;:::-;2790:12:24::1;::::0;:16:::1;::::0;2805:1:::1;2790:16;:::i;:::-;2779:7;:27;2771:58;;;::::0;-1:-1:-1;;;2771:58:24;;9890:2:26;2771:58:24::1;::::0;::::1;9872:21:26::0;9929:2;9909:18;;;9902:30;9968:20;9948:18;;;9941:48;10006:18;;2771:58:24::1;9688:342:26::0;2771:58:24::1;2847:10:::0;2839:49:::1;;;::::0;-1:-1:-1;;;2839:49:24;;10237:2:26;2839:49:24::1;::::0;::::1;10219:21:26::0;10276:2;10256:18;;;10249:30;10315:14;10295:18;;;10288:42;10347:18;;2839:49:24::1;10035:336:26::0;2839:49:24::1;2907:19;::::0;;;:10:::1;:19;::::0;;;;;;;:32;;;2949:11:::1;:20:::0;;;;;:34;;;2993:17:::1;:26:::0;;;;;:40:::1;3022:11:::0;;2993:26;:40:::1;:::i;:::-;-1:-1:-1::0;3056:14:24;;3052:107:::1;;3128:19;:10:::0;3141:6:::1;3128:19;:::i;:::-;3109:39;::::0;:15:::1;:39;:::i;:::-;3086:20;::::0;;;:11:::1;:20;::::0;;;;:62;3052:107:::1;3275:3;3254:17;:11:::0;3268:3:::1;3254:17;:::i;:::-;3253:25;;;;:::i;:::-;3232:18;::::0;;;:9:::1;:18;::::0;;;;;;:46;;;;3297:12:::1;:22:::0;;;3343:55;3242:7;;3343:55:::1;::::0;::::1;::::0;3361:10;;3373:11;;3386;;;;3343:55:::1;:::i;:::-;;;;;;;;2567:838:::0;;;;;;:::o;8696:108::-;1094:13:0;:11;:13::i;:::-;8771:12:24::1;:26:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;8696:108::o;8447:187::-;1094:13:0;:11;:13::i;:::-;8537:7:24::1;::::0;;::::1;8554:20:::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;8589:38:::1;::::0;8537:7;::::1;::::0;8554:20;8537:7;;8589:38:::1;::::0;8516:18:::1;::::0;8589:38:::1;8506:128;8447:187:::0;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;7414:158:24:-:0;7500:23;;;7476:4;7500:23;;;:17;:23;;;;;;;;7499:24;:66;;;;;1190:4;7527:17;;:38;7499:66;7492:73;7414:158;-1:-1:-1;;7414:158:24:o;802:51::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7066:263::-;7201:13;;;7157:7;7201:13;;;:7;:13;;;;;;7228:34;;;7224:48;;7271:1;7264:8;;;;;7224:48;7289:33;7308:14;7289:16;:33;:::i;:::-;7282:40;7066:263;-1:-1:-1;;;;7066:263:24:o;4193:591::-;1747:7;;;;1733:10;:21;1725:45;;;;-1:-1:-1;;;1725:45:24;;14188:2:26;1725:45:24;;;14170:21:26;14227:2;14207:18;;;14200:30;14266:13;14246:18;;;14239:41;14297:18;;1725:45:24;13986:335:26;1725:45:24;2261:21:6::1;:19;:21::i;:::-;1239:19:5::2;:17;:19::i;:::-;4408:23:24::3;::::0;::::3;;::::0;;;:17:::3;:23;::::0;;;;;::::3;;4407:24;4399:57;;;::::0;-1:-1:-1;;;4399:57:24;;14528:2:26;4399:57:24::3;::::0;::::3;14510:21:26::0;14567:2;14547:18;;;14540:30;14606:22;14586:18;;;14579:50;14646:18;;4399:57:24::3;14326:344:26::0;4399:57:24::3;1190:4;4474:17;;:38;4466:73;;;::::0;-1:-1:-1;;;4466:73:24;;14877:2:26;4466:73:24::3;::::0;::::3;14859:21:26::0;14916:2;14896:18;;;14889:30;14955:24;14935:18;;;14928:52;14997:18;;4466:73:24::3;14675:346:26::0;4466:73:24::3;4558:23;::::0;::::3;;::::0;;;:17:::3;:23;::::0;;;;:30;;;::::3;4584:4;4558:30;::::0;;4598:17:::3;:19:::0;;;::::3;::::0;::::3;:::i;:::-;;;;;;4636:14;4653:60;4660:4;4666:16;4684:9;4695:11;;4708:4;4653:6;:60::i;:::-;4636:77;;4766:10;4737:40;;4752:4;4737:40;;;4758:6;4737:40;;;;2190:25:26::0;;2178:2;2163:18;;2044:177;4737:40:24::3;;;;;;;;4389:395;2303:20:6::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;4193:591:24::0;;;;;:::o;9205:137::-;9262:53;;;;;9281:10;9262:53;;;15489:34:26;9301:4:24;15539:18:26;;;15532:43;15591:18;;;15584:34;;;9262:5:24;:18;;;;;15401::26;;9262:53:24;15226:398:26;3679:239:24;2261:21:6;:19;:21::i;:::-;1239:19:5::1;:17;:19::i;:::-;3844:67:24::2;3851:10;3863:16;3881:9;3892:11;;3905:5;3844:6;:67::i;:::-;;2303:20:6::0;1716:1;2809:22;;2629:209;2303:20;3679:239:24;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2162:22:::1;::::0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;15831:2:26;2154:73:0::1;::::0;::::1;15813:21:26::0;15870:2;15850:18;;;15843:30;15909:34;15889:18;;;15882:62;15980:8;15960:18;;;15953:36;16006:19;;2154:73:0::1;15629:402:26::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;4867:547:24:-:0;2261:21:6;:19;:21::i;:::-;1239:19:5::1;:17;:19::i;:::-;5094:40:24::0;;::::2;:79:::0;::::2;;;-1:-1:-1::0;5138:35:24;;::::2;5094:79;5086:106;;;::::0;-1:-1:-1;;;5086:106:24;;16238:2:26;5086:106:24::2;::::0;::::2;16220:21:26::0;16277:2;16257:18;;;16250:30;16316:16;16296:18;;;16289:44;16350:18;;5086:106:24::2;16036:338:26::0;5086:106:24::2;5226:2;5210:18:::0;::::2;;5202:46;;;::::0;-1:-1:-1;;;5202:46:24;;16581:2:26;5202:46:24::2;::::0;::::2;16563:21:26::0;16620:2;16600:18;;;16593:30;16659:17;16639:18;;;16632:45;16694:18;;5202:46:24::2;16379:339:26::0;5202:46:24::2;5272:9;5267:141;5287:16:::0;;::::2;5267:141;;;5324:73;5331:5;;5337:1;5331:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5341:17;;5359:1;5341:20;;;;;;;:::i;:::-;;;;;;;5363:9;5374:12;;5387:1;5374:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;5391:5;5324:6;:73::i;:::-;-1:-1:-1::0;5305:3:24;::::2;::::0;::::2;:::i;:::-;;;;5267:141;;;;2303:20:6::0;1716:1;2809:22;;2629:209;2303:20;4867:547:24;;;;;;;:::o;1359:130:0:-;1273:6;;1422:23;1273:6;734:10:13;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;17723:2:26;1414:68:0;;;17705:21:26;;;17742:18;;;17735:30;17801:34;17781:18;;;17774:62;17853:18;;1414:68:0;17521:356:26;2433:117:5;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;;::::1;::::0;;2521:22:::1;734:10:13::0;2530:12:5::1;2521:22;::::0;1989:42:26;1977:55;;;1959:74;;1947:2;1932:18;2521:22:5::1;;;;;;;2433:117::o:0;2186:115::-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;;::::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;734:10:13::0;;655:96;2426:187:0;2518:6;;;;2534:17;;;;;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2336:287:6:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:6;;18084:2:26;2460:63:6;;;18066:21:26;18123:2;18103:18;;;18096:30;18162:33;18142:18;;;18135:61;18213:18;;2460:63:6;17882:355:26;2460:63:6;1759:1;2598:7;:18;2336:287::o;1767:106:5:-;1662:4;1685:7;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:5;;18444:2:26;1828:38:5;;;18426:21:26;18483:2;18463:18;;;18456:30;18522:18;18502;;;18495:46;18558:18;;1828:38:5;18242:340:26;5476:1519:24;5731:12;;5660:19;5719:25;;;:11;:25;;;;;;:29;5715:130;;5803:12;;5791:25;;;;:11;:25;;;;;;5772:15;:44;;5764:70;;;;-1:-1:-1;;;5764:70:24;;18789:2:26;5764:70:24;;;18771:21:26;18828:2;18808:18;;;18801:30;18867:15;18847:18;;;18840:43;18900:18;;5764:70:24;18587:337:26;5764:70:24;5926:13;;;5901:22;5926:13;;;:7;:13;;;;;;5957:33;;;5949:62;;;;-1:-1:-1;;;5949:62:24;;19131:2:26;5949:62:24;;;19113:21:26;19170:2;19150:18;;;19143:30;19209:18;19189;;;19182:46;19245:18;;5949:62:24;18929:340:26;5949:62:24;6044:33;6063:14;6044:16;:33;:::i;:::-;6152:40;;19464:66:26;19451:2;19447:15;;;19443:88;6152:40:24;;;19431:101:26;19548:12;;;19541:28;;;6030:47:24;;-1:-1:-1;6127:12:24;;19585::26;;6152:40:24;;;;;;;;;;;;6142:51;;;;;;6127:66;;6211:57;6224:11;;6211:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6248:12:24;;6237:24;;:10;:24;;;;;;;-1:-1:-1;6263:4:24;;-1:-1:-1;6211:12:24;;-1:-1:-1;6211:57:24:i;:::-;6203:83;;;;-1:-1:-1;;;6203:83:24;;19810:2:26;6203:83:24;;;19792:21:26;19849:2;19829:18;;;19822:30;19888:15;19868:18;;;19861:43;19921:18;;6203:83:24;19608:337:26;6203:83:24;6338:13;;;;;;;:7;:13;;;;;:32;;;6425:489;;;;6509:50;;;;;:14;6532:12;8665:55:26;;6509:50:24;;;8647:74:26;8737:18;;;8730:34;;;6509:5:24;:14;;;;8620:18:26;;6509:50:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6501:78;;;;-1:-1:-1;;;6501:78:24;;9227:2:26;6501:78:24;;;9209:21:26;9266:2;9246:18;;;9239:30;9305:17;9285:18;;;9278:45;9340:18;;6501:78:24;9025:339:26;6501:78:24;6758:33;;;;;:14;8665:55:26;;;6758:33:24;;;8647:74:26;8737:18;;;8730:34;;;6758:5:24;:14;;;;8620:18:26;;6758:33:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6750:61;;;;-1:-1:-1;;;6750:61:24;;9227:2:26;6750:61:24;;;9209:21:26;9266:2;9246:18;;;9239:30;9305:17;9285:18;;;9278:45;9340:18;;6750:61:24;9025:339:26;6750:61:24;6425:489;;;6850:33;;;;;:14;8665:55:26;;;6850:33:24;;;8647:74:26;8737:18;;;8730:34;;;6850:5:24;:14;;;;8620:18:26;;6850:33:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6842:61;;;;-1:-1:-1;;;6842:61:24;;9227:2:26;6842:61:24;;;9209:21:26;9266:2;9246:18;;;9239:30;9305:17;9285:18;;;9278:45;9340:18;;6842:61:24;9025:339:26;6842:61:24;6975:12;;6937:51;;;20146:25:26;;;20214:14;;20207:22;20202:2;20187:18;;20180:50;20246:18;;;20239:34;;;;6937:51:24;;;;;;20134:2:26;20119:18;6937:51:24;;;;;;;5681:1314;;5476:1519;;;;;;;;:::o;1945:106:5:-;1662:4;1685:7;;;2003:41;;;;-1:-1:-1;;;2003:41:5;;20486:2:26;2003:41:5;;;20468:21:26;20525:2;20505:18;;;20498:30;20564:22;20544:18;;;20537:50;20604:18;;2003:41:5;20284:344:26;9403:612:24;9530:4;9569;9530;9592:371;9616:5;:12;9612:1;:16;9592:371;;;9649:20;9672:5;9678:1;9672:8;;;;;;;;:::i;:::-;;;;;;;9649:31;;9727:12;9711;:28;9707:246;;9784:44;;;;;;20790:19:26;;;20825:12;;;20818:28;;;20862:12;;9784:44:24;;;;;;;;;;;;9774:55;;;;;;9759:70;;9707:246;;;9893:44;;;;;;20790:19:26;;;20825:12;;;20818:28;;;20862:12;;9893:44:24;;;;;;;;;;;;9883:55;;;;;;9868:70;;9707:246;-1:-1:-1;9630:3:24;;;;:::i;:::-;;;;9592:371;;;-1:-1:-1;9988:20:24;;;;9403:612;-1:-1:-1;;;9403:612:24:o;14:196:26:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;366:29;385:9;366:29;:::i;:::-;356:39;215:186;-1:-1:-1;;;215:186:26:o;598:180::-;657:6;710:2;698:9;689:7;685:23;681:32;678:52;;;726:1;723;716:12;678:52;-1:-1:-1;749:23:26;;598:180;-1:-1:-1;598:180:26:o;783:482::-;825:3;863:5;857:12;890:6;885:3;878:19;915:1;925:162;939:6;936:1;933:13;925:162;;;1001:4;1057:13;;;1053:22;;1047:29;1029:11;;;1025:20;;1018:59;954:12;925:162;;;929:3;1132:1;1125:4;1116:6;1111:3;1107:16;1103:27;1096:38;1254:4;1184:66;1179:2;1171:6;1167:15;1163:88;1158:3;1154:98;1150:109;1143:116;;;783:482;;;;:::o;1270:517::-;1525:6;1514:9;1507:25;1568:6;1563:2;1552:9;1548:18;1541:34;1611:3;1606:2;1595:9;1591:18;1584:31;1488:4;1632:46;1673:3;1662:9;1658:19;1650:6;1632:46;:::i;:::-;1709:2;1694:18;;1687:34;;;;-1:-1:-1;1765:14:26;;1758:22;1752:3;1737:19;;;1730:51;1624:54;1270:517;-1:-1:-1;;;1270:517:26:o;2226:866::-;2333:6;2341;2349;2357;2365;2373;2426:3;2414:9;2405:7;2401:23;2397:33;2394:53;;;2443:1;2440;2433:12;2394:53;2479:9;2466:23;2456:33;;2536:2;2525:9;2521:18;2508:32;2498:42;;2587:2;2576:9;2572:18;2559:32;2549:42;;2642:2;2631:9;2627:18;2614:32;2665:18;2706:2;2698:6;2695:14;2692:34;;;2722:1;2719;2712:12;2692:34;2760:6;2749:9;2745:22;2735:32;;2805:7;2798:4;2794:2;2790:13;2786:27;2776:55;;2827:1;2824;2817:12;2776:55;2867:2;2854:16;2893:2;2885:6;2882:14;2879:34;;;2909:1;2906;2899:12;2879:34;2954:7;2949:2;2940:6;2936:2;2932:15;2928:24;2925:37;2922:57;;;2975:1;2972;2965:12;2922:57;3006:2;3002;2998:11;2988:21;;3028:6;3018:16;;;;;3081:3;3070:9;3066:19;3053:33;3043:43;;2226:866;;;;;;;;:::o;3510:220::-;3659:2;3648:9;3641:21;3622:4;3679:45;3720:2;3709:9;3705:18;3697:6;3679:45;:::i;3735:254::-;3803:6;3811;3864:2;3852:9;3843:7;3839:23;3835:32;3832:52;;;3880:1;3877;3870:12;3832:52;3903:29;3922:9;3903:29;:::i;:::-;3893:39;3979:2;3964:18;;;;3951:32;;-1:-1:-1;;;3735:254:26:o;3994:118::-;4080:5;4073:13;4066:21;4059:5;4056:32;4046:60;;4102:1;4099;4092:12;4117:367;4180:8;4190:6;4244:3;4237:4;4229:6;4225:17;4221:27;4211:55;;4262:1;4259;4252:12;4211:55;-1:-1:-1;4285:20:26;;4328:18;4317:30;;4314:50;;;4360:1;4357;4350:12;4314:50;4397:4;4389:6;4385:17;4373:29;;4457:3;4450:4;4440:6;4437:1;4433:14;4425:6;4421:27;4417:38;4414:47;4411:67;;;4474:1;4471;4464:12;4411:67;4117:367;;;;;:::o;4489:709::-;4599:6;4607;4615;4623;4631;4684:3;4672:9;4663:7;4659:23;4655:33;4652:53;;;4701:1;4698;4691:12;4652:53;4724:29;4743:9;4724:29;:::i;:::-;4714:39;;4800:2;4789:9;4785:18;4772:32;4762:42;;4854:2;4843:9;4839:18;4826:32;4867:28;4889:5;4867:28;:::i;:::-;4914:5;-1:-1:-1;4970:2:26;4955:18;;4942:32;4997:18;4986:30;;4983:50;;;5029:1;5026;5019:12;4983:50;5068:70;5130:7;5121:6;5110:9;5106:22;5068:70;:::i;:::-;4489:709;;;;-1:-1:-1;4489:709:26;;-1:-1:-1;5157:8:26;;5042:96;4489:709;-1:-1:-1;;;4489:709:26:o;5203:634::-;5304:6;5312;5320;5328;5381:2;5369:9;5360:7;5356:23;5352:32;5349:52;;;5397:1;5394;5387:12;5349:52;5433:9;5420:23;5410:33;;5493:2;5482:9;5478:18;5465:32;5506:28;5528:5;5506:28;:::i;:::-;5553:5;-1:-1:-1;5609:2:26;5594:18;;5581:32;5636:18;5625:30;;5622:50;;;5668:1;5665;5658:12;5622:50;5707:70;5769:7;5760:6;5749:9;5745:22;5707:70;:::i;:::-;5203:634;;;;-1:-1:-1;5796:8:26;-1:-1:-1;;;;5203:634:26:o;5842:1245::-;6033:6;6041;6049;6057;6065;6073;6081;6134:3;6122:9;6113:7;6109:23;6105:33;6102:53;;;6151:1;6148;6141:12;6102:53;6191:9;6178:23;6220:18;6261:2;6253:6;6250:14;6247:34;;;6277:1;6274;6267:12;6247:34;6316:70;6378:7;6369:6;6358:9;6354:22;6316:70;:::i;:::-;6405:8;;-1:-1:-1;6290:96:26;-1:-1:-1;6493:2:26;6478:18;;6465:32;;-1:-1:-1;6509:16:26;;;6506:36;;;6538:1;6535;6528:12;6506:36;6577:72;6641:7;6630:8;6619:9;6615:24;6577:72;:::i;:::-;6668:8;;-1:-1:-1;6551:98:26;-1:-1:-1;6753:2:26;6738:18;;6725:32;;-1:-1:-1;6766:28:26;6725:32;6766:28;:::i;:::-;6813:5;;-1:-1:-1;6871:2:26;6856:18;;6843:32;;6887:16;;;6884:36;;;6916:1;6913;6906:12;6884:36;;6955:72;7019:7;7008:8;6997:9;6993:24;6955:72;:::i;:::-;5842:1245;;;;-1:-1:-1;5842:1245:26;;-1:-1:-1;5842:1245:26;;;;6929:98;;-1:-1:-1;;;5842:1245:26:o;7344:437::-;7423:1;7419:12;;;;7466;;;7487:61;;7541:4;7533:6;7529:17;7519:27;;7487:61;7594:2;7586:6;7583:14;7563:18;7560:38;7557:218;;7631:77;7628:1;7621:88;7732:4;7729:1;7722:15;7760:4;7757:1;7750:15;7557:218;;7344:437;;;:::o;8775:245::-;8842:6;8895:2;8883:9;8874:7;8870:23;8866:32;8863:52;;;8911:1;8908;8901:12;8863:52;8943:9;8937:16;8962:28;8984:5;8962:28;:::i;9369:184::-;9421:77;9418:1;9411:88;9518:4;9515:1;9508:15;9542:4;9539:1;9532:15;9558:125;9623:9;;;9644:10;;;9641:36;;;9657:18;;:::i;10376:184::-;10428:77;10425:1;10418:88;10525:4;10522:1;10515:15;10549:4;10546:1;10539:15;10691:545;10793:2;10788:3;10785:11;10782:448;;;10829:1;10854:5;10850:2;10843:17;10899:4;10895:2;10885:19;10969:2;10957:10;10953:19;10950:1;10946:27;10940:4;10936:38;11005:4;10993:10;10990:20;10987:47;;;-1:-1:-1;11028:4:26;10987:47;11083:2;11078:3;11074:12;11071:1;11067:20;11061:4;11057:31;11047:41;;11138:82;11156:2;11149:5;11146:13;11138:82;;;11201:17;;;11182:1;11171:13;11138:82;;;11142:3;;;10782:448;10691:545;;;:::o;11472:1325::-;11596:18;11591:3;11588:27;11585:53;;;11618:18;;:::i;:::-;11647:94;11737:3;11697:38;11729:4;11723:11;11697:38;:::i;:::-;11691:4;11647:94;:::i;:::-;11767:1;11792:2;11787:3;11784:11;11809:1;11804:735;;;;12583:1;12600:3;12597:93;;;-1:-1:-1;12656:19:26;;;12643:33;12597:93;11378:66;11369:1;11365:11;;;11361:84;11357:89;11347:100;11453:1;11449:11;;;11344:117;12703:78;;11777:1014;;11804:735;10638:1;10631:14;;;10675:4;10662:18;;11849:66;11840:76;;;12000:9;12022:229;12036:7;12033:1;12030:14;12022:229;;;12125:19;;;12112:33;12097:49;;12232:4;12217:20;;;;12185:1;12173:14;;;;12052:12;12022:229;;;12026:3;12279;12270:7;12267:16;12264:219;;;12399:66;12393:3;12387;12384:1;12380:11;12376:21;12372:94;12368:99;12355:9;12350:3;12346:19;12333:33;12329:139;12321:6;12314:155;12264:219;;;12526:1;12520:3;12517:1;12513:11;12509:19;12503:4;12496:33;11777:1014;;11472:1325;;;:::o;12802:168::-;12875:9;;;12906;;12923:15;;;12917:22;;12903:37;12893:71;;12944:18;;:::i;12975:274::-;13015:1;13041;13031:189;;13076:77;13073:1;13066:88;13177:4;13174:1;13167:15;13205:4;13202:1;13195:15;13031:189;-1:-1:-1;13234:9:26;;12975:274::o;13254:594::-;13469:6;13458:9;13451:25;13512:6;13507:2;13496:9;13492:18;13485:34;13555:2;13550;13539:9;13535:18;13528:30;13594:6;13589:2;13578:9;13574:18;13567:34;13652:6;13644;13638:3;13627:9;13623:19;13610:49;13709:1;13679:22;;;13703:3;13675:32;;;13668:43;;;;13763:2;13751:15;;;13768:66;13747:88;13732:104;13728:114;;13254:594;-1:-1:-1;;;13254:594:26:o;13853:128::-;13920:9;;;13941:11;;;13938:37;;;13955:18;;:::i;15026:195::-;15065:3;15096:66;15089:5;15086:77;15083:103;;15166:18;;:::i;:::-;-1:-1:-1;15213:1:26;15202:13;;15026:195::o;16723:184::-;16775:77;16772:1;16765:88;16872:4;16869:1;16862:15;16896:4;16893:1;16886:15;16912:604;17005:4;17011:6;17071:11;17058:25;17161:66;17150:8;17134:14;17130:29;17126:102;17106:18;17102:127;17092:155;;17243:1;17240;17233:12;17092:155;17270:33;;17322:20;;;-1:-1:-1;17365:18:26;17354:30;;17351:50;;;17397:1;17394;17387:12;17351:50;17430:4;17418:17;;-1:-1:-1;17481:1:26;17477:14;;;17461;17457:35;17447:46;;17444:66;;;17506:1;17503;17496:12"},"methodIdentifiers":{"MAX_GASLESS_CLAIMS()":"a3df5b63","canClaimGasless(address)":"8d73cffc","claim(uint256,bool,bytes32[])":"cf077ab0","claimBatch(address[],uint256[],bool,bytes32[][])":"fb9e416d","claimGasless(address,uint256,bool,bytes32[])":"c85ef1d3","claimed(address)":"c884ef83","currentEpoch()":"76671808","emergencyPause()":"51858e27","emergencyWithdraw(uint256)":"5312ea8e","epochCaps(uint256)":"85ef751f","epochDescriptions(uint256)":"a8110752","epochExpiry(uint256)":"8232e06e","epochRoots(uint256)":"55deccc1","epochTotals(uint256)":"34fc6fce","fund(uint256)":"ca1d209d","gaslessClaimCount()":"cf22f118","getClaimableAmount(address,uint256)":"b3743f60","getEpochInfo(uint256)":"135022c2","hasClaimedGasless(address)":"08883ed5","owner()":"8da5cb5b","paused()":"5c975abb","relayer()":"8406c079","renounceOwnership()":"715018a6","rootGuardian()":"af2a660a","setEpochRoot(uint256,bytes32,uint256,string,uint256)":"53320fc2","setRelayer(address)":"6548e9bc","setRootGuardian(address)":"59735f89","stakingVault()":"24e7964a","token()":"fc0c546a","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rootGuardian\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoStaked\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"EpochSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"GaslessClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRelayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRelayer\",\"type\":\"address\"}],\"name\":\"RelayerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_GASLESS_CLAIMS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canClaimGasless\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cumulativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoStake\",\"type\":\"bool\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"cumulativeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"autoStake\",\"type\":\"bool\"},{\"internalType\":\"bytes32[][]\",\"name\":\"merkleProofs\",\"type\":\"bytes32[][]\"}],\"name\":\"claimBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoStake\",\"type\":\"bool\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claimGasless\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochCaps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochDescriptions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochTotals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gaslessClaimCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeAmount\",\"type\":\"uint256\"}],\"name\":\"getClaimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"}],\"name\":\"getEpochInfo\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimedGasless\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"expiryDays\",\"type\":\"uint256\"}],\"name\":\"setEpochRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRelayer\",\"type\":\"address\"}],\"name\":\"setRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"setRootGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingVault\",\"outputs\":[{\"internalType\":\"contract StakingVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract CodeDAOToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Supports claim-to-stake, gasless claims, and multi-epoch aggregation\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"claim(uint256,bool,bytes32[])\":{\"params\":{\"autoStake\":\"Whether to automatically stake claimed tokens\",\"cumulativeAmount\":\"Total lifetime earnings for user\",\"merkleProof\":\"Proof of inclusion in latest epoch\"}},\"claimGasless(address,uint256,bool,bytes32[])\":{\"params\":{\"autoStake\":\"Whether to auto-stake\",\"cumulativeAmount\":\"Total lifetime earnings\",\"merkleProof\":\"Merkle proof\",\"user\":\"Address to claim for\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setEpochRoot(uint256,bytes32,uint256,string,uint256)\":{\"params\":{\"description\":\"Human readable description\",\"epochId\":\"Epoch number (must be sequential)\",\"expiryDays\":\"Days until epoch expires (0 = no expiry)\",\"merkleRoot\":\"Root of Merkle tree with cumulative amounts\",\"totalAmount\":\"Total tokens allocated for this epoch\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MerkleDistributorV2 \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canClaimGasless(address)\":{\"notice\":\"Check if user is eligible for gasless claim\"},\"claim(uint256,bool,bytes32[])\":{\"notice\":\"Claim tokens (with auto-stake option)\"},\"claimBatch(address[],uint256[],bool,bytes32[][])\":{\"notice\":\"Batch claim multiple users (for airdrops)\"},\"claimGasless(address,uint256,bool,bytes32[])\":{\"notice\":\"Gasless claim for first-time users (relayer pays gas)\"},\"emergencyPause()\":{\"notice\":\"Emergency pause by guardian\"},\"emergencyWithdraw(uint256)\":{\"notice\":\"Emergency withdrawal (only after epoch expiry)\"},\"fund(uint256)\":{\"notice\":\"Fund the contract\"},\"getClaimableAmount(address,uint256)\":{\"notice\":\"Get claimable amount for user\"},\"getEpochInfo(uint256)\":{\"notice\":\"Get epoch information\"},\"setEpochRoot(uint256,bytes32,uint256,string,uint256)\":{\"notice\":\"Set Merkle root for new epoch (cumulative)\"},\"setRelayer(address)\":{\"notice\":\"Update relayer address\"},\"setRootGuardian(address)\":{\"notice\":\"Update root guardian\"},\"unpause()\":{\"notice\":\"Resume after pause\"}},\"notice\":\"Cumulative Merkle distributor for airdrops + builder rewards\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MerkleDistributorV2.sol\":\"MerkleDistributorV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/CodeDAOToken.sol\":{\"keccak256\":\"0xec23401fc3ce05876b669927cc92c54a2eccfbca101927687568fa9da9082532\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6dc9150d83ce9c485e8d485fa2d5eaf510fb31c283f27c16111cfc8af0b5dd1\",\"dweb:/ipfs/QmaGeLfTEc1fc6BbK9tr5YXU4zLQpkrq3Q52ZseKZ22iVD\"]},\"contracts/MerkleDistributorV2.sol\":{\"keccak256\":\"0x7976204cf558631864bc01d8ba1540d14b5391ea834c375fd3be2308f78256ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a493dc7aef069f1c7ea5fced0bb349a36dba2bc786454b7c2af3715aeded857c\",\"dweb:/ipfs/QmcXHhqMDBfqaEKKSTGdLskFFQREx4Zj3jsF1DmsvZgZz2\"]},\"contracts/StakingVault.sol\":{\"keccak256\":\"0x14153b8e788bede7a40103fe5b14ee2e210320b5286ea680f69d0144d0cda965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d80cbbc8362b20242ae8d5d4b90cf9ae3c2e6f560e69346af1857db8799addb\",\"dweb:/ipfs/QmS1VuEqx74LxFoZ5fDzbe7F5myKf4bsya41TDPDZmuumY\"]}},\"version\":1}"}},"contracts/StakingVault.sol":{"StakingVault":{"abi":[{"inputs":[{"internalType":"address","name":"_codeToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Stake","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Unstake","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"codeToken","outputs":[{"internalType":"contract CodeDAOToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserTier","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"minAmount","type":"uint256"}],"name":"hasMinStake","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1119":{"entryPoint":null,"id":1119,"parameterSlots":1,"returnSlots":0},"@_3162":{"entryPoint":null,"id":3162,"parameterSlots":2,"returnSlots":0},"@_457":{"entryPoint":null,"id":457,"parameterSlots":2,"returnSlots":0},"@_6816":{"entryPoint":null,"id":6816,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_3209":{"entryPoint":null,"id":3209,"parameterSlots":0,"returnSlots":1},"@getStringSlot_2451":{"entryPoint":null,"id":2451,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2305":{"entryPoint":456,"id":2305,"parameterSlots":2,"returnSlots":1},"@toShortString_2207":{"entryPoint":513,"id":2207,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":589,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1008,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":721,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1088,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":804,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":661,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":639,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4376:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:26","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:26"},"nodeType":"YulFunctionCall","src":"143:12:26"},"nodeType":"YulExpressionStatement","src":"143:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:26"},"nodeType":"YulFunctionCall","src":"112:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:26"},"nodeType":"YulFunctionCall","src":"108:32:26"},"nodeType":"YulIf","src":"105:52:26"},{"nodeType":"YulVariableDeclaration","src":"166:29:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:26"},"nodeType":"YulFunctionCall","src":"179:16:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:26"},"nodeType":"YulFunctionCall","src":"260:12:26"},"nodeType":"YulExpressionStatement","src":"260:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:26"},"nodeType":"YulFunctionCall","src":"239:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:26"},"nodeType":"YulFunctionCall","src":"235:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:26"},"nodeType":"YulFunctionCall","src":"224:31:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:26"},"nodeType":"YulFunctionCall","src":"214:42:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:26"},"nodeType":"YulFunctionCall","src":"207:50:26"},"nodeType":"YulIf","src":"204:70:26"},{"nodeType":"YulAssignment","src":"283:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:26"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:26","type":""}],"src":"14:290:26"},{"body":{"nodeType":"YulBlock","src":"341:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"358:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"365:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"370:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"361:3:26"},"nodeType":"YulFunctionCall","src":"361:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"351:6:26"},"nodeType":"YulFunctionCall","src":"351:31:26"},"nodeType":"YulExpressionStatement","src":"351:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"398:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"401:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"391:6:26"},"nodeType":"YulFunctionCall","src":"391:15:26"},"nodeType":"YulExpressionStatement","src":"391:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"422:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"425:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"415:6:26"},"nodeType":"YulFunctionCall","src":"415:15:26"},"nodeType":"YulExpressionStatement","src":"415:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"309:127:26"},{"body":{"nodeType":"YulBlock","src":"496:325:26","statements":[{"nodeType":"YulAssignment","src":"506:22:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"520:1:26","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"523:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"516:3:26"},"nodeType":"YulFunctionCall","src":"516:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"506:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"537:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"567:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"573:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"563:3:26"},"nodeType":"YulFunctionCall","src":"563:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"541:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"614:31:26","statements":[{"nodeType":"YulAssignment","src":"616:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"630:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"638:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"626:3:26"},"nodeType":"YulFunctionCall","src":"626:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"616:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"594:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"587:6:26"},"nodeType":"YulFunctionCall","src":"587:26:26"},"nodeType":"YulIf","src":"584:61:26"},{"body":{"nodeType":"YulBlock","src":"704:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"725:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"732:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"737:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"728:3:26"},"nodeType":"YulFunctionCall","src":"728:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"718:6:26"},"nodeType":"YulFunctionCall","src":"718:31:26"},"nodeType":"YulExpressionStatement","src":"718:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"769:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"772:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"762:6:26"},"nodeType":"YulFunctionCall","src":"762:15:26"},"nodeType":"YulExpressionStatement","src":"762:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"797:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"800:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"790:6:26"},"nodeType":"YulFunctionCall","src":"790:15:26"},"nodeType":"YulExpressionStatement","src":"790:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"660:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"683:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"691:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"680:2:26"},"nodeType":"YulFunctionCall","src":"680:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"657:2:26"},"nodeType":"YulFunctionCall","src":"657:38:26"},"nodeType":"YulIf","src":"654:161:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"476:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"485:6:26","type":""}],"src":"441:380:26"},{"body":{"nodeType":"YulBlock","src":"882:65:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"899:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"902:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"892:6:26"},"nodeType":"YulFunctionCall","src":"892:14:26"},"nodeType":"YulExpressionStatement","src":"892:14:26"},{"nodeType":"YulAssignment","src":"915:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"933:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"936:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"923:9:26"},"nodeType":"YulFunctionCall","src":"923:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"915:4:26"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"865:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"873:4:26","type":""}],"src":"826:121:26"},{"body":{"nodeType":"YulBlock","src":"1033:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"1066:425:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1080:11:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:26","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1084:2:26","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1111:2:26"},{"name":"array","nodeType":"YulIdentifier","src":"1115:5:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1104:6:26"},"nodeType":"YulFunctionCall","src":"1104:17:26"},"nodeType":"YulExpressionStatement","src":"1104:17:26"},{"nodeType":"YulVariableDeclaration","src":"1134:31:26","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1156:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"1160:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1146:9:26"},"nodeType":"YulFunctionCall","src":"1146:19:26"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1138:4:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1178:57:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1201:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1211:1:26","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1218:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1230:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:26"},"nodeType":"YulFunctionCall","src":"1214:19:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1207:3:26"},"nodeType":"YulFunctionCall","src":"1207:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1197:3:26"},"nodeType":"YulFunctionCall","src":"1197:38:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1182:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1272:23:26","statements":[{"nodeType":"YulAssignment","src":"1274:19:26","value":{"name":"data","nodeType":"YulIdentifier","src":"1289:4:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1274:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1254:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1266:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1251:2:26"},"nodeType":"YulFunctionCall","src":"1251:20:26"},"nodeType":"YulIf","src":"1248:47:26"},{"nodeType":"YulVariableDeclaration","src":"1308:41:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1322:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1332:1:26","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1339:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1344:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1335:3:26"},"nodeType":"YulFunctionCall","src":"1335:12:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1328:3:26"},"nodeType":"YulFunctionCall","src":"1328:20:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:26"},"nodeType":"YulFunctionCall","src":"1318:31:26"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1312:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1362:24:26","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1375:11:26"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1366:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1460:21:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1469:5:26"},{"name":"_1","nodeType":"YulIdentifier","src":"1476:2:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1462:6:26"},"nodeType":"YulFunctionCall","src":"1462:17:26"},"nodeType":"YulExpressionStatement","src":"1462:17:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1410:5:26"},{"name":"_2","nodeType":"YulIdentifier","src":"1417:2:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1407:2:26"},"nodeType":"YulFunctionCall","src":"1407:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1421:26:26","statements":[{"nodeType":"YulAssignment","src":"1423:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1436:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1443:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1432:3:26"},"nodeType":"YulFunctionCall","src":"1432:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1423:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1403:3:26","statements":[]},"src":"1399:82:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1049:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1054:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1046:2:26"},"nodeType":"YulFunctionCall","src":"1046:11:26"},"nodeType":"YulIf","src":"1043:448:26"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1005:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"1012:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1017:10:26","type":""}],"src":"952:545:26"},{"body":{"nodeType":"YulBlock","src":"1587:81:26","statements":[{"nodeType":"YulAssignment","src":"1597:65:26","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1612:4:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1630:1:26","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1633:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1626:3:26"},"nodeType":"YulFunctionCall","src":"1626:11:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1643:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1639:3:26"},"nodeType":"YulFunctionCall","src":"1639:6:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1622:3:26"},"nodeType":"YulFunctionCall","src":"1622:24:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1618:3:26"},"nodeType":"YulFunctionCall","src":"1618:29:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1608:3:26"},"nodeType":"YulFunctionCall","src":"1608:40:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1654:1:26","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1657:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1650:3:26"},"nodeType":"YulFunctionCall","src":"1650:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1605:2:26"},"nodeType":"YulFunctionCall","src":"1605:57:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1597:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1564:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"1570:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1578:4:26","type":""}],"src":"1502:166:26"},{"body":{"nodeType":"YulBlock","src":"1769:1256:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1779:24:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1799:3:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1793:5:26"},"nodeType":"YulFunctionCall","src":"1793:10:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1783:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1846:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1848:16:26"},"nodeType":"YulFunctionCall","src":"1848:18:26"},"nodeType":"YulExpressionStatement","src":"1848:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1818:6:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1834:2:26","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1838:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1830:3:26"},"nodeType":"YulFunctionCall","src":"1830:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1842:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1826:3:26"},"nodeType":"YulFunctionCall","src":"1826:18:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1815:2:26"},"nodeType":"YulFunctionCall","src":"1815:30:26"},"nodeType":"YulIf","src":"1812:56:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1921:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1959:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1953:5:26"},"nodeType":"YulFunctionCall","src":"1953:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1927:25:26"},"nodeType":"YulFunctionCall","src":"1927:38:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"1967:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1877:43:26"},"nodeType":"YulFunctionCall","src":"1877:97:26"},"nodeType":"YulExpressionStatement","src":"1877:97:26"},{"nodeType":"YulVariableDeclaration","src":"1983:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2000:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1987:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2010:23:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2029:4:26","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2014:11:26","type":""}]},{"nodeType":"YulAssignment","src":"2042:24:26","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2055:11:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2042:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2112:656:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2126:35:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2145:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2157:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2153:3:26"},"nodeType":"YulFunctionCall","src":"2153:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2141:3:26"},"nodeType":"YulFunctionCall","src":"2141:20:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2130:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2174:49:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2218:4:26"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"2188:29:26"},"nodeType":"YulFunctionCall","src":"2188:35:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2178:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2236:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2245:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2240:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2323:172:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2348:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2366:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2371:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2362:3:26"},"nodeType":"YulFunctionCall","src":"2362:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2356:5:26"},"nodeType":"YulFunctionCall","src":"2356:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2341:6:26"},"nodeType":"YulFunctionCall","src":"2341:42:26"},"nodeType":"YulExpressionStatement","src":"2341:42:26"},{"nodeType":"YulAssignment","src":"2400:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2414:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2422:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2410:3:26"},"nodeType":"YulFunctionCall","src":"2410:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2400:6:26"}]},{"nodeType":"YulAssignment","src":"2441:40:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2458:9:26"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2469:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2454:3:26"},"nodeType":"YulFunctionCall","src":"2454:27:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2441:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2270:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2273:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2267:2:26"},"nodeType":"YulFunctionCall","src":"2267:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2282:28:26","statements":[{"nodeType":"YulAssignment","src":"2284:24:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2293:1:26"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2296:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:26"},"nodeType":"YulFunctionCall","src":"2289:19:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2284:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2263:3:26","statements":[]},"src":"2259:236:26"},{"body":{"nodeType":"YulBlock","src":"2543:166:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2561:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2588:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2593:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:26"},"nodeType":"YulFunctionCall","src":"2584:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:26"},"nodeType":"YulFunctionCall","src":"2578:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2565:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2628:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2640:9:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2667:1:26","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2670:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2663:3:26"},"nodeType":"YulFunctionCall","src":"2663:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"2679:3:26","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2659:3:26"},"nodeType":"YulFunctionCall","src":"2659:24:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2685:3:26"},"nodeType":"YulFunctionCall","src":"2685:6:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2655:3:26"},"nodeType":"YulFunctionCall","src":"2655:37:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2651:3:26"},"nodeType":"YulFunctionCall","src":"2651:42:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2636:3:26"},"nodeType":"YulFunctionCall","src":"2636:58:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2621:6:26"},"nodeType":"YulFunctionCall","src":"2621:74:26"},"nodeType":"YulExpressionStatement","src":"2621:74:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2514:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"2523:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2511:2:26"},"nodeType":"YulFunctionCall","src":"2511:19:26"},"nodeType":"YulIf","src":"2508:201:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2729:4:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2743:1:26","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2746:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2739:3:26"},"nodeType":"YulFunctionCall","src":"2739:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"2755:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2735:3:26"},"nodeType":"YulFunctionCall","src":"2735:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2722:6:26"},"nodeType":"YulFunctionCall","src":"2722:36:26"},"nodeType":"YulExpressionStatement","src":"2722:36:26"}]},"nodeType":"YulCase","src":"2105:663:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2110:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2785:234:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2799:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2812:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2803:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2848:67:26","statements":[{"nodeType":"YulAssignment","src":"2866:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2885:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2890:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2881:3:26"},"nodeType":"YulFunctionCall","src":"2881:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2875:5:26"},"nodeType":"YulFunctionCall","src":"2875:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2866:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2829:6:26"},"nodeType":"YulIf","src":"2826:89:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2935:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2994:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"3001:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2941:52:26"},"nodeType":"YulFunctionCall","src":"2941:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2928:6:26"},"nodeType":"YulFunctionCall","src":"2928:81:26"},"nodeType":"YulExpressionStatement","src":"2928:81:26"}]},"nodeType":"YulCase","src":"2777:242:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2085:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2093:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2082:2:26"},"nodeType":"YulFunctionCall","src":"2082:14:26"},"nodeType":"YulSwitch","src":"2075:944:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1754:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"1760:3:26","type":""}],"src":"1673:1352:26"},{"body":{"nodeType":"YulBlock","src":"3243:276:26","statements":[{"nodeType":"YulAssignment","src":"3253:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3265:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3276:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3261:3:26"},"nodeType":"YulFunctionCall","src":"3261:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3253:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3296:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"3307:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3289:6:26"},"nodeType":"YulFunctionCall","src":"3289:25:26"},"nodeType":"YulExpressionStatement","src":"3289:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3334:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3345:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3330:3:26"},"nodeType":"YulFunctionCall","src":"3330:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"3350:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3323:6:26"},"nodeType":"YulFunctionCall","src":"3323:34:26"},"nodeType":"YulExpressionStatement","src":"3323:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3377:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3388:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3373:3:26"},"nodeType":"YulFunctionCall","src":"3373:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"3393:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3366:6:26"},"nodeType":"YulFunctionCall","src":"3366:34:26"},"nodeType":"YulExpressionStatement","src":"3366:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3420:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3431:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3416:3:26"},"nodeType":"YulFunctionCall","src":"3416:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"3436:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3409:6:26"},"nodeType":"YulFunctionCall","src":"3409:34:26"},"nodeType":"YulExpressionStatement","src":"3409:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3463:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3474:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3459:3:26"},"nodeType":"YulFunctionCall","src":"3459:19:26"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3484:6:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3500:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3505:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3496:3:26"},"nodeType":"YulFunctionCall","src":"3496:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"3509:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3492:3:26"},"nodeType":"YulFunctionCall","src":"3492:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3480:3:26"},"nodeType":"YulFunctionCall","src":"3480:32:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3452:6:26"},"nodeType":"YulFunctionCall","src":"3452:61:26"},"nodeType":"YulExpressionStatement","src":"3452:61:26"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3180:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3191:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3199:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3207:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3215:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3223:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3234:4:26","type":""}],"src":"3030:489:26"},{"body":{"nodeType":"YulBlock","src":"3645:427:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3655:12:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3665:2:26","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3659:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3683:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"3694:2:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3676:6:26"},"nodeType":"YulFunctionCall","src":"3676:21:26"},"nodeType":"YulExpressionStatement","src":"3676:21:26"},{"nodeType":"YulVariableDeclaration","src":"3706:27:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3726:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3720:5:26"},"nodeType":"YulFunctionCall","src":"3720:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3710:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"3764:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:26"},"nodeType":"YulFunctionCall","src":"3749:18:26"},{"name":"length","nodeType":"YulIdentifier","src":"3769:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3742:6:26"},"nodeType":"YulFunctionCall","src":"3742:34:26"},"nodeType":"YulExpressionStatement","src":"3742:34:26"},{"nodeType":"YulVariableDeclaration","src":"3785:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3794:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3789:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3854:90:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3883:9:26"},{"name":"i","nodeType":"YulIdentifier","src":"3894:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3879:3:26"},"nodeType":"YulFunctionCall","src":"3879:17:26"},{"kind":"number","nodeType":"YulLiteral","src":"3898:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3875:3:26"},"nodeType":"YulFunctionCall","src":"3875:26:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3917:6:26"},{"name":"i","nodeType":"YulIdentifier","src":"3925:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3913:3:26"},"nodeType":"YulFunctionCall","src":"3913:14:26"},{"name":"_1","nodeType":"YulIdentifier","src":"3929:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3909:3:26"},"nodeType":"YulFunctionCall","src":"3909:23:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3903:5:26"},"nodeType":"YulFunctionCall","src":"3903:30:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3868:6:26"},"nodeType":"YulFunctionCall","src":"3868:66:26"},"nodeType":"YulExpressionStatement","src":"3868:66:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3815:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"3818:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3812:2:26"},"nodeType":"YulFunctionCall","src":"3812:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3826:19:26","statements":[{"nodeType":"YulAssignment","src":"3828:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3837:1:26"},{"name":"_1","nodeType":"YulIdentifier","src":"3840:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:26"},"nodeType":"YulFunctionCall","src":"3833:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3828:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"3808:3:26","statements":[]},"src":"3804:140:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3968:9:26"},{"name":"length","nodeType":"YulIdentifier","src":"3979:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3964:3:26"},"nodeType":"YulFunctionCall","src":"3964:22:26"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3960:3:26"},"nodeType":"YulFunctionCall","src":"3960:31:26"},{"kind":"number","nodeType":"YulLiteral","src":"3993:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3953:6:26"},"nodeType":"YulFunctionCall","src":"3953:42:26"},"nodeType":"YulExpressionStatement","src":"3953:42:26"},{"nodeType":"YulAssignment","src":"4004:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4020:9:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4039:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4047:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4035:3:26"},"nodeType":"YulFunctionCall","src":"4035:15:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4056:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4052:3:26"},"nodeType":"YulFunctionCall","src":"4052:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4031:3:26"},"nodeType":"YulFunctionCall","src":"4031:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4016:3:26"},"nodeType":"YulFunctionCall","src":"4016:45:26"},{"kind":"number","nodeType":"YulLiteral","src":"4063:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4012:3:26"},"nodeType":"YulFunctionCall","src":"4012:54:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4004:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3614:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3625:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3636:4:26","type":""}],"src":"3524:548:26"},{"body":{"nodeType":"YulBlock","src":"4171:203:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4181:26:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4201:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4195:5:26"},"nodeType":"YulFunctionCall","src":"4195:12:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4185:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4216:32:26","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4235:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4242:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4231:3:26"},"nodeType":"YulFunctionCall","src":"4231:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4225:5:26"},"nodeType":"YulFunctionCall","src":"4225:23:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4216:5:26"}]},{"body":{"nodeType":"YulBlock","src":"4285:83:26","statements":[{"nodeType":"YulAssignment","src":"4299:59:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4312:5:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4327:1:26","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4334:4:26","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"4340:6:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4330:3:26"},"nodeType":"YulFunctionCall","src":"4330:17:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4323:3:26"},"nodeType":"YulFunctionCall","src":"4323:25:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4354:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4350:3:26"},"nodeType":"YulFunctionCall","src":"4350:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4319:3:26"},"nodeType":"YulFunctionCall","src":"4319:38:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4308:3:26"},"nodeType":"YulFunctionCall","src":"4308:50:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4299:5:26"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4263:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4271:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4260:2:26"},"nodeType":"YulFunctionCall","src":"4260:16:26"},"nodeType":"YulIf","src":"4257:111:26"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4151:5:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4161:5:26","type":""}],"src":"4077:297:26"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x180 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x30D7 CODESIZE SUB DUP1 PUSH3 0x30D7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616B656420436F646544414F20546F6B656E000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616B656420436F646544414F20546F6B656E000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x73434F4445 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xEB SWAP2 SWAP1 PUSH3 0x324 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xFA DUP3 DUP3 PUSH3 0x324 JUMP JUMPDEST POP PUSH3 0x10C SWAP2 POP DUP4 SWAP1 POP PUSH1 0x5 PUSH3 0x1C8 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x11D DUP2 PUSH1 0x6 PUSH3 0x1C8 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x1AB PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x160 MSTORE PUSH3 0x465 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x1E8 JUMPI PUSH3 0x1E0 DUP4 PUSH3 0x201 JUMP JUMPDEST SWAP1 POP PUSH3 0x1FB JUMP JUMPDEST DUP2 PUSH3 0x1F5 DUP5 DUP3 PUSH3 0x324 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x238 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x22F SWAP2 SWAP1 PUSH3 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH3 0x245 DUP3 PUSH3 0x440 JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x31F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2FA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x31B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x306 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x340 JUMPI PUSH3 0x340 PUSH3 0x27F JUMP JUMPDEST PUSH3 0x358 DUP2 PUSH3 0x351 DUP5 SLOAD PUSH3 0x295 JUMP JUMPDEST DUP5 PUSH3 0x2D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x390 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x377 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x31B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3C1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3A0 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3E0 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x41F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH3 0x401 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x2CB JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x2BFE PUSH3 0x4D9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x38D ADD MSTORE DUP2 DUP2 PUSH2 0x6D7 ADD MSTORE PUSH2 0xCB6 ADD MSTORE PUSH1 0x0 PUSH2 0x9C6 ADD MSTORE PUSH1 0x0 PUSH2 0x99B ADD MSTORE PUSH1 0x0 PUSH2 0x171B ADD MSTORE PUSH1 0x0 PUSH2 0x16F3 ADD MSTORE PUSH1 0x0 PUSH2 0x164E ADD MSTORE PUSH1 0x0 PUSH2 0x1678 ADD MSTORE PUSH1 0x0 PUSH2 0x16A2 ADD MSTORE PUSH2 0x2BFE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84B0196E GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xE4D2620E EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xEACCB43F EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91DDADF4 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x904D2022 EQ PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x2811 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST PUSH2 0x309 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH2 0x362 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2845 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x2811 JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST PUSH2 0x2CB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x2811 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST PUSH2 0x210 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x2908 JUMP JUMPDEST PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x2960 JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x29CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH2 0x105B JUMP JUMPDEST PUSH2 0x210 PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4D5 PUSH2 0x4D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x29FD JUMP JUMPDEST PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x523 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54F SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x571 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5B4 DUP2 DUP6 DUP6 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5CE DUP6 DUP3 DUP6 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x5D9 DUP6 DUP6 DUP6 PUSH2 0x1440 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x698 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742073434F44450000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x6A2 CALLER DUP3 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DB PUSH2 0x1641 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x5B4 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x81A SWAP1 DUP8 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x829 PUSH2 0xA9D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8A1 SWAP1 DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0x8B3 PUSH2 0xA9D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x94A CALLER DUP3 PUSH2 0x189D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5BA SWAP1 PUSH2 0x192E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 PUSH2 0x9C1 PUSH32 0x0 PUSH1 0x5 PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x9EC PUSH32 0x0 PUSH1 0x6 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C PUSH2 0xA9D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0xA92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x5BA PUSH1 0xB DUP4 PUSH2 0x176C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DB NUMBER PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x523 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xB59 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 ADD SWAP1 DUP2 LT PUSH2 0xB22 JUMPI PUSH2 0xB22 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x5D9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xC7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH2 0xD77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0xD81 CALLER DUP3 PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A SWAP1 PUSH1 0x20 ADD PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5B4 DUP2 DUP6 DUP6 PUSH2 0x1440 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xE8B SWAP1 PUSH2 0xE83 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1AE1 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 POP PUSH2 0xE96 DUP2 PUSH2 0x1B51 JUMP JUMPDEST DUP7 EQ PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0xEEE DUP2 DUP9 PUSH2 0x189D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xF76 DUP13 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xFD1 DUP3 PUSH2 0x1AE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFE1 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x104F DUP11 DUP11 DUP11 PUSH2 0x1238 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x107E DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH10 0x34F086F3B33B68400000 DUP2 LT PUSH2 0x10CC JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH32 0x506172746E657200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH10 0xA968163F0A57B400000 DUP2 LT PUSH2 0x1118 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH32 0x50726F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP2 LT PUSH2 0x1164 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH32 0x4275696C64657200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH32 0x4672656500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x11E3 JUMPI PUSH2 0x11E3 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x132F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x143A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x142D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x143A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1238 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1538 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x143A DUP5 DUP5 DUP5 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x163D DUP3 DUP3 PUSH2 0x1B89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x169A JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x16C4 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x7DB PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x17C6 JUMPI PUSH1 0x0 PUSH2 0x1787 DUP5 PUSH2 0x1BA1 JUMP JUMPDEST PUSH2 0x1791 SWAP1 DUP6 PUSH2 0x2B1D JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x17B6 JUMPI DUP1 SWAP2 POP PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x17C1 DUP2 PUSH1 0x1 PUSH2 0x2ADB JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1813 JUMPI PUSH1 0x0 PUSH2 0x17DA DUP4 DUP4 PUSH2 0x1C89 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x17FF JUMPI DUP1 SWAP2 POP PUSH2 0x180D JUMP JUMPDEST PUSH2 0x180A DUP2 PUSH1 0x1 PUSH2 0x2ADB JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x17C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1872 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x143A DUP3 DUP5 DUP4 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x19AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x19C8 JUMPI PUSH2 0x19C1 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BA JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x19D4 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A00 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A4D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A22 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A4D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A30 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x163D DUP3 DUP3 PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA PUSH2 0x1AEE PUSH2 0x1641 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1B3A DUP8 DUP8 DUP8 DUP8 PUSH2 0x1ECC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1B47 DUP2 PUSH2 0x1FAE JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1B79 DUP4 DUP4 DUP4 PUSH2 0x2113 JUMP JUMPDEST PUSH2 0x1B93 DUP3 DUP3 PUSH2 0x2145 JUMP JUMPDEST PUSH2 0x143A PUSH1 0xB PUSH2 0x22B5 DUP4 PUSH2 0x22C1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x1BB3 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1BC0 DUP5 PUSH2 0x24C6 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BD9 JUMPI PUSH2 0x1BD9 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BF1 JUMPI PUSH2 0x1BF1 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C09 JUMPI PUSH2 0x1C09 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C21 JUMPI PUSH2 0x1C21 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C39 JUMPI PUSH2 0x1C39 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C51 JUMPI PUSH2 0x1C51 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C69 JUMPI PUSH2 0x1C69 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x8A1 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1C83 JUMPI PUSH2 0x1C83 PUSH2 0x2B30 JUMP JUMPDEST DIV PUSH2 0x255A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C98 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x8A1 SWAP1 DUP5 DUP5 AND PUSH2 0x2ADB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1CC6 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1B79 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1D54 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1D01 SWAP1 PUSH2 0x22B5 DUP6 PUSH2 0x22C1 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D49 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1B79 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1D8A SWAP1 PUSH2 0x2570 DUP6 PUSH2 0x22C1 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DD2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1DEE DUP4 PUSH2 0x257C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x1E2A DUP3 DUP3 PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF LT ISZERO PUSH2 0x1EBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x143A PUSH1 0xB PUSH2 0x2570 DUP4 PUSH2 0x22C1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1F03 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F9E JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC2 PUSH2 0x2B9A JUMP JUMPDEST SUB PUSH2 0x1FCA JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FDE JUMPI PUSH2 0x1FDE PUSH2 0x2B9A JUMP JUMPDEST SUB PUSH2 0x202B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x203F JUMPI PUSH2 0x203F PUSH2 0x2B9A JUMP JUMPDEST SUB PUSH2 0x208C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x20A0 JUMPI PUSH2 0x20A0 PUSH2 0x2B9A JUMP JUMPDEST SUB PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1B79 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x21C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2250 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1B79 DUP4 PUSH1 0x0 DUP5 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A1 DUP3 DUP5 PUSH2 0x2B1D JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 DUP2 ISZERO PUSH2 0x2341 JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x238B DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x23B5 JUMPI POP PUSH2 0x23A0 PUSH2 0xA9D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x242D JUMPI PUSH2 0x23C3 DUP4 PUSH2 0x2684 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP1 SLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x24BC JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2451 PUSH2 0x2444 PUSH2 0xA9D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x192E JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2465 DUP7 PUSH2 0x2684 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 SWAP1 SHR ISZERO PUSH2 0x24DB JUMPI PUSH1 0x80 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x40 DUP4 SWAP1 SHR ISZERO PUSH2 0x24ED JUMPI PUSH1 0x40 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x20 DUP4 SWAP1 SHR ISZERO PUSH2 0x24FF JUMPI PUSH1 0x20 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x10 DUP4 SWAP1 SHR ISZERO PUSH2 0x2511 JUMPI PUSH1 0x10 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x8 DUP4 SWAP1 SHR ISZERO PUSH2 0x2523 JUMPI PUSH1 0x8 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x4 DUP4 SWAP1 SHR ISZERO PUSH2 0x2535 JUMPI PUSH1 0x4 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x2 DUP4 SWAP1 SHR ISZERO PUSH2 0x2547 JUMPI PUSH1 0x2 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x1 DUP4 SWAP1 SHR ISZERO PUSH2 0x5BA JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2569 JUMPI DUP2 PUSH2 0x8A1 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A1 DUP3 DUP5 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2625 SWAP2 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x163D PUSH1 0x0 DUP4 DUP4 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x273E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2722 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2718 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27C7 DUP4 PUSH2 0x278F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27F3 DUP5 PUSH2 0x278F JUMP JUMPDEST SWAP3 POP PUSH2 0x2801 PUSH1 0x20 DUP6 ADD PUSH2 0x278F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x283C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A1 DUP3 PUSH2 0x278F JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x2881 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x2718 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2893 DUP2 DUP11 PUSH2 0x2718 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28E5 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x28C9 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x27A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x292A DUP8 PUSH2 0x278F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2946 PUSH1 0x60 DUP9 ADD PUSH2 0x28F7 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x297B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2984 DUP9 PUSH2 0x278F JUMP JUMPDEST SWAP7 POP PUSH2 0x2992 PUSH1 0x20 DUP10 ADD PUSH2 0x278F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x29AE PUSH1 0x80 DUP10 ADD PUSH2 0x28F7 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29E6 DUP4 PUSH2 0x278F JUMP JUMPDEST SWAP2 POP PUSH2 0x29F4 PUSH1 0x20 DUP5 ADD PUSH2 0x278F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A19 DUP4 PUSH2 0x278F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2A32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A51 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B73 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5BA JUMPI PUSH2 0x5BA PUSH2 0x2AAC JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5BA JUMPI PUSH2 0x5BA PUSH2 0x2AAC JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2B95 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MSTORE 0xD6 DUP3 REVERT 0xA7 0xDF MSTORE 0x5E MULMOD 0xC1 DUP7 0xA5 0xE8 0xC SIGNEXTEND DUP7 0xBD SGT EQ 0x2D MSIZE CALLER PUSH20 0x581EFD5634676D2BA064736F6C63430008140032 ","sourceMap":"466:2496:25:-:0;;;695:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1817:52:9;;;;;;;;;;;;;;;;;1856:4;3178:431:19;;;;;;;;;;;;;-1:-1:-1;;;3178:431:19;;;1980:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:7;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:7;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;3251:45:19;;-1:-1:-1;3251:4:19;;-1:-1:-1;3282:13:19;3251:30;:45::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;:51::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;3289:25:26;3330:18;;;3323:34;;;;3373:18;;;3366:34;4106:13:19;3416:18:26;;;3409:34;4129:4:19;3459:19:26;;;3452:61;4018:7:19;;3261:19:26;;4054:81:19;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:19;3575:27;;-1:-1:-1;;;;;;833:36:25::2;;::::0;466:2496;;2895:341:15;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3142:5;3116:46;3157:5;3142;3116:46;:::i;:::-;-1:-1:-1;1371:66:15;;-1:-1:-1;3014:216:15;2895:341;;;;:::o;1689:286::-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:15;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:15:o;14:290:26:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:26;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:26:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:26;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;1043:448;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:26;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:26;;;2875:26;2826:89;-1:-1:-1;;1630:1:26;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:26;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:26;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:26;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:26:o;3524:548::-;3636:4;3665:2;3694;3683:9;3676:21;3726:6;3720:13;3769:6;3764:2;3753:9;3749:18;3742:34;3794:1;3804:140;3818:6;3815:1;3812:13;3804:140;;;3913:14;;;3909:23;;3903:30;3879:17;;;3898:2;3875:26;3868:66;3833:10;;3804:140;;;3808:3;3993:1;3988:2;3979:6;3968:9;3964:22;3960:31;3953:42;4063:2;4056;4052:7;4047:2;4039:6;4035:15;4031:29;4020:9;4016:45;4012:54;4004:62;;;;3524:548;;;;:::o;4077:297::-;4195:12;;4242:4;4231:16;;;4225:23;;4195:12;4260:16;;4257:111;;;-1:-1:-1;;4334:4:26;4330:17;;;;4327:1;4323:25;4319:38;4308:50;;4077:297;-1:-1:-1;4077:297:26:o;:::-;466:2496:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_1318":{"entryPoint":2216,"id":1318,"parameterSlots":0,"returnSlots":1},"@DOMAIN_SEPARATOR_1219":{"entryPoint":2001,"id":1219,"parameterSlots":0,"returnSlots":1},"@_add_1953":{"entryPoint":9584,"id":1953,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1728":{"entryPoint":8467,"id":1728,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_6975":{"entryPoint":7038,"id":6975,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_998":{"entryPoint":null,"id":998,"parameterSlots":3,"returnSlots":0},"@_approve_933":{"entryPoint":4664,"id":933,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_987":{"entryPoint":7033,"id":987,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3209":{"entryPoint":null,"id":3209,"parameterSlots":0,"returnSlots":1},"@_burn_1698":{"entryPoint":7049,"id":1698,"parameterSlots":2,"returnSlots":0},"@_burn_7011":{"entryPoint":5683,"id":7011,"parameterSlots":2,"returnSlots":0},"@_burn_888":{"entryPoint":8517,"id":888,"parameterSlots":2,"returnSlots":0},"@_checkpointsLookup_1556":{"entryPoint":5996,"id":1556,"parameterSlots":2,"returnSlots":1},"@_delegate_1767":{"entryPoint":6301,"id":1767,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3188":{"entryPoint":5697,"id":3188,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3225":{"entryPoint":6881,"id":3225,"parameterSlots":1,"returnSlots":1},"@_maxSupply_1643":{"entryPoint":null,"id":1643,"parameterSlots":0,"returnSlots":1},"@_mint_1675":{"entryPoint":7712,"id":1675,"parameterSlots":2,"returnSlots":0},"@_mint_6993":{"entryPoint":6871,"id":6993,"parameterSlots":2,"returnSlots":0},"@_mint_816":{"entryPoint":9661,"id":816,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_1838":{"entryPoint":7332,"id":1838,"parameterSlots":3,"returnSlots":0},"@_msgSender_2056":{"entryPoint":null,"id":2056,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_976":{"entryPoint":5008,"id":976,"parameterSlots":3,"returnSlots":0},"@_subtract_1967":{"entryPoint":8885,"id":1967,"parameterSlots":2,"returnSlots":1},"@_throwError_2757":{"entryPoint":8110,"id":2757,"parameterSlots":1,"returnSlots":0},"@_transfer_759":{"entryPoint":5184,"id":759,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_1982":{"entryPoint":null,"id":1982,"parameterSlots":2,"returnSlots":1},"@_useNonce_1248":{"entryPoint":6993,"id":1248,"parameterSlots":1,"returnSlots":1},"@_writeCheckpoint_1939":{"entryPoint":8897,"id":1939,"parameterSlots":3,"returnSlots":2},"@allowance_554":{"entryPoint":null,"id":554,"parameterSlots":2,"returnSlots":1},"@approve_579":{"entryPoint":1446,"id":579,"parameterSlots":2,"returnSlots":1},"@average_3339":{"entryPoint":7305,"id":3339,"parameterSlots":2,"returnSlots":1},"@balanceOf_511":{"entryPoint":null,"id":511,"parameterSlots":1,"returnSlots":1},"@byteLength_2265":{"entryPoint":9596,"id":2265,"parameterSlots":1,"returnSlots":1},"@checkpoints_1336":{"entryPoint":4511,"id":1336,"parameterSlots":2,"returnSlots":1},"@clock_1299":{"entryPoint":2717,"id":1299,"parameterSlots":0,"returnSlots":1},"@codeToken_6785":{"entryPoint":null,"id":6785,"parameterSlots":0,"returnSlots":0},"@current_2092":{"entryPoint":null,"id":2092,"parameterSlots":1,"returnSlots":1},"@decimals_487":{"entryPoint":null,"id":487,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_682":{"entryPoint":2945,"id":682,"parameterSlots":2,"returnSlots":1},"@delegateBySig_1630":{"entryPoint":3521,"id":1630,"parameterSlots":6,"returnSlots":0},"@delegate_1570":{"entryPoint":2368,"id":1570,"parameterSlots":1,"returnSlots":0},"@delegates_1367":{"entryPoint":null,"id":1367,"parameterSlots":1,"returnSlots":1},"@eip712Domain_3272":{"entryPoint":2445,"id":3272,"parameterSlots":0,"returnSlots":7},"@getPastTotalSupply_1449":{"entryPoint":2610,"id":1449,"parameterSlots":1,"returnSlots":1},"@getPastVotes_1426":{"entryPoint":2079,"id":1426,"parameterSlots":2,"returnSlots":1},"@getUserTier_6937":{"entryPoint":4187,"id":6937,"parameterSlots":1,"returnSlots":1},"@getVotes_1399":{"entryPoint":2743,"id":1399,"parameterSlots":1,"returnSlots":1},"@hasMinStake_6954":{"entryPoint":null,"id":6954,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_641":{"entryPoint":2016,"id":641,"parameterSlots":2,"returnSlots":1},"@increment_2106":{"entryPoint":null,"id":2106,"parameterSlots":1,"returnSlots":0},"@log2_3811":{"entryPoint":9414,"id":3811,"parameterSlots":1,"returnSlots":1},"@min_3316":{"entryPoint":9562,"id":3316,"parameterSlots":2,"returnSlots":1},"@name_467":{"entryPoint":1300,"id":467,"parameterSlots":0,"returnSlots":1},"@nonces_1208":{"entryPoint":2415,"id":1208,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1353":{"entryPoint":2381,"id":1353,"parameterSlots":1,"returnSlots":1},"@permit_1192":{"entryPoint":3831,"id":1192,"parameterSlots":7,"returnSlots":0},"@recover_3004":{"entryPoint":6953,"id":3004,"parameterSlots":4,"returnSlots":1},"@sqrt_3643":{"entryPoint":7073,"id":3643,"parameterSlots":1,"returnSlots":1},"@stake_6856":{"entryPoint":3115,"id":6856,"parameterSlots":1,"returnSlots":0},"@symbol_477":{"entryPoint":2728,"id":477,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2332":{"entryPoint":6574,"id":2332,"parameterSlots":2,"returnSlots":1},"@toString_2233":{"entryPoint":7649,"id":2233,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3048":{"entryPoint":null,"id":3048,"parameterSlots":2,"returnSlots":1},"@toUint224_4242":{"entryPoint":9860,"id":4242,"parameterSlots":1,"returnSlots":1},"@toUint32_4842":{"entryPoint":6446,"id":4842,"parameterSlots":1,"returnSlots":1},"@toUint48_4792":{"entryPoint":6745,"id":4792,"parameterSlots":1,"returnSlots":1},"@totalSupply_497":{"entryPoint":null,"id":497,"parameterSlots":0,"returnSlots":1},"@transferFrom_612":{"entryPoint":1472,"id":612,"parameterSlots":3,"returnSlots":1},"@transfer_536":{"entryPoint":3507,"id":536,"parameterSlots":2,"returnSlots":1},"@tryRecover_2971":{"entryPoint":7884,"id":2971,"parameterSlots":4,"returnSlots":2},"@unstake_6902":{"entryPoint":1508,"id":6902,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":10127,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10282,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10698,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10197,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":10592,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10155,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":10504,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":10749,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":10890,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10257,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8":{"entryPoint":10487,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":10008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10309,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_CodeDAOToken_$5977__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10108,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_376bd67dfe7d48d0c996c140eeda4a03af0414697042695ac28ada5806e468db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint_$1266_memory_ptr__to_t_struct$_Checkpoint_$1266_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10971,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11103,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11037,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":10813,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10924,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11056,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11162,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10990,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22217:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"64:432:26","statements":[{"nodeType":"YulVariableDeclaration","src":"74:26:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"94:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"88:5:26"},"nodeType":"YulFunctionCall","src":"88:12:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"78:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"116:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"121:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109:6:26"},"nodeType":"YulFunctionCall","src":"109:19:26"},"nodeType":"YulExpressionStatement","src":"109:19:26"},{"nodeType":"YulVariableDeclaration","src":"137:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"146:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"141:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"208:110:26","statements":[{"nodeType":"YulVariableDeclaration","src":"222:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"232:4:26","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"226:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"264:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"269:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"260:3:26"},"nodeType":"YulFunctionCall","src":"260:11:26"},{"name":"_1","nodeType":"YulIdentifier","src":"273:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"256:3:26"},"nodeType":"YulFunctionCall","src":"256:20:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:26"},{"name":"i","nodeType":"YulIdentifier","src":"299:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:26"},"nodeType":"YulFunctionCall","src":"288:13:26"},{"name":"_1","nodeType":"YulIdentifier","src":"303:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"284:3:26"},"nodeType":"YulFunctionCall","src":"284:22:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"278:5:26"},"nodeType":"YulFunctionCall","src":"278:29:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"249:6:26"},"nodeType":"YulFunctionCall","src":"249:59:26"},"nodeType":"YulExpressionStatement","src":"249:59:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"167:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"170:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"164:2:26"},"nodeType":"YulFunctionCall","src":"164:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"178:21:26","statements":[{"nodeType":"YulAssignment","src":"180:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"189:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"192:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"185:3:26"},"nodeType":"YulFunctionCall","src":"185:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"180:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"160:3:26","statements":[]},"src":"156:162:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"342:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"347:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"338:3:26"},"nodeType":"YulFunctionCall","src":"338:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"356:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"334:3:26"},"nodeType":"YulFunctionCall","src":"334:27:26"},{"kind":"number","nodeType":"YulLiteral","src":"363:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"327:6:26"},"nodeType":"YulFunctionCall","src":"327:38:26"},"nodeType":"YulExpressionStatement","src":"327:38:26"},{"nodeType":"YulAssignment","src":"374:116:26","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"389:3:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"402:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"398:3:26"},"nodeType":"YulFunctionCall","src":"398:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"415:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"394:3:26"},"nodeType":"YulFunctionCall","src":"394:88:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"385:3:26"},"nodeType":"YulFunctionCall","src":"385:98:26"},{"kind":"number","nodeType":"YulLiteral","src":"485:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"381:3:26"},"nodeType":"YulFunctionCall","src":"381:109:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"374:3:26"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56:3:26","type":""}],"src":"14:482:26"},{"body":{"nodeType":"YulBlock","src":"622:99:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"639:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"650:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"632:6:26"},"nodeType":"YulFunctionCall","src":"632:21:26"},"nodeType":"YulExpressionStatement","src":"632:21:26"},{"nodeType":"YulAssignment","src":"662:53:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"688:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"700:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"711:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"696:3:26"},"nodeType":"YulFunctionCall","src":"696:18:26"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"670:17:26"},"nodeType":"YulFunctionCall","src":"670:45:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"662:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"591:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"602:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"613:4:26","type":""}],"src":"501:220:26"},{"body":{"nodeType":"YulBlock","src":"775:147:26","statements":[{"nodeType":"YulAssignment","src":"785:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"807:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"794:12:26"},"nodeType":"YulFunctionCall","src":"794:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"785:5:26"}]},{"body":{"nodeType":"YulBlock","src":"900:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"909:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"912:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"902:6:26"},"nodeType":"YulFunctionCall","src":"902:12:26"},"nodeType":"YulExpressionStatement","src":"902:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"836:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"847:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"854:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"843:3:26"},"nodeType":"YulFunctionCall","src":"843:54:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"833:2:26"},"nodeType":"YulFunctionCall","src":"833:65:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"826:6:26"},"nodeType":"YulFunctionCall","src":"826:73:26"},"nodeType":"YulIf","src":"823:93:26"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"754:6:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"765:5:26","type":""}],"src":"726:196:26"},{"body":{"nodeType":"YulBlock","src":"1014:167:26","statements":[{"body":{"nodeType":"YulBlock","src":"1060:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1069:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1072:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1062:6:26"},"nodeType":"YulFunctionCall","src":"1062:12:26"},"nodeType":"YulExpressionStatement","src":"1062:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1035:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1044:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1031:3:26"},"nodeType":"YulFunctionCall","src":"1031:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1056:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1027:3:26"},"nodeType":"YulFunctionCall","src":"1027:32:26"},"nodeType":"YulIf","src":"1024:52:26"},{"nodeType":"YulAssignment","src":"1085:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1114:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1095:18:26"},"nodeType":"YulFunctionCall","src":"1095:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1085:6:26"}]},{"nodeType":"YulAssignment","src":"1133:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1160:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1171:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1156:3:26"},"nodeType":"YulFunctionCall","src":"1156:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1143:12:26"},"nodeType":"YulFunctionCall","src":"1143:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1133:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"972:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"983:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"995:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1003:6:26","type":""}],"src":"927:254:26"},{"body":{"nodeType":"YulBlock","src":"1281:92:26","statements":[{"nodeType":"YulAssignment","src":"1291:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1303:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1314:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1299:3:26"},"nodeType":"YulFunctionCall","src":"1299:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1291:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1333:9:26"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1358:6:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1351:6:26"},"nodeType":"YulFunctionCall","src":"1351:14:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1344:6:26"},"nodeType":"YulFunctionCall","src":"1344:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1326:6:26"},"nodeType":"YulFunctionCall","src":"1326:41:26"},"nodeType":"YulExpressionStatement","src":"1326:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1250:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1261:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1272:4:26","type":""}],"src":"1186:187:26"},{"body":{"nodeType":"YulBlock","src":"1479:76:26","statements":[{"nodeType":"YulAssignment","src":"1489:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1501:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1512:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1497:3:26"},"nodeType":"YulFunctionCall","src":"1497:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1489:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1531:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"1542:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1524:6:26"},"nodeType":"YulFunctionCall","src":"1524:25:26"},"nodeType":"YulExpressionStatement","src":"1524:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1448:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1459:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1470:4:26","type":""}],"src":"1378:177:26"},{"body":{"nodeType":"YulBlock","src":"1664:224:26","statements":[{"body":{"nodeType":"YulBlock","src":"1710:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1719:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1712:6:26"},"nodeType":"YulFunctionCall","src":"1712:12:26"},"nodeType":"YulExpressionStatement","src":"1712:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1685:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1694:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1681:3:26"},"nodeType":"YulFunctionCall","src":"1681:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1706:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1677:3:26"},"nodeType":"YulFunctionCall","src":"1677:32:26"},"nodeType":"YulIf","src":"1674:52:26"},{"nodeType":"YulAssignment","src":"1735:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1764:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1745:18:26"},"nodeType":"YulFunctionCall","src":"1745:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1735:6:26"}]},{"nodeType":"YulAssignment","src":"1783:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1816:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1827:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:26"},"nodeType":"YulFunctionCall","src":"1812:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1793:18:26"},"nodeType":"YulFunctionCall","src":"1793:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1783:6:26"}]},{"nodeType":"YulAssignment","src":"1840:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1867:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1878:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1863:3:26"},"nodeType":"YulFunctionCall","src":"1863:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1850:12:26"},"nodeType":"YulFunctionCall","src":"1850:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1840:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1614:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1625:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1637:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1645:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1653:6:26","type":""}],"src":"1560:328:26"},{"body":{"nodeType":"YulBlock","src":"1963:110:26","statements":[{"body":{"nodeType":"YulBlock","src":"2009:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2018:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2021:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2011:6:26"},"nodeType":"YulFunctionCall","src":"2011:12:26"},"nodeType":"YulExpressionStatement","src":"2011:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1984:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1993:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1980:3:26"},"nodeType":"YulFunctionCall","src":"1980:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2005:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1976:3:26"},"nodeType":"YulFunctionCall","src":"1976:32:26"},"nodeType":"YulIf","src":"1973:52:26"},{"nodeType":"YulAssignment","src":"2034:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2057:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2044:12:26"},"nodeType":"YulFunctionCall","src":"2044:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2034:6:26"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1929:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1940:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1952:6:26","type":""}],"src":"1893:180:26"},{"body":{"nodeType":"YulBlock","src":"2175:87:26","statements":[{"nodeType":"YulAssignment","src":"2185:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2197:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2208:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2193:3:26"},"nodeType":"YulFunctionCall","src":"2193:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2185:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2227:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2242:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2250:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2238:3:26"},"nodeType":"YulFunctionCall","src":"2238:17:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2220:6:26"},"nodeType":"YulFunctionCall","src":"2220:36:26"},"nodeType":"YulExpressionStatement","src":"2220:36:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2144:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2155:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2166:4:26","type":""}],"src":"2078:184:26"},{"body":{"nodeType":"YulBlock","src":"2368:76:26","statements":[{"nodeType":"YulAssignment","src":"2378:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2390:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2401:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2386:3:26"},"nodeType":"YulFunctionCall","src":"2386:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2378:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2420:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"2431:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2413:6:26"},"nodeType":"YulFunctionCall","src":"2413:25:26"},"nodeType":"YulExpressionStatement","src":"2413:25:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2337:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2348:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2359:4:26","type":""}],"src":"2267:177:26"},{"body":{"nodeType":"YulBlock","src":"2519:116:26","statements":[{"body":{"nodeType":"YulBlock","src":"2565:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2574:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2577:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2567:6:26"},"nodeType":"YulFunctionCall","src":"2567:12:26"},"nodeType":"YulExpressionStatement","src":"2567:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2540:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2549:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2536:3:26"},"nodeType":"YulFunctionCall","src":"2536:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2561:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2532:3:26"},"nodeType":"YulFunctionCall","src":"2532:32:26"},"nodeType":"YulIf","src":"2529:52:26"},{"nodeType":"YulAssignment","src":"2590:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2619:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2600:18:26"},"nodeType":"YulFunctionCall","src":"2600:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2590:6:26"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2485:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2496:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2508:6:26","type":""}],"src":"2449:186:26"},{"body":{"nodeType":"YulBlock","src":"2741:125:26","statements":[{"nodeType":"YulAssignment","src":"2751:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2763:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2774:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2759:3:26"},"nodeType":"YulFunctionCall","src":"2759:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2751:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2793:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2808:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2816:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2804:3:26"},"nodeType":"YulFunctionCall","src":"2804:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2786:6:26"},"nodeType":"YulFunctionCall","src":"2786:74:26"},"nodeType":"YulExpressionStatement","src":"2786:74:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2710:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2721:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2732:4:26","type":""}],"src":"2640:226:26"},{"body":{"nodeType":"YulBlock","src":"2970:93:26","statements":[{"nodeType":"YulAssignment","src":"2980:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2992:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3003:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2988:3:26"},"nodeType":"YulFunctionCall","src":"2988:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2980:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3022:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3037:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3045:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3033:3:26"},"nodeType":"YulFunctionCall","src":"3033:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3015:6:26"},"nodeType":"YulFunctionCall","src":"3015:42:26"},"nodeType":"YulExpressionStatement","src":"3015:42:26"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2939:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2950:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2961:4:26","type":""}],"src":"2871:192:26"},{"body":{"nodeType":"YulBlock","src":"3425:978:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3442:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3457:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3465:66:26","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3453:3:26"},"nodeType":"YulFunctionCall","src":"3453:79:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3435:6:26"},"nodeType":"YulFunctionCall","src":"3435:98:26"},"nodeType":"YulExpressionStatement","src":"3435:98:26"},{"nodeType":"YulVariableDeclaration","src":"3542:12:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3552:2:26","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3546:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3574:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"3585:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3570:3:26"},"nodeType":"YulFunctionCall","src":"3570:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"3590:3:26","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3563:6:26"},"nodeType":"YulFunctionCall","src":"3563:31:26"},"nodeType":"YulExpressionStatement","src":"3563:31:26"},{"nodeType":"YulVariableDeclaration","src":"3603:60:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3635:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3647:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3658:3:26","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3643:3:26"},"nodeType":"YulFunctionCall","src":"3643:19:26"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3617:17:26"},"nodeType":"YulFunctionCall","src":"3617:46:26"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3607:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3683:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3694:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3679:3:26"},"nodeType":"YulFunctionCall","src":"3679:18:26"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3703:6:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3711:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3699:3:26"},"nodeType":"YulFunctionCall","src":"3699:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3672:6:26"},"nodeType":"YulFunctionCall","src":"3672:50:26"},"nodeType":"YulExpressionStatement","src":"3672:50:26"},{"nodeType":"YulVariableDeclaration","src":"3731:47:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3763:6:26"},{"name":"tail_1","nodeType":"YulIdentifier","src":"3771:6:26"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3745:17:26"},"nodeType":"YulFunctionCall","src":"3745:33:26"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"3735:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3798:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3809:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3794:3:26"},"nodeType":"YulFunctionCall","src":"3794:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"3814:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3787:6:26"},"nodeType":"YulFunctionCall","src":"3787:34:26"},"nodeType":"YulExpressionStatement","src":"3787:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3841:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3852:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3837:3:26"},"nodeType":"YulFunctionCall","src":"3837:19:26"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3862:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3870:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3858:3:26"},"nodeType":"YulFunctionCall","src":"3858:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3830:6:26"},"nodeType":"YulFunctionCall","src":"3830:84:26"},"nodeType":"YulExpressionStatement","src":"3830:84:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3934:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3945:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3930:3:26"},"nodeType":"YulFunctionCall","src":"3930:19:26"},{"name":"value5","nodeType":"YulIdentifier","src":"3951:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3923:6:26"},"nodeType":"YulFunctionCall","src":"3923:35:26"},"nodeType":"YulExpressionStatement","src":"3923:35:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3978:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3989:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3974:3:26"},"nodeType":"YulFunctionCall","src":"3974:19:26"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"3999:6:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4007:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3995:3:26"},"nodeType":"YulFunctionCall","src":"3995:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3967:6:26"},"nodeType":"YulFunctionCall","src":"3967:51:26"},"nodeType":"YulExpressionStatement","src":"3967:51:26"},{"nodeType":"YulVariableDeclaration","src":"4027:17:26","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"4038:6:26"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4031:3:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4053:27:26","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"4073:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4067:5:26"},"nodeType":"YulFunctionCall","src":"4067:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4057:6:26","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4096:6:26"},{"name":"length","nodeType":"YulIdentifier","src":"4104:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4089:6:26"},"nodeType":"YulFunctionCall","src":"4089:22:26"},"nodeType":"YulExpressionStatement","src":"4089:22:26"},{"nodeType":"YulAssignment","src":"4120:22:26","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4131:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"4139:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4127:3:26"},"nodeType":"YulFunctionCall","src":"4127:15:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4120:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"4151:29:26","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"4169:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"4177:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4165:3:26"},"nodeType":"YulFunctionCall","src":"4165:15:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4155:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4189:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4198:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4193:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4257:120:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4278:3:26"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4289:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4283:5:26"},"nodeType":"YulFunctionCall","src":"4283:13:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4271:6:26"},"nodeType":"YulFunctionCall","src":"4271:26:26"},"nodeType":"YulExpressionStatement","src":"4271:26:26"},{"nodeType":"YulAssignment","src":"4310:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4321:3:26"},{"name":"_1","nodeType":"YulIdentifier","src":"4326:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4317:3:26"},"nodeType":"YulFunctionCall","src":"4317:12:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4310:3:26"}]},{"nodeType":"YulAssignment","src":"4342:25:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4356:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"4364:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4352:3:26"},"nodeType":"YulFunctionCall","src":"4352:15:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4342:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4219:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"4222:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4216:2:26"},"nodeType":"YulFunctionCall","src":"4216:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4230:18:26","statements":[{"nodeType":"YulAssignment","src":"4232:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4241:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"4244:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4237:3:26"},"nodeType":"YulFunctionCall","src":"4237:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4232:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"4212:3:26","statements":[]},"src":"4208:169:26"},{"nodeType":"YulAssignment","src":"4386:11:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"4394:3:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4386:4:26"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3346:9:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3357:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3365:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3373:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3381:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3389:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3397:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3405:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3416:4:26","type":""}],"src":"3068:1335:26"},{"body":{"nodeType":"YulBlock","src":"4530:125:26","statements":[{"nodeType":"YulAssignment","src":"4540:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4552:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4563:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4548:3:26"},"nodeType":"YulFunctionCall","src":"4548:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4540:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4582:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4597:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4605:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4593:3:26"},"nodeType":"YulFunctionCall","src":"4593:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4575:6:26"},"nodeType":"YulFunctionCall","src":"4575:74:26"},"nodeType":"YulExpressionStatement","src":"4575:74:26"}]},"name":"abi_encode_tuple_t_contract$_CodeDAOToken_$5977__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4499:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4510:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4521:4:26","type":""}],"src":"4408:247:26"},{"body":{"nodeType":"YulBlock","src":"4759:97:26","statements":[{"nodeType":"YulAssignment","src":"4769:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4781:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4792:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4777:3:26"},"nodeType":"YulFunctionCall","src":"4777:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4769:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4811:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4826:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4834:14:26","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4822:3:26"},"nodeType":"YulFunctionCall","src":"4822:27:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4804:6:26"},"nodeType":"YulFunctionCall","src":"4804:46:26"},"nodeType":"YulExpressionStatement","src":"4804:46:26"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4728:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4739:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4750:4:26","type":""}],"src":"4660:196:26"},{"body":{"nodeType":"YulBlock","src":"4908:109:26","statements":[{"nodeType":"YulAssignment","src":"4918:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4940:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4927:12:26"},"nodeType":"YulFunctionCall","src":"4927:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4918:5:26"}]},{"body":{"nodeType":"YulBlock","src":"4995:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5004:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5007:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4997:6:26"},"nodeType":"YulFunctionCall","src":"4997:12:26"},"nodeType":"YulExpressionStatement","src":"4997:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4969:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4980:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4987:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4976:3:26"},"nodeType":"YulFunctionCall","src":"4976:16:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4966:2:26"},"nodeType":"YulFunctionCall","src":"4966:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4959:6:26"},"nodeType":"YulFunctionCall","src":"4959:35:26"},"nodeType":"YulIf","src":"4956:55:26"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4887:6:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4898:5:26","type":""}],"src":"4861:156:26"},{"body":{"nodeType":"YulBlock","src":"5175:378:26","statements":[{"body":{"nodeType":"YulBlock","src":"5222:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5231:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5234:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5224:6:26"},"nodeType":"YulFunctionCall","src":"5224:12:26"},"nodeType":"YulExpressionStatement","src":"5224:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5196:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5205:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5192:3:26"},"nodeType":"YulFunctionCall","src":"5192:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5217:3:26","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5188:3:26"},"nodeType":"YulFunctionCall","src":"5188:33:26"},"nodeType":"YulIf","src":"5185:53:26"},{"nodeType":"YulAssignment","src":"5247:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5276:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5257:18:26"},"nodeType":"YulFunctionCall","src":"5257:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5247:6:26"}]},{"nodeType":"YulAssignment","src":"5295:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5322:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5333:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5318:3:26"},"nodeType":"YulFunctionCall","src":"5318:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5305:12:26"},"nodeType":"YulFunctionCall","src":"5305:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5295:6:26"}]},{"nodeType":"YulAssignment","src":"5346:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5373:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5384:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5369:3:26"},"nodeType":"YulFunctionCall","src":"5369:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5356:12:26"},"nodeType":"YulFunctionCall","src":"5356:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5346:6:26"}]},{"nodeType":"YulAssignment","src":"5397:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5428:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5439:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5424:3:26"},"nodeType":"YulFunctionCall","src":"5424:18:26"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"5407:16:26"},"nodeType":"YulFunctionCall","src":"5407:36:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5397:6:26"}]},{"nodeType":"YulAssignment","src":"5452:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5490:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:26"},"nodeType":"YulFunctionCall","src":"5475:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5462:12:26"},"nodeType":"YulFunctionCall","src":"5462:33:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5452:6:26"}]},{"nodeType":"YulAssignment","src":"5504:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5531:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5542:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5527:3:26"},"nodeType":"YulFunctionCall","src":"5527:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5514:12:26"},"nodeType":"YulFunctionCall","src":"5514:33:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5504:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5101:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5112:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5124:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5132:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5140:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5148:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5156:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5164:6:26","type":""}],"src":"5022:531:26"},{"body":{"nodeType":"YulBlock","src":"5728:436:26","statements":[{"body":{"nodeType":"YulBlock","src":"5775:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5784:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5787:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5777:6:26"},"nodeType":"YulFunctionCall","src":"5777:12:26"},"nodeType":"YulExpressionStatement","src":"5777:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5749:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5758:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5745:3:26"},"nodeType":"YulFunctionCall","src":"5745:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5770:3:26","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5741:3:26"},"nodeType":"YulFunctionCall","src":"5741:33:26"},"nodeType":"YulIf","src":"5738:53:26"},{"nodeType":"YulAssignment","src":"5800:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5829:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5810:18:26"},"nodeType":"YulFunctionCall","src":"5810:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5800:6:26"}]},{"nodeType":"YulAssignment","src":"5848:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5881:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5892:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5877:3:26"},"nodeType":"YulFunctionCall","src":"5877:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5858:18:26"},"nodeType":"YulFunctionCall","src":"5858:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5848:6:26"}]},{"nodeType":"YulAssignment","src":"5905:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5932:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5943:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5928:3:26"},"nodeType":"YulFunctionCall","src":"5928:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5915:12:26"},"nodeType":"YulFunctionCall","src":"5915:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5905:6:26"}]},{"nodeType":"YulAssignment","src":"5956:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5983:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5994:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5979:3:26"},"nodeType":"YulFunctionCall","src":"5979:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5966:12:26"},"nodeType":"YulFunctionCall","src":"5966:32:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5956:6:26"}]},{"nodeType":"YulAssignment","src":"6007:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6038:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6049:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6034:3:26"},"nodeType":"YulFunctionCall","src":"6034:19:26"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"6017:16:26"},"nodeType":"YulFunctionCall","src":"6017:37:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6007:6:26"}]},{"nodeType":"YulAssignment","src":"6063:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6090:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6101:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6086:3:26"},"nodeType":"YulFunctionCall","src":"6086:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6073:12:26"},"nodeType":"YulFunctionCall","src":"6073:33:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"6063:6:26"}]},{"nodeType":"YulAssignment","src":"6115:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6153:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:26"},"nodeType":"YulFunctionCall","src":"6138:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6125:12:26"},"nodeType":"YulFunctionCall","src":"6125:33:26"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"6115:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5646:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5657:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5669:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5677:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5685:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5693:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5701:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5709:6:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5717:6:26","type":""}],"src":"5558:606:26"},{"body":{"nodeType":"YulBlock","src":"6256:173:26","statements":[{"body":{"nodeType":"YulBlock","src":"6302:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6311:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6314:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6304:6:26"},"nodeType":"YulFunctionCall","src":"6304:12:26"},"nodeType":"YulExpressionStatement","src":"6304:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6277:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6286:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6273:3:26"},"nodeType":"YulFunctionCall","src":"6273:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6298:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6269:3:26"},"nodeType":"YulFunctionCall","src":"6269:32:26"},"nodeType":"YulIf","src":"6266:52:26"},{"nodeType":"YulAssignment","src":"6327:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6356:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6337:18:26"},"nodeType":"YulFunctionCall","src":"6337:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6327:6:26"}]},{"nodeType":"YulAssignment","src":"6375:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6408:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6419:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6404:3:26"},"nodeType":"YulFunctionCall","src":"6404:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6385:18:26"},"nodeType":"YulFunctionCall","src":"6385:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6375:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6214:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6225:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6237:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6245:6:26","type":""}],"src":"6169:260:26"},{"body":{"nodeType":"YulBlock","src":"6520:264:26","statements":[{"body":{"nodeType":"YulBlock","src":"6566:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6575:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6578:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6568:6:26"},"nodeType":"YulFunctionCall","src":"6568:12:26"},"nodeType":"YulExpressionStatement","src":"6568:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6541:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6550:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6537:3:26"},"nodeType":"YulFunctionCall","src":"6537:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6562:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6533:3:26"},"nodeType":"YulFunctionCall","src":"6533:32:26"},"nodeType":"YulIf","src":"6530:52:26"},{"nodeType":"YulAssignment","src":"6591:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6620:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6601:18:26"},"nodeType":"YulFunctionCall","src":"6601:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6591:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"6639:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6669:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6680:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6665:3:26"},"nodeType":"YulFunctionCall","src":"6665:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6652:12:26"},"nodeType":"YulFunctionCall","src":"6652:32:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6643:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6738:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6747:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6750:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6740:6:26"},"nodeType":"YulFunctionCall","src":"6740:12:26"},"nodeType":"YulExpressionStatement","src":"6740:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6706:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6717:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"6724:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6713:3:26"},"nodeType":"YulFunctionCall","src":"6713:22:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6703:2:26"},"nodeType":"YulFunctionCall","src":"6703:33:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6696:6:26"},"nodeType":"YulFunctionCall","src":"6696:41:26"},"nodeType":"YulIf","src":"6693:61:26"},{"nodeType":"YulAssignment","src":"6763:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"6773:5:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6763:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6478:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6489:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6501:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6509:6:26","type":""}],"src":"6434:350:26"},{"body":{"nodeType":"YulBlock","src":"6946:228:26","statements":[{"nodeType":"YulAssignment","src":"6956:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6968:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6979:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6964:3:26"},"nodeType":"YulFunctionCall","src":"6964:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6956:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6998:9:26"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7019:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7013:5:26"},"nodeType":"YulFunctionCall","src":"7013:13:26"},{"kind":"number","nodeType":"YulLiteral","src":"7028:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7009:3:26"},"nodeType":"YulFunctionCall","src":"7009:30:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6991:6:26"},"nodeType":"YulFunctionCall","src":"6991:49:26"},"nodeType":"YulExpressionStatement","src":"6991:49:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7060:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7071:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7056:3:26"},"nodeType":"YulFunctionCall","src":"7056:20:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7092:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7100:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7088:3:26"},"nodeType":"YulFunctionCall","src":"7088:17:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7082:5:26"},"nodeType":"YulFunctionCall","src":"7082:24:26"},{"kind":"number","nodeType":"YulLiteral","src":"7108:58:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7078:3:26"},"nodeType":"YulFunctionCall","src":"7078:89:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7049:6:26"},"nodeType":"YulFunctionCall","src":"7049:119:26"},"nodeType":"YulExpressionStatement","src":"7049:119:26"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$1266_memory_ptr__to_t_struct$_Checkpoint_$1266_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6915:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6926:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6937:4:26","type":""}],"src":"6789:385:26"},{"body":{"nodeType":"YulBlock","src":"7234:382:26","statements":[{"nodeType":"YulAssignment","src":"7244:22:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7258:1:26","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7261:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7254:3:26"},"nodeType":"YulFunctionCall","src":"7254:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7244:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"7275:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7305:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7311:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7301:3:26"},"nodeType":"YulFunctionCall","src":"7301:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7279:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7352:31:26","statements":[{"nodeType":"YulAssignment","src":"7354:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7368:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7364:3:26"},"nodeType":"YulFunctionCall","src":"7364:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7354:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7332:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7325:6:26"},"nodeType":"YulFunctionCall","src":"7325:26:26"},"nodeType":"YulIf","src":"7322:61:26"},{"body":{"nodeType":"YulBlock","src":"7442:168:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7463:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7466:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7456:6:26"},"nodeType":"YulFunctionCall","src":"7456:88:26"},"nodeType":"YulExpressionStatement","src":"7456:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7564:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7567:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7557:6:26"},"nodeType":"YulFunctionCall","src":"7557:15:26"},"nodeType":"YulExpressionStatement","src":"7557:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7592:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7595:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7585:6:26"},"nodeType":"YulFunctionCall","src":"7585:15:26"},"nodeType":"YulExpressionStatement","src":"7585:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7398:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7421:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7429:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7418:2:26"},"nodeType":"YulFunctionCall","src":"7418:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7395:2:26"},"nodeType":"YulFunctionCall","src":"7395:38:26"},"nodeType":"YulIf","src":"7392:218:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7214:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7223:6:26","type":""}],"src":"7179:437:26"},{"body":{"nodeType":"YulBlock","src":"7795:168:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7812:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7823:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7805:6:26"},"nodeType":"YulFunctionCall","src":"7805:21:26"},"nodeType":"YulExpressionStatement","src":"7805:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7846:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7857:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7842:3:26"},"nodeType":"YulFunctionCall","src":"7842:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"7862:2:26","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7835:6:26"},"nodeType":"YulFunctionCall","src":"7835:30:26"},"nodeType":"YulExpressionStatement","src":"7835:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7885:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7896:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7881:3:26"},"nodeType":"YulFunctionCall","src":"7881:18:26"},{"hexValue":"416d6f756e74206d757374206265203e2030","kind":"string","nodeType":"YulLiteral","src":"7901:20:26","type":"","value":"Amount must be > 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7874:6:26"},"nodeType":"YulFunctionCall","src":"7874:48:26"},"nodeType":"YulExpressionStatement","src":"7874:48:26"},{"nodeType":"YulAssignment","src":"7931:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7943:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7954:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7939:3:26"},"nodeType":"YulFunctionCall","src":"7939:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7931:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7772:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7786:4:26","type":""}],"src":"7621:342:26"},{"body":{"nodeType":"YulBlock","src":"8142:168:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8159:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8170:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8152:6:26"},"nodeType":"YulFunctionCall","src":"8152:21:26"},"nodeType":"YulExpressionStatement","src":"8152:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8193:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8204:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8189:3:26"},"nodeType":"YulFunctionCall","src":"8189:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"8209:2:26","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8182:6:26"},"nodeType":"YulFunctionCall","src":"8182:30:26"},"nodeType":"YulExpressionStatement","src":"8182:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8232:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8243:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8228:3:26"},"nodeType":"YulFunctionCall","src":"8228:18:26"},{"hexValue":"496e73756666696369656e742073434f4445","kind":"string","nodeType":"YulLiteral","src":"8248:20:26","type":"","value":"Insufficient sCODE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8221:6:26"},"nodeType":"YulFunctionCall","src":"8221:48:26"},"nodeType":"YulExpressionStatement","src":"8221:48:26"},{"nodeType":"YulAssignment","src":"8278:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8290:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8301:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8286:3:26"},"nodeType":"YulFunctionCall","src":"8286:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8278:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_376bd67dfe7d48d0c996c140eeda4a03af0414697042695ac28ada5806e468db__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8119:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8133:4:26","type":""}],"src":"7968:342:26"},{"body":{"nodeType":"YulBlock","src":"8444:168:26","statements":[{"nodeType":"YulAssignment","src":"8454:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8466:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8477:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8462:3:26"},"nodeType":"YulFunctionCall","src":"8462:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8454:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8496:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8511:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8519:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8507:3:26"},"nodeType":"YulFunctionCall","src":"8507:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8489:6:26"},"nodeType":"YulFunctionCall","src":"8489:74:26"},"nodeType":"YulExpressionStatement","src":"8489:74:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8583:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8594:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8579:3:26"},"nodeType":"YulFunctionCall","src":"8579:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"8599:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8572:6:26"},"nodeType":"YulFunctionCall","src":"8572:34:26"},"nodeType":"YulExpressionStatement","src":"8572:34:26"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8405:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8416:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8424:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8435:4:26","type":""}],"src":"8315:297:26"},{"body":{"nodeType":"YulBlock","src":"8695:199:26","statements":[{"body":{"nodeType":"YulBlock","src":"8741:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8750:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8753:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8743:6:26"},"nodeType":"YulFunctionCall","src":"8743:12:26"},"nodeType":"YulExpressionStatement","src":"8743:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8716:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"8725:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8712:3:26"},"nodeType":"YulFunctionCall","src":"8712:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"8737:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8708:3:26"},"nodeType":"YulFunctionCall","src":"8708:32:26"},"nodeType":"YulIf","src":"8705:52:26"},{"nodeType":"YulVariableDeclaration","src":"8766:29:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8785:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8779:5:26"},"nodeType":"YulFunctionCall","src":"8779:16:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8770:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8848:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8857:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8860:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8850:6:26"},"nodeType":"YulFunctionCall","src":"8850:12:26"},"nodeType":"YulExpressionStatement","src":"8850:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8817:5:26"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8838:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8831:6:26"},"nodeType":"YulFunctionCall","src":"8831:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8824:6:26"},"nodeType":"YulFunctionCall","src":"8824:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8814:2:26"},"nodeType":"YulFunctionCall","src":"8814:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8807:6:26"},"nodeType":"YulFunctionCall","src":"8807:40:26"},"nodeType":"YulIf","src":"8804:60:26"},{"nodeType":"YulAssignment","src":"8873:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"8883:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8873:6:26"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8661:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8672:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8684:6:26","type":""}],"src":"8617:277:26"},{"body":{"nodeType":"YulBlock","src":"9073:165:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9090:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9101:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9083:6:26"},"nodeType":"YulFunctionCall","src":"9083:21:26"},"nodeType":"YulExpressionStatement","src":"9083:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9124:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9135:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9120:3:26"},"nodeType":"YulFunctionCall","src":"9120:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"9140:2:26","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9113:6:26"},"nodeType":"YulFunctionCall","src":"9113:30:26"},"nodeType":"YulExpressionStatement","src":"9113:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9163:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9174:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9159:3:26"},"nodeType":"YulFunctionCall","src":"9159:18:26"},{"hexValue":"5472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"9179:17:26","type":"","value":"Transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9152:6:26"},"nodeType":"YulFunctionCall","src":"9152:45:26"},"nodeType":"YulExpressionStatement","src":"9152:45:26"},{"nodeType":"YulAssignment","src":"9206:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9218:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9229:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9214:3:26"},"nodeType":"YulFunctionCall","src":"9214:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9206:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9050:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9064:4:26","type":""}],"src":"8899:339:26"},{"body":{"nodeType":"YulBlock","src":"9275:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9292:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9295:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9285:6:26"},"nodeType":"YulFunctionCall","src":"9285:88:26"},"nodeType":"YulExpressionStatement","src":"9285:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9389:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9392:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9382:6:26"},"nodeType":"YulFunctionCall","src":"9382:15:26"},"nodeType":"YulExpressionStatement","src":"9382:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9413:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9416:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9406:6:26"},"nodeType":"YulFunctionCall","src":"9406:15:26"},"nodeType":"YulExpressionStatement","src":"9406:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"9243:184:26"},{"body":{"nodeType":"YulBlock","src":"9480:77:26","statements":[{"nodeType":"YulAssignment","src":"9490:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9501:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"9504:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9497:3:26"},"nodeType":"YulFunctionCall","src":"9497:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9490:3:26"}]},{"body":{"nodeType":"YulBlock","src":"9529:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9531:16:26"},"nodeType":"YulFunctionCall","src":"9531:18:26"},"nodeType":"YulExpressionStatement","src":"9531:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9521:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"9524:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9518:2:26"},"nodeType":"YulFunctionCall","src":"9518:10:26"},"nodeType":"YulIf","src":"9515:36:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9463:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"9466:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9472:3:26","type":""}],"src":"9432:125:26"},{"body":{"nodeType":"YulBlock","src":"9736:175:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9753:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9764:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9746:6:26"},"nodeType":"YulFunctionCall","src":"9746:21:26"},"nodeType":"YulExpressionStatement","src":"9746:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9787:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9798:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9783:3:26"},"nodeType":"YulFunctionCall","src":"9783:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"9803:2:26","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9776:6:26"},"nodeType":"YulFunctionCall","src":"9776:30:26"},"nodeType":"YulExpressionStatement","src":"9776:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9826:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9837:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9822:3:26"},"nodeType":"YulFunctionCall","src":"9822:18:26"},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","kind":"string","nodeType":"YulLiteral","src":"9842:27:26","type":"","value":"ERC20Votes: future lookup"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9815:6:26"},"nodeType":"YulFunctionCall","src":"9815:55:26"},"nodeType":"YulExpressionStatement","src":"9815:55:26"},{"nodeType":"YulAssignment","src":"9879:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9891:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9902:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9887:3:26"},"nodeType":"YulFunctionCall","src":"9887:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9879:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9713:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9727:4:26","type":""}],"src":"9562:349:26"},{"body":{"nodeType":"YulBlock","src":"10090:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10107:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10118:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10100:6:26"},"nodeType":"YulFunctionCall","src":"10100:21:26"},"nodeType":"YulExpressionStatement","src":"10100:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10141:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10152:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10137:3:26"},"nodeType":"YulFunctionCall","src":"10137:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"10157:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10130:6:26"},"nodeType":"YulFunctionCall","src":"10130:30:26"},"nodeType":"YulExpressionStatement","src":"10130:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10180:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10191:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10176:3:26"},"nodeType":"YulFunctionCall","src":"10176:18:26"},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","kind":"string","nodeType":"YulLiteral","src":"10196:31:26","type":"","value":"ERC20Votes: broken clock mode"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10169:6:26"},"nodeType":"YulFunctionCall","src":"10169:59:26"},"nodeType":"YulExpressionStatement","src":"10169:59:26"},{"nodeType":"YulAssignment","src":"10237:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10249:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10260:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10245:3:26"},"nodeType":"YulFunctionCall","src":"10245:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10237:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10067:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10081:4:26","type":""}],"src":"9916:353:26"},{"body":{"nodeType":"YulBlock","src":"10306:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10323:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10326:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10316:6:26"},"nodeType":"YulFunctionCall","src":"10316:88:26"},"nodeType":"YulExpressionStatement","src":"10316:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10420:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10423:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10413:6:26"},"nodeType":"YulFunctionCall","src":"10413:15:26"},"nodeType":"YulExpressionStatement","src":"10413:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10444:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10447:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10437:6:26"},"nodeType":"YulFunctionCall","src":"10437:15:26"},"nodeType":"YulExpressionStatement","src":"10437:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10274:184:26"},{"body":{"nodeType":"YulBlock","src":"10495:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10512:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10515:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10505:6:26"},"nodeType":"YulFunctionCall","src":"10505:88:26"},"nodeType":"YulExpressionStatement","src":"10505:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10609:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10612:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10602:6:26"},"nodeType":"YulFunctionCall","src":"10602:15:26"},"nodeType":"YulExpressionStatement","src":"10602:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10633:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10636:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10626:6:26"},"nodeType":"YulFunctionCall","src":"10626:15:26"},"nodeType":"YulExpressionStatement","src":"10626:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"10463:184:26"},{"body":{"nodeType":"YulBlock","src":"10826:227:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10843:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10854:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10836:6:26"},"nodeType":"YulFunctionCall","src":"10836:21:26"},"nodeType":"YulExpressionStatement","src":"10836:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10877:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10888:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10873:3:26"},"nodeType":"YulFunctionCall","src":"10873:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"10893:2:26","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10866:6:26"},"nodeType":"YulFunctionCall","src":"10866:30:26"},"nodeType":"YulExpressionStatement","src":"10866:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10916:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10927:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10912:3:26"},"nodeType":"YulFunctionCall","src":"10912:18:26"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"10932:34:26","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10905:6:26"},"nodeType":"YulFunctionCall","src":"10905:62:26"},"nodeType":"YulExpressionStatement","src":"10905:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10987:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10998:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10983:3:26"},"nodeType":"YulFunctionCall","src":"10983:18:26"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"11003:7:26","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10976:6:26"},"nodeType":"YulFunctionCall","src":"10976:35:26"},"nodeType":"YulExpressionStatement","src":"10976:35:26"},{"nodeType":"YulAssignment","src":"11020:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11032:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11043:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11028:3:26"},"nodeType":"YulFunctionCall","src":"11028:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11020:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10803:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10817:4:26","type":""}],"src":"10652:401:26"},{"body":{"nodeType":"YulBlock","src":"11215:241:26","statements":[{"nodeType":"YulAssignment","src":"11225:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11237:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11248:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11233:3:26"},"nodeType":"YulFunctionCall","src":"11233:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11225:4:26"}]},{"nodeType":"YulVariableDeclaration","src":"11260:52:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11270:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11264:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11328:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11343:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"11351:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11339:3:26"},"nodeType":"YulFunctionCall","src":"11339:15:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11321:6:26"},"nodeType":"YulFunctionCall","src":"11321:34:26"},"nodeType":"YulExpressionStatement","src":"11321:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11375:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11386:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11371:3:26"},"nodeType":"YulFunctionCall","src":"11371:18:26"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11395:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"11403:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11391:3:26"},"nodeType":"YulFunctionCall","src":"11391:15:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11364:6:26"},"nodeType":"YulFunctionCall","src":"11364:43:26"},"nodeType":"YulExpressionStatement","src":"11364:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11427:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11438:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11423:3:26"},"nodeType":"YulFunctionCall","src":"11423:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"11443:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11416:6:26"},"nodeType":"YulFunctionCall","src":"11416:34:26"},"nodeType":"YulExpressionStatement","src":"11416:34:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11168:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11179:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11187:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11195:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11206:4:26","type":""}],"src":"11058:398:26"},{"body":{"nodeType":"YulBlock","src":"11635:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11652:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11663:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11645:6:26"},"nodeType":"YulFunctionCall","src":"11645:21:26"},"nodeType":"YulExpressionStatement","src":"11645:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11686:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11697:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11682:3:26"},"nodeType":"YulFunctionCall","src":"11682:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"11702:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11675:6:26"},"nodeType":"YulFunctionCall","src":"11675:30:26"},"nodeType":"YulExpressionStatement","src":"11675:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11725:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11736:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11721:3:26"},"nodeType":"YulFunctionCall","src":"11721:18:26"},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"11741:31:26","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11714:6:26"},"nodeType":"YulFunctionCall","src":"11714:59:26"},"nodeType":"YulExpressionStatement","src":"11714:59:26"},{"nodeType":"YulAssignment","src":"11782:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11794:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11805:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11790:3:26"},"nodeType":"YulFunctionCall","src":"11790:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11782:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11612:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11626:4:26","type":""}],"src":"11461:353:26"},{"body":{"nodeType":"YulBlock","src":"12004:255:26","statements":[{"nodeType":"YulAssignment","src":"12014:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12026:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12037:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12022:3:26"},"nodeType":"YulFunctionCall","src":"12022:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12014:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12057:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"12068:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12050:6:26"},"nodeType":"YulFunctionCall","src":"12050:25:26"},"nodeType":"YulExpressionStatement","src":"12050:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12095:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12106:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12091:3:26"},"nodeType":"YulFunctionCall","src":"12091:18:26"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12115:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12123:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12111:3:26"},"nodeType":"YulFunctionCall","src":"12111:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12084:6:26"},"nodeType":"YulFunctionCall","src":"12084:83:26"},"nodeType":"YulExpressionStatement","src":"12084:83:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12187:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12198:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12183:3:26"},"nodeType":"YulFunctionCall","src":"12183:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"12203:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12176:6:26"},"nodeType":"YulFunctionCall","src":"12176:34:26"},"nodeType":"YulExpressionStatement","src":"12176:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12230:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12241:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12226:3:26"},"nodeType":"YulFunctionCall","src":"12226:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"12246:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12219:6:26"},"nodeType":"YulFunctionCall","src":"12219:34:26"},"nodeType":"YulExpressionStatement","src":"12219:34:26"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11949:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11960:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11968:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11976:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11984:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11995:4:26","type":""}],"src":"11819:440:26"},{"body":{"nodeType":"YulBlock","src":"12438:175:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12455:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12466:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12448:6:26"},"nodeType":"YulFunctionCall","src":"12448:21:26"},"nodeType":"YulExpressionStatement","src":"12448:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12489:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12500:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12485:3:26"},"nodeType":"YulFunctionCall","src":"12485:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"12505:2:26","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12478:6:26"},"nodeType":"YulFunctionCall","src":"12478:30:26"},"nodeType":"YulExpressionStatement","src":"12478:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12528:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12539:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12524:3:26"},"nodeType":"YulFunctionCall","src":"12524:18:26"},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"12544:27:26","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12517:6:26"},"nodeType":"YulFunctionCall","src":"12517:55:26"},"nodeType":"YulExpressionStatement","src":"12517:55:26"},{"nodeType":"YulAssignment","src":"12581:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12593:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12604:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12589:3:26"},"nodeType":"YulFunctionCall","src":"12589:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12581:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12415:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12429:4:26","type":""}],"src":"12264:349:26"},{"body":{"nodeType":"YulBlock","src":"12792:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12809:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12820:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12802:6:26"},"nodeType":"YulFunctionCall","src":"12802:21:26"},"nodeType":"YulExpressionStatement","src":"12802:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12843:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12854:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12839:3:26"},"nodeType":"YulFunctionCall","src":"12839:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"12859:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12832:6:26"},"nodeType":"YulFunctionCall","src":"12832:30:26"},"nodeType":"YulExpressionStatement","src":"12832:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12882:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12893:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12878:3:26"},"nodeType":"YulFunctionCall","src":"12878:18:26"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"12898:31:26","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12871:6:26"},"nodeType":"YulFunctionCall","src":"12871:59:26"},"nodeType":"YulExpressionStatement","src":"12871:59:26"},{"nodeType":"YulAssignment","src":"12939:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12951:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12962:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12947:3:26"},"nodeType":"YulFunctionCall","src":"12947:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12939:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12769:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12783:4:26","type":""}],"src":"12618:353:26"},{"body":{"nodeType":"YulBlock","src":"13217:373:26","statements":[{"nodeType":"YulAssignment","src":"13227:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13239:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13250:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13235:3:26"},"nodeType":"YulFunctionCall","src":"13235:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13227:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13270:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"13281:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13263:6:26"},"nodeType":"YulFunctionCall","src":"13263:25:26"},"nodeType":"YulExpressionStatement","src":"13263:25:26"},{"nodeType":"YulVariableDeclaration","src":"13297:52:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13307:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13301:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13369:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13380:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13365:3:26"},"nodeType":"YulFunctionCall","src":"13365:18:26"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13389:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"13397:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13385:3:26"},"nodeType":"YulFunctionCall","src":"13385:15:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13358:6:26"},"nodeType":"YulFunctionCall","src":"13358:43:26"},"nodeType":"YulExpressionStatement","src":"13358:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13421:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13432:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13417:3:26"},"nodeType":"YulFunctionCall","src":"13417:18:26"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13441:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"13449:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13437:3:26"},"nodeType":"YulFunctionCall","src":"13437:15:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13410:6:26"},"nodeType":"YulFunctionCall","src":"13410:43:26"},"nodeType":"YulExpressionStatement","src":"13410:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13473:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13484:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13469:3:26"},"nodeType":"YulFunctionCall","src":"13469:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"13489:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13462:6:26"},"nodeType":"YulFunctionCall","src":"13462:34:26"},"nodeType":"YulExpressionStatement","src":"13462:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13516:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13527:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13512:3:26"},"nodeType":"YulFunctionCall","src":"13512:19:26"},{"name":"value4","nodeType":"YulIdentifier","src":"13533:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13505:6:26"},"nodeType":"YulFunctionCall","src":"13505:35:26"},"nodeType":"YulExpressionStatement","src":"13505:35:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13560:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13571:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13556:3:26"},"nodeType":"YulFunctionCall","src":"13556:19:26"},{"name":"value5","nodeType":"YulIdentifier","src":"13577:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13549:6:26"},"nodeType":"YulFunctionCall","src":"13549:35:26"},"nodeType":"YulExpressionStatement","src":"13549:35:26"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13146:9:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13157:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13165:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13173:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13181:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13189:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13197:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13208:4:26","type":""}],"src":"12976:614:26"},{"body":{"nodeType":"YulBlock","src":"13769:180:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13786:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13797:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13779:6:26"},"nodeType":"YulFunctionCall","src":"13779:21:26"},"nodeType":"YulExpressionStatement","src":"13779:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13820:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13831:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13816:3:26"},"nodeType":"YulFunctionCall","src":"13816:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"13836:2:26","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13809:6:26"},"nodeType":"YulFunctionCall","src":"13809:30:26"},"nodeType":"YulExpressionStatement","src":"13809:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13859:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13870:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13855:3:26"},"nodeType":"YulFunctionCall","src":"13855:18:26"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"13875:32:26","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13848:6:26"},"nodeType":"YulFunctionCall","src":"13848:60:26"},"nodeType":"YulExpressionStatement","src":"13848:60:26"},{"nodeType":"YulAssignment","src":"13917:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13929:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13940:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13925:3:26"},"nodeType":"YulFunctionCall","src":"13925:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13917:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13746:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13760:4:26","type":""}],"src":"13595:354:26"},{"body":{"nodeType":"YulBlock","src":"14128:226:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14145:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14156:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14138:6:26"},"nodeType":"YulFunctionCall","src":"14138:21:26"},"nodeType":"YulExpressionStatement","src":"14138:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14179:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14190:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14175:3:26"},"nodeType":"YulFunctionCall","src":"14175:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"14195:2:26","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14168:6:26"},"nodeType":"YulFunctionCall","src":"14168:30:26"},"nodeType":"YulExpressionStatement","src":"14168:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14218:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14229:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14214:3:26"},"nodeType":"YulFunctionCall","src":"14214:18:26"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"14234:34:26","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14207:6:26"},"nodeType":"YulFunctionCall","src":"14207:62:26"},"nodeType":"YulExpressionStatement","src":"14207:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14289:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14300:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14285:3:26"},"nodeType":"YulFunctionCall","src":"14285:18:26"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"14305:6:26","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14278:6:26"},"nodeType":"YulFunctionCall","src":"14278:34:26"},"nodeType":"YulExpressionStatement","src":"14278:34:26"},{"nodeType":"YulAssignment","src":"14321:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14333:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14344:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14329:3:26"},"nodeType":"YulFunctionCall","src":"14329:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14321:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14105:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14119:4:26","type":""}],"src":"13954:400:26"},{"body":{"nodeType":"YulBlock","src":"14533:224:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14550:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14561:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14543:6:26"},"nodeType":"YulFunctionCall","src":"14543:21:26"},"nodeType":"YulExpressionStatement","src":"14543:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14584:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14595:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14580:3:26"},"nodeType":"YulFunctionCall","src":"14580:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"14600:2:26","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14573:6:26"},"nodeType":"YulFunctionCall","src":"14573:30:26"},"nodeType":"YulExpressionStatement","src":"14573:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14623:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14634:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14619:3:26"},"nodeType":"YulFunctionCall","src":"14619:18:26"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"14639:34:26","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14612:6:26"},"nodeType":"YulFunctionCall","src":"14612:62:26"},"nodeType":"YulExpressionStatement","src":"14612:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14694:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14705:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14690:3:26"},"nodeType":"YulFunctionCall","src":"14690:18:26"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"14710:4:26","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14683:6:26"},"nodeType":"YulFunctionCall","src":"14683:32:26"},"nodeType":"YulExpressionStatement","src":"14683:32:26"},{"nodeType":"YulAssignment","src":"14724:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14736:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14747:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14732:3:26"},"nodeType":"YulFunctionCall","src":"14732:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14724:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14510:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14524:4:26","type":""}],"src":"14359:398:26"},{"body":{"nodeType":"YulBlock","src":"14936:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14953:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14964:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14946:6:26"},"nodeType":"YulFunctionCall","src":"14946:21:26"},"nodeType":"YulExpressionStatement","src":"14946:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14987:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14998:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14983:3:26"},"nodeType":"YulFunctionCall","src":"14983:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"15003:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14976:6:26"},"nodeType":"YulFunctionCall","src":"14976:30:26"},"nodeType":"YulExpressionStatement","src":"14976:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15026:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15037:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15022:3:26"},"nodeType":"YulFunctionCall","src":"15022:18:26"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"15042:31:26","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15015:6:26"},"nodeType":"YulFunctionCall","src":"15015:59:26"},"nodeType":"YulExpressionStatement","src":"15015:59:26"},{"nodeType":"YulAssignment","src":"15083:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15095:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15106:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15091:3:26"},"nodeType":"YulFunctionCall","src":"15091:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15083:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14913:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14927:4:26","type":""}],"src":"14762:353:26"},{"body":{"nodeType":"YulBlock","src":"15294:227:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15311:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15322:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15304:6:26"},"nodeType":"YulFunctionCall","src":"15304:21:26"},"nodeType":"YulExpressionStatement","src":"15304:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15345:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15356:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15341:3:26"},"nodeType":"YulFunctionCall","src":"15341:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"15361:2:26","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15334:6:26"},"nodeType":"YulFunctionCall","src":"15334:30:26"},"nodeType":"YulExpressionStatement","src":"15334:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15384:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15395:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15380:3:26"},"nodeType":"YulFunctionCall","src":"15380:18:26"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"15400:34:26","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15373:6:26"},"nodeType":"YulFunctionCall","src":"15373:62:26"},"nodeType":"YulExpressionStatement","src":"15373:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15455:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15466:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15451:3:26"},"nodeType":"YulFunctionCall","src":"15451:18:26"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"15471:7:26","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15444:6:26"},"nodeType":"YulFunctionCall","src":"15444:35:26"},"nodeType":"YulExpressionStatement","src":"15444:35:26"},{"nodeType":"YulAssignment","src":"15488:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15500:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15511:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15496:3:26"},"nodeType":"YulFunctionCall","src":"15496:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15488:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15271:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15285:4:26","type":""}],"src":"15120:401:26"},{"body":{"nodeType":"YulBlock","src":"15700:225:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15717:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15728:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15710:6:26"},"nodeType":"YulFunctionCall","src":"15710:21:26"},"nodeType":"YulExpressionStatement","src":"15710:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15751:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15762:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15747:3:26"},"nodeType":"YulFunctionCall","src":"15747:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"15767:2:26","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15740:6:26"},"nodeType":"YulFunctionCall","src":"15740:30:26"},"nodeType":"YulExpressionStatement","src":"15740:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15790:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15801:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15786:3:26"},"nodeType":"YulFunctionCall","src":"15786:18:26"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"15806:34:26","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15779:6:26"},"nodeType":"YulFunctionCall","src":"15779:62:26"},"nodeType":"YulExpressionStatement","src":"15779:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15861:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15872:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15857:3:26"},"nodeType":"YulFunctionCall","src":"15857:18:26"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"15877:5:26","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15850:6:26"},"nodeType":"YulFunctionCall","src":"15850:33:26"},"nodeType":"YulExpressionStatement","src":"15850:33:26"},{"nodeType":"YulAssignment","src":"15892:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15904:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15915:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15900:3:26"},"nodeType":"YulFunctionCall","src":"15900:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15892:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15677:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15691:4:26","type":""}],"src":"15526:399:26"},{"body":{"nodeType":"YulBlock","src":"16104:228:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16121:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16132:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16114:6:26"},"nodeType":"YulFunctionCall","src":"16114:21:26"},"nodeType":"YulExpressionStatement","src":"16114:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16155:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16166:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16151:3:26"},"nodeType":"YulFunctionCall","src":"16151:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"16171:2:26","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16144:6:26"},"nodeType":"YulFunctionCall","src":"16144:30:26"},"nodeType":"YulExpressionStatement","src":"16144:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16194:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16205:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16190:3:26"},"nodeType":"YulFunctionCall","src":"16190:18:26"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"16210:34:26","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16183:6:26"},"nodeType":"YulFunctionCall","src":"16183:62:26"},"nodeType":"YulExpressionStatement","src":"16183:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16265:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16276:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16261:3:26"},"nodeType":"YulFunctionCall","src":"16261:18:26"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"16281:8:26","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16254:6:26"},"nodeType":"YulFunctionCall","src":"16254:36:26"},"nodeType":"YulExpressionStatement","src":"16254:36:26"},{"nodeType":"YulAssignment","src":"16299:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16311:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16322:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16307:3:26"},"nodeType":"YulFunctionCall","src":"16307:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16299:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16081:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16095:4:26","type":""}],"src":"15930:402:26"},{"body":{"nodeType":"YulBlock","src":"16386:79:26","statements":[{"nodeType":"YulAssignment","src":"16396:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16408:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"16411:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16404:3:26"},"nodeType":"YulFunctionCall","src":"16404:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"16396:4:26"}]},{"body":{"nodeType":"YulBlock","src":"16437:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16439:16:26"},"nodeType":"YulFunctionCall","src":"16439:18:26"},"nodeType":"YulExpressionStatement","src":"16439:18:26"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"16428:4:26"},{"name":"x","nodeType":"YulIdentifier","src":"16434:1:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16425:2:26"},"nodeType":"YulFunctionCall","src":"16425:11:26"},"nodeType":"YulIf","src":"16422:37:26"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16368:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"16371:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"16377:4:26","type":""}],"src":"16337:128:26"},{"body":{"nodeType":"YulBlock","src":"16644:228:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16661:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16672:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16654:6:26"},"nodeType":"YulFunctionCall","src":"16654:21:26"},"nodeType":"YulExpressionStatement","src":"16654:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16695:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16706:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16691:3:26"},"nodeType":"YulFunctionCall","src":"16691:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"16711:2:26","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16684:6:26"},"nodeType":"YulFunctionCall","src":"16684:30:26"},"nodeType":"YulExpressionStatement","src":"16684:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16734:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16745:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16730:3:26"},"nodeType":"YulFunctionCall","src":"16730:18:26"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"16750:34:26","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16723:6:26"},"nodeType":"YulFunctionCall","src":"16723:62:26"},"nodeType":"YulExpressionStatement","src":"16723:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16805:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16816:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:26"},"nodeType":"YulFunctionCall","src":"16801:18:26"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"16821:8:26","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16794:6:26"},"nodeType":"YulFunctionCall","src":"16794:36:26"},"nodeType":"YulExpressionStatement","src":"16794:36:26"},{"nodeType":"YulAssignment","src":"16839:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16851:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16862:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16847:3:26"},"nodeType":"YulFunctionCall","src":"16847:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16839:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16621:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16635:4:26","type":""}],"src":"16470:402:26"},{"body":{"nodeType":"YulBlock","src":"17051:228:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17068:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17079:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17061:6:26"},"nodeType":"YulFunctionCall","src":"17061:21:26"},"nodeType":"YulExpressionStatement","src":"17061:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17102:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17113:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17098:3:26"},"nodeType":"YulFunctionCall","src":"17098:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"17118:2:26","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17091:6:26"},"nodeType":"YulFunctionCall","src":"17091:30:26"},"nodeType":"YulExpressionStatement","src":"17091:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17141:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17152:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17137:3:26"},"nodeType":"YulFunctionCall","src":"17137:18:26"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034","kind":"string","nodeType":"YulLiteral","src":"17157:34:26","type":"","value":"SafeCast: value doesn't fit in 4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17130:6:26"},"nodeType":"YulFunctionCall","src":"17130:62:26"},"nodeType":"YulExpressionStatement","src":"17130:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17212:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17223:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17208:3:26"},"nodeType":"YulFunctionCall","src":"17208:18:26"},{"hexValue":"382062697473","kind":"string","nodeType":"YulLiteral","src":"17228:8:26","type":"","value":"8 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17201:6:26"},"nodeType":"YulFunctionCall","src":"17201:36:26"},"nodeType":"YulExpressionStatement","src":"17201:36:26"},{"nodeType":"YulAssignment","src":"17246:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17258:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17269:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17254:3:26"},"nodeType":"YulFunctionCall","src":"17254:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17246:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17028:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17042:4:26","type":""}],"src":"16877:402:26"},{"body":{"nodeType":"YulBlock","src":"17497:299:26","statements":[{"nodeType":"YulAssignment","src":"17507:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17519:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17530:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17515:3:26"},"nodeType":"YulFunctionCall","src":"17515:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17507:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17550:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"17561:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17543:6:26"},"nodeType":"YulFunctionCall","src":"17543:25:26"},"nodeType":"YulExpressionStatement","src":"17543:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17588:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17599:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17584:3:26"},"nodeType":"YulFunctionCall","src":"17584:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"17604:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17577:6:26"},"nodeType":"YulFunctionCall","src":"17577:34:26"},"nodeType":"YulExpressionStatement","src":"17577:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17631:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17642:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17627:3:26"},"nodeType":"YulFunctionCall","src":"17627:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"17647:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17620:6:26"},"nodeType":"YulFunctionCall","src":"17620:34:26"},"nodeType":"YulExpressionStatement","src":"17620:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17674:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17685:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17670:3:26"},"nodeType":"YulFunctionCall","src":"17670:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"17690:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17663:6:26"},"nodeType":"YulFunctionCall","src":"17663:34:26"},"nodeType":"YulExpressionStatement","src":"17663:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17717:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17728:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17713:3:26"},"nodeType":"YulFunctionCall","src":"17713:19:26"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17738:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17746:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17734:3:26"},"nodeType":"YulFunctionCall","src":"17734:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17706:6:26"},"nodeType":"YulFunctionCall","src":"17706:84:26"},"nodeType":"YulExpressionStatement","src":"17706:84:26"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17434:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17445:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17453:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17461:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17469:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17477:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17488:4:26","type":""}],"src":"17284:512:26"},{"body":{"nodeType":"YulBlock","src":"17833:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17850:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17853:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17843:6:26"},"nodeType":"YulFunctionCall","src":"17843:88:26"},"nodeType":"YulExpressionStatement","src":"17843:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17947:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17950:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17940:6:26"},"nodeType":"YulFunctionCall","src":"17940:15:26"},"nodeType":"YulExpressionStatement","src":"17940:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17971:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17974:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17964:6:26"},"nodeType":"YulFunctionCall","src":"17964:15:26"},"nodeType":"YulExpressionStatement","src":"17964:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"17801:184:26"},{"body":{"nodeType":"YulBlock","src":"18036:228:26","statements":[{"body":{"nodeType":"YulBlock","src":"18067:168:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18088:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18091:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18081:6:26"},"nodeType":"YulFunctionCall","src":"18081:88:26"},"nodeType":"YulExpressionStatement","src":"18081:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18189:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18192:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18182:6:26"},"nodeType":"YulFunctionCall","src":"18182:15:26"},"nodeType":"YulExpressionStatement","src":"18182:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18217:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18220:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18210:6:26"},"nodeType":"YulFunctionCall","src":"18210:15:26"},"nodeType":"YulExpressionStatement","src":"18210:15:26"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18056:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18049:6:26"},"nodeType":"YulFunctionCall","src":"18049:9:26"},"nodeType":"YulIf","src":"18046:189:26"},{"nodeType":"YulAssignment","src":"18244:14:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18253:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"18256:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18249:3:26"},"nodeType":"YulFunctionCall","src":"18249:9:26"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"18244:1:26"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18021:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"18024:1:26","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"18030:1:26","type":""}],"src":"17990:274:26"},{"body":{"nodeType":"YulBlock","src":"18398:119:26","statements":[{"nodeType":"YulAssignment","src":"18408:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18420:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18431:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18416:3:26"},"nodeType":"YulFunctionCall","src":"18416:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18408:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18450:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"18461:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18443:6:26"},"nodeType":"YulFunctionCall","src":"18443:25:26"},"nodeType":"YulExpressionStatement","src":"18443:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18488:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18499:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18484:3:26"},"nodeType":"YulFunctionCall","src":"18484:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"18504:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18477:6:26"},"nodeType":"YulFunctionCall","src":"18477:34:26"},"nodeType":"YulExpressionStatement","src":"18477:34:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18359:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18370:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18378:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18389:4:26","type":""}],"src":"18269:248:26"},{"body":{"nodeType":"YulBlock","src":"18696:238:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18713:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18724:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18706:6:26"},"nodeType":"YulFunctionCall","src":"18706:21:26"},"nodeType":"YulExpressionStatement","src":"18706:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18747:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18758:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18743:3:26"},"nodeType":"YulFunctionCall","src":"18743:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"18763:2:26","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18736:6:26"},"nodeType":"YulFunctionCall","src":"18736:30:26"},"nodeType":"YulExpressionStatement","src":"18736:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18786:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18797:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18782:3:26"},"nodeType":"YulFunctionCall","src":"18782:18:26"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"18802:34:26","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18775:6:26"},"nodeType":"YulFunctionCall","src":"18775:62:26"},"nodeType":"YulExpressionStatement","src":"18775:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18857:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18868:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18853:3:26"},"nodeType":"YulFunctionCall","src":"18853:18:26"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"18873:18:26","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18846:6:26"},"nodeType":"YulFunctionCall","src":"18846:46:26"},"nodeType":"YulExpressionStatement","src":"18846:46:26"},{"nodeType":"YulAssignment","src":"18901:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18913:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18924:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18909:3:26"},"nodeType":"YulFunctionCall","src":"18909:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18901:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18673:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18687:4:26","type":""}],"src":"18522:412:26"},{"body":{"nodeType":"YulBlock","src":"19120:217:26","statements":[{"nodeType":"YulAssignment","src":"19130:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19142:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19153:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19138:3:26"},"nodeType":"YulFunctionCall","src":"19138:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19130:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19173:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"19184:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19166:6:26"},"nodeType":"YulFunctionCall","src":"19166:25:26"},"nodeType":"YulExpressionStatement","src":"19166:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19211:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19222:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19207:3:26"},"nodeType":"YulFunctionCall","src":"19207:18:26"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19231:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19239:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19227:3:26"},"nodeType":"YulFunctionCall","src":"19227:17:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19200:6:26"},"nodeType":"YulFunctionCall","src":"19200:45:26"},"nodeType":"YulExpressionStatement","src":"19200:45:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19265:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19276:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19261:3:26"},"nodeType":"YulFunctionCall","src":"19261:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"19281:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19254:6:26"},"nodeType":"YulFunctionCall","src":"19254:34:26"},"nodeType":"YulExpressionStatement","src":"19254:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19308:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19319:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19304:3:26"},"nodeType":"YulFunctionCall","src":"19304:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"19324:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19297:6:26"},"nodeType":"YulFunctionCall","src":"19297:34:26"},"nodeType":"YulExpressionStatement","src":"19297:34:26"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19065:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19076:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19084:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19092:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19100:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19111:4:26","type":""}],"src":"18939:398:26"},{"body":{"nodeType":"YulBlock","src":"19374:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19391:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19394:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19384:6:26"},"nodeType":"YulFunctionCall","src":"19384:88:26"},"nodeType":"YulExpressionStatement","src":"19384:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19488:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19491:4:26","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19481:6:26"},"nodeType":"YulFunctionCall","src":"19481:15:26"},"nodeType":"YulExpressionStatement","src":"19481:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19512:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19515:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19505:6:26"},"nodeType":"YulFunctionCall","src":"19505:15:26"},"nodeType":"YulExpressionStatement","src":"19505:15:26"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"19342:184:26"},{"body":{"nodeType":"YulBlock","src":"19705:174:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19722:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19733:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19715:6:26"},"nodeType":"YulFunctionCall","src":"19715:21:26"},"nodeType":"YulExpressionStatement","src":"19715:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19756:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19767:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19752:3:26"},"nodeType":"YulFunctionCall","src":"19752:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"19772:2:26","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19745:6:26"},"nodeType":"YulFunctionCall","src":"19745:30:26"},"nodeType":"YulExpressionStatement","src":"19745:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19795:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19806:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19791:3:26"},"nodeType":"YulFunctionCall","src":"19791:18:26"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"19811:26:26","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19784:6:26"},"nodeType":"YulFunctionCall","src":"19784:54:26"},"nodeType":"YulExpressionStatement","src":"19784:54:26"},{"nodeType":"YulAssignment","src":"19847:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19859:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19870:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19855:3:26"},"nodeType":"YulFunctionCall","src":"19855:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19847:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19682:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19696:4:26","type":""}],"src":"19531:348:26"},{"body":{"nodeType":"YulBlock","src":"20058:181:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20075:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20086:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20068:6:26"},"nodeType":"YulFunctionCall","src":"20068:21:26"},"nodeType":"YulExpressionStatement","src":"20068:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20109:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20120:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20105:3:26"},"nodeType":"YulFunctionCall","src":"20105:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"20125:2:26","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20098:6:26"},"nodeType":"YulFunctionCall","src":"20098:30:26"},"nodeType":"YulExpressionStatement","src":"20098:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20148:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20159:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20144:3:26"},"nodeType":"YulFunctionCall","src":"20144:18:26"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"20164:33:26","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20137:6:26"},"nodeType":"YulFunctionCall","src":"20137:61:26"},"nodeType":"YulExpressionStatement","src":"20137:61:26"},{"nodeType":"YulAssignment","src":"20207:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20219:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20230:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20215:3:26"},"nodeType":"YulFunctionCall","src":"20215:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20207:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20035:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20049:4:26","type":""}],"src":"19884:355:26"},{"body":{"nodeType":"YulBlock","src":"20418:224:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20435:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20446:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20428:6:26"},"nodeType":"YulFunctionCall","src":"20428:21:26"},"nodeType":"YulExpressionStatement","src":"20428:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20469:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20480:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20465:3:26"},"nodeType":"YulFunctionCall","src":"20465:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"20485:2:26","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20458:6:26"},"nodeType":"YulFunctionCall","src":"20458:30:26"},"nodeType":"YulExpressionStatement","src":"20458:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20508:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20519:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20504:3:26"},"nodeType":"YulFunctionCall","src":"20504:18:26"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"20524:34:26","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20497:6:26"},"nodeType":"YulFunctionCall","src":"20497:62:26"},"nodeType":"YulExpressionStatement","src":"20497:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20579:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20590:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20575:3:26"},"nodeType":"YulFunctionCall","src":"20575:18:26"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"20595:4:26","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20568:6:26"},"nodeType":"YulFunctionCall","src":"20568:32:26"},"nodeType":"YulExpressionStatement","src":"20568:32:26"},{"nodeType":"YulAssignment","src":"20609:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20621:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20632:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20617:3:26"},"nodeType":"YulFunctionCall","src":"20617:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20609:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20395:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20409:4:26","type":""}],"src":"20244:398:26"},{"body":{"nodeType":"YulBlock","src":"20821:223:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20838:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20849:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20831:6:26"},"nodeType":"YulFunctionCall","src":"20831:21:26"},"nodeType":"YulExpressionStatement","src":"20831:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20872:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20883:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20868:3:26"},"nodeType":"YulFunctionCall","src":"20868:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"20888:2:26","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20861:6:26"},"nodeType":"YulFunctionCall","src":"20861:30:26"},"nodeType":"YulExpressionStatement","src":"20861:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20911:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20922:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20907:3:26"},"nodeType":"YulFunctionCall","src":"20907:18:26"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"20927:34:26","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20900:6:26"},"nodeType":"YulFunctionCall","src":"20900:62:26"},"nodeType":"YulExpressionStatement","src":"20900:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20982:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20993:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20978:3:26"},"nodeType":"YulFunctionCall","src":"20978:18:26"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"20998:3:26","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20971:6:26"},"nodeType":"YulFunctionCall","src":"20971:31:26"},"nodeType":"YulExpressionStatement","src":"20971:31:26"},{"nodeType":"YulAssignment","src":"21011:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21023:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21034:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21019:3:26"},"nodeType":"YulFunctionCall","src":"21019:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21011:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20798:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20812:4:26","type":""}],"src":"20647:397:26"},{"body":{"nodeType":"YulBlock","src":"21223:224:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21240:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21251:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21233:6:26"},"nodeType":"YulFunctionCall","src":"21233:21:26"},"nodeType":"YulExpressionStatement","src":"21233:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21274:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21285:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21270:3:26"},"nodeType":"YulFunctionCall","src":"21270:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"21290:2:26","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21263:6:26"},"nodeType":"YulFunctionCall","src":"21263:30:26"},"nodeType":"YulExpressionStatement","src":"21263:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21313:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21324:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21309:3:26"},"nodeType":"YulFunctionCall","src":"21309:18:26"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"21329:34:26","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21302:6:26"},"nodeType":"YulFunctionCall","src":"21302:62:26"},"nodeType":"YulExpressionStatement","src":"21302:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21384:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21395:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21380:3:26"},"nodeType":"YulFunctionCall","src":"21380:18:26"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"21400:4:26","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21373:6:26"},"nodeType":"YulFunctionCall","src":"21373:32:26"},"nodeType":"YulExpressionStatement","src":"21373:32:26"},{"nodeType":"YulAssignment","src":"21414:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21426:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21437:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21422:3:26"},"nodeType":"YulFunctionCall","src":"21422:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21414:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21200:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21214:4:26","type":""}],"src":"21049:398:26"},{"body":{"nodeType":"YulBlock","src":"21626:181:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21643:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21654:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21636:6:26"},"nodeType":"YulFunctionCall","src":"21636:21:26"},"nodeType":"YulExpressionStatement","src":"21636:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21677:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21688:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21673:3:26"},"nodeType":"YulFunctionCall","src":"21673:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"21693:2:26","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21666:6:26"},"nodeType":"YulFunctionCall","src":"21666:30:26"},"nodeType":"YulExpressionStatement","src":"21666:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21716:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21727:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21712:3:26"},"nodeType":"YulFunctionCall","src":"21712:18:26"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"21732:33:26","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21705:6:26"},"nodeType":"YulFunctionCall","src":"21705:61:26"},"nodeType":"YulExpressionStatement","src":"21705:61:26"},{"nodeType":"YulAssignment","src":"21775:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21787:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21798:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21783:3:26"},"nodeType":"YulFunctionCall","src":"21783:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21775:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21603:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21617:4:26","type":""}],"src":"21452:355:26"},{"body":{"nodeType":"YulBlock","src":"21986:229:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22003:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22014:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21996:6:26"},"nodeType":"YulFunctionCall","src":"21996:21:26"},"nodeType":"YulExpressionStatement","src":"21996:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22037:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22048:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22033:3:26"},"nodeType":"YulFunctionCall","src":"22033:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"22053:2:26","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22026:6:26"},"nodeType":"YulFunctionCall","src":"22026:30:26"},"nodeType":"YulExpressionStatement","src":"22026:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22076:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22087:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22072:3:26"},"nodeType":"YulFunctionCall","src":"22072:18:26"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"22092:34:26","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22065:6:26"},"nodeType":"YulFunctionCall","src":"22065:62:26"},"nodeType":"YulExpressionStatement","src":"22065:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22147:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22158:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22143:3:26"},"nodeType":"YulFunctionCall","src":"22143:18:26"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"22163:9:26","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22136:6:26"},"nodeType":"YulFunctionCall","src":"22136:37:26"},"nodeType":"YulExpressionStatement","src":"22136:37:26"},{"nodeType":"YulAssignment","src":"22182:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22194:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22205:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22190:3:26"},"nodeType":"YulFunctionCall","src":"22190:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22182:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21963:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21977:4:26","type":""}],"src":"21812:403:26"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xff00000000000000000000000000000000000000000000000000000000000000))\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, _1)\n        let srcPtr := add(value6, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_CodeDAOToken_$5977__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffff))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_uint8(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_struct$_Checkpoint_$1266_memory_ptr__to_t_struct$_Checkpoint_$1266_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(mload(value0), 0xffffffff))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Amount must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_376bd67dfe7d48d0c996c140eeda4a03af0414697042695ac28ada5806e468db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Insufficient sCODE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Votes: future lookup\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Votes: broken clock mode\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Votes: signature expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Votes: invalid nonce\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Permit: expired deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ERC20Permit: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 3\")\n        mstore(add(headStart, 96), \"2 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 4\")\n        mstore(add(headStart, 96), \"8 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC20Votes: total supply risks o\")\n        mstore(add(headStart, 96), \"verflowing votes\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 2\")\n        mstore(add(headStart, 96), \"24 bits\")\n        tail := add(headStart, 128)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3086":[{"length":32,"start":5794}],"3088":[{"length":32,"start":5752}],"3090":[{"length":32,"start":5710}],"3092":[{"length":32,"start":5875}],"3094":[{"length":32,"start":5915}],"3097":[{"length":32,"start":2459}],"3100":[{"length":32,"start":2502}],"6785":[{"length":32,"start":909},{"length":32,"start":1751},{"length":32,"start":3254}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101da5760003560e01c806384b0196e11610104578063a694fc3a116100a2578063dd62ed3e11610071578063dd62ed3e14610448578063e4d2620e14610481578063eaccb43f14610494578063f1127ed8146104c257600080fd5b8063a694fc3a146103fc578063a9059cbb1461040f578063c3cda52014610422578063d505accf1461043557600080fd5b806391ddadf4116100de57806391ddadf4146103af57806395d89b41146103ce5780639ab24eb0146103d6578063a457c2d7146103e957600080fd5b806384b0196e1461035a5780638e539e8c14610375578063904d20221461038857600080fd5b8063395093511161017c5780635c19a95c1161014b5780635c19a95c146102e35780636fcfff45146102f657806370a082311461031e5780637ecebe001461034757600080fd5b806339509351146102715780633a46b1a8146102845780634bf5d7e914610297578063587cde1e1461029f57600080fd5b806323b872dd116101b857806323b872dd146102325780632e17de7814610245578063313ce5671461025a5780633644e5151461026957600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e7610514565b6040516101f4919061277c565b60405180910390f35b61021061020b3660046127ab565b6105a6565b60405190151581526020016101f4565b6002545b6040519081526020016101f4565b6102106102403660046127d5565b6105c0565b610258610253366004612811565b6105e4565b005b604051601281526020016101f4565b6102246107d1565b61021061027f3660046127ab565b6107e0565b6102246102923660046127ab565b61081f565b6101e76108a8565b6102cb6102ad36600461282a565b6001600160a01b039081166000908152600960205260409020541690565b6040516001600160a01b0390911681526020016101f4565b6102586102f136600461282a565b610940565b61030961030436600461282a565b61094d565b60405163ffffffff90911681526020016101f4565b61022461032c36600461282a565b6001600160a01b031660009081526020819052604090205490565b61022461035536600461282a565b61096f565b61036261098d565b6040516101f49796959493929190612845565b610224610383366004612811565b610a32565b6102cb7f000000000000000000000000000000000000000000000000000000000000000081565b6103b7610a9d565b60405165ffffffffffff90911681526020016101f4565b6101e7610aa8565b6102246103e436600461282a565b610ab7565b6102106103f73660046127ab565b610b81565b61025861040a366004612811565b610c2b565b61021061041d3660046127ab565b610db3565b610258610430366004612908565b610dc1565b610258610443366004612960565b610ef7565b6102246104563660046129ca565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101e761048f36600461282a565b61105b565b6102106104a23660046127ab565b6001600160a01b0391909116600090815260208190526040902054101590565b6104d56104d03660046129fd565b61119f565b60408051825163ffffffff1681526020928301517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692810192909252016101f4565b60606003805461052390612a3d565b80601f016020809104026020016040519081016040528092919081815260200182805461054f90612a3d565b801561059c5780601f106105715761010080835404028352916020019161059c565b820191906000526020600020905b81548152906001019060200180831161057f57829003601f168201915b5050505050905090565b6000336105b4818585611238565b60019150505b92915050565b6000336105ce858285611390565b6105d9858585611440565b506001949350505050565b600081116106395760405162461bcd60e51b815260206004820152601260248201527f416d6f756e74206d757374206265203e2030000000000000000000000000000060448201526064015b60405180910390fd5b336000908152602081905260409020548111156106985760405162461bcd60e51b815260206004820152601260248201527f496e73756666696369656e742073434f444500000000000000000000000000006044820152606401610630565b6106a23382611633565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c9190612a8a565b6107985760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610630565b60405181815233907f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd906020015b60405180910390a250565b60006107db611641565b905090565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906105b4908290869061081a908790612adb565b611238565b6000610829610a9d565b65ffffffffffff16821061087f5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20667574757265206c6f6f6b7570000000000000006044820152606401610630565b6001600160a01b0383166000908152600a602052604090206108a1908361176c565b9392505050565b6060436108b3610a9d565b65ffffffffffff16146109085760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f64650000006044820152606401610630565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b61094a338261189d565b50565b6001600160a01b0381166000908152600a60205260408120546105ba9061192e565b6001600160a01b0381166000908152600760205260408120546105ba565b6000606080828080836109c17f000000000000000000000000000000000000000000000000000000000000000060056119ae565b6109ec7f000000000000000000000000000000000000000000000000000000000000000060066119ae565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b6000610a3c610a9d565b65ffffffffffff168210610a925760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20667574757265206c6f6f6b7570000000000000006044820152606401610630565b6105ba600b8361176c565b60006107db43611a59565b60606004805461052390612a3d565b6001600160a01b0381166000908152600a60205260408120548015610b59576001600160a01b0383166000908152600a6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301908110610b2257610b22612aee565b60009182526020909120015464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610b5c565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610c1e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610630565b6105d98286868403611238565b60008111610c7b5760405162461bcd60e51b815260206004820152601260248201527f416d6f756e74206d757374206265203e203000000000000000000000000000006044820152606401610630565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2b9190612a8a565b610d775760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610630565b610d813382611ad7565b60405181815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020016107c6565b6000336105b4818585611440565b83421115610e115760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610630565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610e8b90610e839060a00160405160208183030381529060405280519060200120611ae1565b858585611b29565b9050610e9681611b51565b8614610ee45760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610630565b610eee818861189d565b50505050505050565b83421115610f475760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610630565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610f768c611b51565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610fd182611ae1565b90506000610fe182878787611b29565b9050896001600160a01b0316816001600160a01b0316146110445760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610630565b61104f8a8a8a611238565b50505050505050505050565b6060600061107e836001600160a01b031660009081526020819052604090205490565b90506934f086f3b33b6840000081106110cc57505060408051808201909152600781527f506172746e6572000000000000000000000000000000000000000000000000006020820152919050565b690a968163f0a57b400000811061111857505060408051808201909152600381527f50726f00000000000000000000000000000000000000000000000000000000006020820152919050565b69021e19e0c9bab2400000811061116457505060408051808201909152600781527f4275696c646572000000000000000000000000000000000000000000000000006020820152919050565b505060408051808201909152600481527f46726565000000000000000000000000000000000000000000000000000000006020820152919050565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020805463ffffffff84169081106111e3576111e3612aee565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16918101919091529392505050565b6001600160a01b0383166112b35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610630565b6001600160a01b03821661132f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610630565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461143a578181101561142d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610630565b61143a8484848403611238565b50505050565b6001600160a01b0383166114bc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610630565b6001600160a01b0382166115385760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610630565b6001600160a01b038316600090815260208190526040902054818110156115c75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610630565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361143a848484611b7e565b61163d8282611b89565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561169a57507f000000000000000000000000000000000000000000000000000000000000000046145b156116c457507f000000000000000000000000000000000000000000000000000000000000000090565b6107db604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b8154600090818160058111156117c657600061178784611ba1565b6117919085612b1d565b600088815260209020909150869082015463ffffffff1611156117b6578091506117c4565b6117c1816001612adb565b92505b505b808210156118135760006117da8383611c89565b600088815260209020909150869082015463ffffffff1611156117ff5780915061180d565b61180a816001612adb565b92505b506117c6565b80156118725760008681526020902081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff015464010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611875565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169695505050505050565b6001600160a01b038281166000818152600960208181526040808420805485845282862054949093528787167fffffffffffffffffffffffff00000000000000000000000000000000000000008416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a461143a828483611ca4565b600063ffffffff8211156119aa5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610630565b5090565b606060ff83146119c8576119c183611de1565b90506105ba565b8180546119d490612a3d565b80601f0160208091040260200160405190810160405280929190818152602001828054611a0090612a3d565b8015611a4d5780601f10611a2257610100808354040283529160200191611a4d565b820191906000526020600020905b815481529060010190602001808311611a3057829003601f168201915b505050505090506105ba565b600065ffffffffffff8211156119aa5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201527f38206269747300000000000000000000000000000000000000000000000000006064820152608401610630565b61163d8282611e20565b60006105ba611aee611641565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6000806000611b3a87878787611ecc565b91509150611b4781611fae565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b505050565b611b79838383612113565b611b938282612145565b61143a600b6122b5836122c1565b600081600003611bb357506000919050565b60006001611bc0846124c6565b901c6001901b90506001818481611bd957611bd9612b30565b048201901c90506001818481611bf157611bf1612b30565b048201901c90506001818481611c0957611c09612b30565b048201901c90506001818481611c2157611c21612b30565b048201901c90506001818481611c3957611c39612b30565b048201901c90506001818481611c5157611c51612b30565b048201901c90506001818481611c6957611c69612b30565b048201901c90506108a181828581611c8357611c83612b30565b0461255a565b6000611c986002848418612b5f565b6108a190848416612adb565b816001600160a01b0316836001600160a01b031614158015611cc65750600081115b15611b79576001600160a01b03831615611d54576001600160a01b0383166000908152600a602052604081208190611d01906122b5856122c1565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611d49929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611b79576001600160a01b0382166000908152600a602052604081208190611d8a90612570856122c1565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611dd2929190918252602082015260400190565b60405180910390a25050505050565b60606000611dee8361257c565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b611e2a82826125bd565b6002547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1015611ebe5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201527f766572666c6f77696e6720766f746573000000000000000000000000000000006064820152608401610630565b61143a600b612570836122c1565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611f035750600090506003611fa5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611f57573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b038116611f9e57600060019250925050611fa5565b9150600090505b94509492505050565b6000816004811115611fc257611fc2612b9a565b03611fca5750565b6001816004811115611fde57611fde612b9a565b0361202b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610630565b600281600481111561203f5761203f612b9a565b0361208c5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610630565b60038160048111156120a0576120a0612b9a565b0361094a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610630565b6001600160a01b03838116600090815260096020526040808220548584168352912054611b7992918216911683611ca4565b6001600160a01b0382166121c15760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610630565b6001600160a01b038216600090815260208190526040902054818110156122505760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610630565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611b7983600084611b7e565b60006108a18284612b1d565b825460009081908181156123415760008781526020902082017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160408051808201909152905463ffffffff8116825264010000000090047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166020820152612356565b60408051808201909152600080825260208201525b905080602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935061238b84868863ffffffff16565b92506000821180156123b557506123a0610a9d565b65ffffffffffff16816000015163ffffffff16145b1561242d576123c383612684565b60008881526020902083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0180547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff929092166401000000000263ffffffff9092169190911790556124bc565b866040518060400160405280612451612444610a9d565b65ffffffffffff1661192e565b63ffffffff16815260200161246586612684565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff90811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b600080608083901c156124db57608092831c92015b604083901c156124ed57604092831c92015b602083901c156124ff57602092831c92015b601083901c1561251157601092831c92015b600883901c1561252357600892831c92015b600483901c1561253557600492831c92015b600283901c1561254757600292831c92015b600183901c156105ba5760010192915050565b600081831061256957816108a1565b5090919050565b60006108a18284612adb565b600060ff8216601f8111156105ba576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382166126135760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610630565b80600260008282546126259190612adb565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361163d60008383611b7e565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8211156119aa5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203260448201527f32342062697473000000000000000000000000000000000000000000000000006064820152608401610630565b6000815180845260005b8181101561273e57602081850181015186830182015201612722565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006108a16020830184612718565b80356001600160a01b03811681146127a657600080fd5b919050565b600080604083850312156127be57600080fd5b6127c78361278f565b946020939093013593505050565b6000806000606084860312156127ea57600080fd5b6127f38461278f565b92506128016020850161278f565b9150604084013590509250925092565b60006020828403121561282357600080fd5b5035919050565b60006020828403121561283c57600080fd5b6108a18261278f565b7fff00000000000000000000000000000000000000000000000000000000000000881681526000602060e08184015261288160e084018a612718565b8381036040850152612893818a612718565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b818110156128e5578351835292840192918401916001016128c9565b50909c9b505050505050505050505050565b803560ff811681146127a657600080fd5b60008060008060008060c0878903121561292157600080fd5b61292a8761278f565b95506020870135945060408701359350612946606088016128f7565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561297b57600080fd5b6129848861278f565b96506129926020890161278f565b955060408801359450606088013593506129ae608089016128f7565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156129dd57600080fd5b6129e68361278f565b91506129f46020840161278f565b90509250929050565b60008060408385031215612a1057600080fd5b612a198361278f565b9150602083013563ffffffff81168114612a3257600080fd5b809150509250929050565b600181811c90821680612a5157607f821691505b602082108103611b73577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060208284031215612a9c57600080fd5b815180151581146108a157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156105ba576105ba612aac565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b818103818111156105ba576105ba612aac565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082612b95577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea265627a7a7231582052d682fda7df525e09c186a5e80c0b86bd13142d593373581efd5634676d2ba064736f6c63430008140032","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84B0196E GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xE4D2620E EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xEACCB43F EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91DDADF4 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84B0196E EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x904D2022 EQ PUSH2 0x388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x5C19A95C GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x27D5 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x2811 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST PUSH2 0x309 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH2 0x362 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2845 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x2811 JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST PUSH2 0x2CB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0x210 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x2811 JUMP JUMPDEST PUSH2 0xC2B JUMP JUMPDEST PUSH2 0x210 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x430 CALLDATASIZE PUSH1 0x4 PUSH2 0x2908 JUMP JUMPDEST PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x2960 JUMP JUMPDEST PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x29CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x282A JUMP JUMPDEST PUSH2 0x105B JUMP JUMPDEST PUSH2 0x210 PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x4D5 PUSH2 0x4D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x29FD JUMP JUMPDEST PUSH2 0x119F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x523 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54F SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x59C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x571 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x59C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5B4 DUP2 DUP6 DUP6 PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5CE DUP6 DUP3 DUP6 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x5D9 DUP6 DUP6 DUP6 PUSH2 0x1440 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x698 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742073434F44450000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x6A2 CALLER DUP3 PUSH2 0x1633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x728 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DB PUSH2 0x1641 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x5B4 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x81A SWAP1 DUP8 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x829 PUSH2 0xA9D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x8A1 SWAP1 DUP4 PUSH2 0x176C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0x8B3 PUSH2 0xA9D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x94A CALLER DUP3 PUSH2 0x189D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5BA SWAP1 PUSH2 0x192E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 PUSH2 0x9C1 PUSH32 0x0 PUSH1 0x5 PUSH2 0x19AE JUMP JUMPDEST PUSH2 0x9EC PUSH32 0x0 PUSH1 0x6 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3C PUSH2 0xA9D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0xA92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20667574757265206C6F6F6B757000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x5BA PUSH1 0xB DUP4 PUSH2 0x176C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DB NUMBER PUSH2 0x1A59 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x523 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xB59 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 ADD SWAP1 DUP2 LT PUSH2 0xB22 JUMPI PUSH2 0xB22 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x5D9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x1238 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xC7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH2 0xD77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0xD81 CALLER DUP3 PUSH2 0x1AD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A SWAP1 PUSH1 0x20 ADD PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5B4 DUP2 DUP6 DUP6 PUSH2 0x1440 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xE8B SWAP1 PUSH2 0xE83 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1AE1 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 POP PUSH2 0xE96 DUP2 PUSH2 0x1B51 JUMP JUMPDEST DUP7 EQ PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0xEEE DUP2 DUP9 PUSH2 0x189D JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xF47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xF76 DUP13 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xFD1 DUP3 PUSH2 0x1AE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFE1 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x104F DUP11 DUP11 DUP11 PUSH2 0x1238 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x107E DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH10 0x34F086F3B33B68400000 DUP2 LT PUSH2 0x10CC JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH32 0x506172746E657200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH10 0xA968163F0A57B400000 DUP2 LT PUSH2 0x1118 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH32 0x50726F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH10 0x21E19E0C9BAB2400000 DUP2 LT PUSH2 0x1164 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH32 0x4275696C64657200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH32 0x4672656500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x11E3 JUMPI PUSH2 0x11E3 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x132F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x143A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x142D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x143A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x1238 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1538 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x143A DUP5 DUP5 DUP5 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x163D DUP3 DUP3 PUSH2 0x1B89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x169A JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x16C4 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x7DB PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x17C6 JUMPI PUSH1 0x0 PUSH2 0x1787 DUP5 PUSH2 0x1BA1 JUMP JUMPDEST PUSH2 0x1791 SWAP1 DUP6 PUSH2 0x2B1D JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x17B6 JUMPI DUP1 SWAP2 POP PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x17C1 DUP2 PUSH1 0x1 PUSH2 0x2ADB JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1813 JUMPI PUSH1 0x0 PUSH2 0x17DA DUP4 DUP4 PUSH2 0x1C89 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x17FF JUMPI DUP1 SWAP2 POP PUSH2 0x180D JUMP JUMPDEST PUSH2 0x180A DUP2 PUSH1 0x1 PUSH2 0x2ADB JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x17C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1872 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0x143A DUP3 DUP5 DUP4 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x19AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x19C8 JUMPI PUSH2 0x19C1 DUP4 PUSH2 0x1DE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x5BA JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x19D4 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A00 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A4D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1A22 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1A4D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A30 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3820626974730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x163D DUP3 DUP3 PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA PUSH2 0x1AEE PUSH2 0x1641 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1B3A DUP8 DUP8 DUP8 DUP8 PUSH2 0x1ECC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1B47 DUP2 PUSH2 0x1FAE JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1B79 DUP4 DUP4 DUP4 PUSH2 0x2113 JUMP JUMPDEST PUSH2 0x1B93 DUP3 DUP3 PUSH2 0x2145 JUMP JUMPDEST PUSH2 0x143A PUSH1 0xB PUSH2 0x22B5 DUP4 PUSH2 0x22C1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x1BB3 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1BC0 DUP5 PUSH2 0x24C6 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BD9 JUMPI PUSH2 0x1BD9 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1BF1 JUMPI PUSH2 0x1BF1 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C09 JUMPI PUSH2 0x1C09 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C21 JUMPI PUSH2 0x1C21 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C39 JUMPI PUSH2 0x1C39 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C51 JUMPI PUSH2 0x1C51 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1C69 JUMPI PUSH2 0x1C69 PUSH2 0x2B30 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x8A1 DUP2 DUP3 DUP6 DUP2 PUSH2 0x1C83 JUMPI PUSH2 0x1C83 PUSH2 0x2B30 JUMP JUMPDEST DIV PUSH2 0x255A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C98 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x2B5F JUMP JUMPDEST PUSH2 0x8A1 SWAP1 DUP5 DUP5 AND PUSH2 0x2ADB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1CC6 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x1B79 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1D54 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1D01 SWAP1 PUSH2 0x22B5 DUP6 PUSH2 0x22C1 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D49 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1B79 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1D8A SWAP1 PUSH2 0x2570 DUP6 PUSH2 0x22C1 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DD2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1DEE DUP4 PUSH2 0x257C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x1E2A DUP3 DUP3 PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF LT ISZERO PUSH2 0x1EBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH2 0x143A PUSH1 0xB PUSH2 0x2570 DUP4 PUSH2 0x22C1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1F03 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F9E JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1FA5 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC2 PUSH2 0x2B9A JUMP JUMPDEST SUB PUSH2 0x1FCA JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FDE JUMPI PUSH2 0x1FDE PUSH2 0x2B9A JUMP JUMPDEST SUB PUSH2 0x202B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x203F JUMPI PUSH2 0x203F PUSH2 0x2B9A JUMP JUMPDEST SUB PUSH2 0x208C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x20A0 JUMPI PUSH2 0x20A0 PUSH2 0x2B9A JUMP JUMPDEST SUB PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x1B79 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x21C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2250 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1B79 DUP4 PUSH1 0x0 DUP5 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A1 DUP3 DUP5 PUSH2 0x2B1D JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 DUP2 ISZERO PUSH2 0x2341 JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x238B DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x23B5 JUMPI POP PUSH2 0x23A0 PUSH2 0xA9D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x242D JUMPI PUSH2 0x23C3 DUP4 PUSH2 0x2684 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP1 SLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x24BC JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2451 PUSH2 0x2444 PUSH2 0xA9D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x192E JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2465 DUP7 PUSH2 0x2684 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 SWAP1 SHR ISZERO PUSH2 0x24DB JUMPI PUSH1 0x80 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x40 DUP4 SWAP1 SHR ISZERO PUSH2 0x24ED JUMPI PUSH1 0x40 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x20 DUP4 SWAP1 SHR ISZERO PUSH2 0x24FF JUMPI PUSH1 0x20 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x10 DUP4 SWAP1 SHR ISZERO PUSH2 0x2511 JUMPI PUSH1 0x10 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x8 DUP4 SWAP1 SHR ISZERO PUSH2 0x2523 JUMPI PUSH1 0x8 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x4 DUP4 SWAP1 SHR ISZERO PUSH2 0x2535 JUMPI PUSH1 0x4 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x2 DUP4 SWAP1 SHR ISZERO PUSH2 0x2547 JUMPI PUSH1 0x2 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x1 DUP4 SWAP1 SHR ISZERO PUSH2 0x5BA JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2569 JUMPI DUP2 PUSH2 0x8A1 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A1 DUP3 DUP5 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x630 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2625 SWAP2 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x163D PUSH1 0x0 DUP4 DUP4 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x630 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x273E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2722 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2718 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27C7 DUP4 PUSH2 0x278F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27F3 DUP5 PUSH2 0x278F JUMP JUMPDEST SWAP3 POP PUSH2 0x2801 PUSH1 0x20 DUP6 ADD PUSH2 0x278F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x283C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A1 DUP3 PUSH2 0x278F JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x2881 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x2718 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2893 DUP2 DUP11 PUSH2 0x2718 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28E5 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x28C9 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x27A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x292A DUP8 PUSH2 0x278F JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2946 PUSH1 0x60 DUP9 ADD PUSH2 0x28F7 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x297B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2984 DUP9 PUSH2 0x278F JUMP JUMPDEST SWAP7 POP PUSH2 0x2992 PUSH1 0x20 DUP10 ADD PUSH2 0x278F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x29AE PUSH1 0x80 DUP10 ADD PUSH2 0x28F7 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29E6 DUP4 PUSH2 0x278F JUMP JUMPDEST SWAP2 POP PUSH2 0x29F4 PUSH1 0x20 DUP5 ADD PUSH2 0x278F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A19 DUP4 PUSH2 0x278F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2A32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A51 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B73 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5BA JUMPI PUSH2 0x5BA PUSH2 0x2AAC JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5BA JUMPI PUSH2 0x5BA PUSH2 0x2AAC JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2B95 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MSTORE 0xD6 DUP3 REVERT 0xA7 0xDF MSTORE 0x5E MULMOD 0xC1 DUP7 0xA5 0xE8 0xC SIGNEXTEND DUP7 0xBD SGT EQ 0x2D MSIZE CALLER PUSH20 0x581EFD5634676D2BA064736F6C63430008140032 ","sourceMap":"466:2496:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1351:14:26;;1344:22;1326:41;;1314:2;1299:18;4444:197:7;1186:187:26;3255:106:7;3342:12;;3255:106;;;1524:25:26;;;1512:2;1497:18;3255:106:7;1378:177:26;5203:256:7;;;;;;:::i;:::-;;:::i;1396:412:25:-;;;;;;:::i;:::-;;:::i;:::-;;3104:91:7;;;3186:2;2220:36:26;;2208:2;2193:18;3104:91:7;2078:184:26;2836:113:9;;;:::i;5854:234:7:-;;;;;;:::i;:::-;;:::i;3466:248:10:-;;;;;;:::i;:::-;;:::i;2047:254::-;;;:::i;2838:126::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2938:19:10;;;2912:7;2938:19;;;:10;:19;;;;;;;;2838:126;;;;-1:-1:-1;;;;;2804:55:26;;;2786:74;;2774:2;2759:18;2838:126:10;2640:226:26;6275:112:10;;;;;;:::i;:::-;;:::i;2601:149::-;;;;;;:::i;:::-;;:::i;:::-;;;3045:10:26;3033:23;;;3015:42;;3003:2;2988:18;2601:149:10;2871:192:26;3419:125:7;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:7;3493:7;3519:18;;;;;;;;;;;;3419:125;2603:126:9;;;;;;:::i;:::-;;:::i;5021:633:19:-;;;:::i;:::-;;;;;;;;;;;;;:::i;3976:239:10:-;;;;;;:::i;:::-;;:::i;528:39:25:-;;;;;1817:118:10;;;:::i;:::-;;;4834:14:26;4822:27;;;4804:46;;4792:2;4777:18;1817:118:10;4660:196:26;2369:102:7;;;:::i;3043:243:10:-;;;;;;:::i;:::-;;:::i;6575:427:7:-;;;;;;:::i;:::-;;:::i;956:365:25:-;;;;;;:::i;:::-;;:::i;3740:189:7:-;;;;;;:::i;:::-;;:::i;6464:574:10:-;;;;;;:::i;:::-;;:::i;1923:626:9:-;;;;;;:::i;:::-;;:::i;3987:149:7:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4102:18:7;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149;1896:309:25;;;;;;:::i;:::-;;:::i;2288:135::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:7;;;;2365:4:25;3519:18:7;;;;;;;;;;;-1:-1:-1;2388:28:25;;2288:135;2378:148:10;;;;;;:::i;:::-;;:::i;:::-;;;;7013:13:26;;7028:10;7009:30;6991:49;;7100:4;7088:17;;;7082:24;7108:58;7078:89;7056:20;;;7049:119;;;;6964:18;2378:148:10;6789:385:26;2158:98:7;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;734:10:13;4581:32:7;734:10:13;4597:7:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;734:10:13;5356:38:7;5372:4;734:10:13;5387:6:7;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:7;;5203:256;-1:-1:-1;;;;5203:256:7:o;1396:412:25:-;1465:1;1456:6;:10;1448:41;;;;-1:-1:-1;;;1448:41:25;;7823:2:26;1448:41:25;;;7805:21:26;7862:2;7842:18;;;7835:30;7901:20;7881:18;;;7874:48;7939:18;;1448:41:25;;;;;;;;;1517:10;3493:7:7;3519:18;;;;;;;;;;;1532:6:25;-1:-1:-1;1507:31:25;1499:62;;;;-1:-1:-1;;;1499:62:25;;8170:2:26;1499:62:25;;;8152:21:26;8209:2;8189:18;;;8182:30;8248:20;8228:18;;;8221:48;8286:18;;1499:62:25;7968:342:26;1499:62:25;1602:25;1608:10;1620:6;1602:5;:25::i;:::-;1692:38;;;;;1711:10;1692:38;;;8489:74:26;8579:18;;;8572:34;;;1692:9:25;-1:-1:-1;;;;;1692:18:25;;;;8462::26;;1692:38:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1684:66;;;;-1:-1:-1;;;1684:66:25;;9101:2:26;1684:66:25;;;9083:21:26;9140:2;9120:18;;;9113:30;9179:17;9159:18;;;9152:45;9214:18;;1684:66:25;8899:339:26;1684:66:25;1774:27;;1524:25:26;;;1782:10:25;;1774:27;;1512:2:26;1497:18;1774:27:25;;;;;;;;1396:412;:::o;2836:113:9:-;2896:7;2922:20;:18;:20::i;:::-;2915:27;;2836:113;:::o;5854:234:7:-;734:10:13;5942:4:7;4102:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4102:27:7;;;;;;;;;;5942:4;;734:10:13;5996:64:7;;734:10:13;;4102:27:7;;6021:38;;6049:10;;6021:38;:::i;:::-;5996:8;:64::i;3466:248:10:-;3562:7;3601;:5;:7::i;:::-;3589:19;;:9;:19;3581:57;;;;-1:-1:-1;;;3581:57:10;;9764:2:26;3581:57:10;;;9746:21:26;9803:2;9783:18;;;9776:30;9842:27;9822:18;;;9815:55;9887:18;;3581:57:10;9562:349:26;3581:57:10;-1:-1:-1;;;;;3674:21:10;;;;;;:12;:21;;;;;3655:52;;3697:9;3655:18;:52::i;:::-;3648:59;3466:248;-1:-1:-1;;;3466:248:10:o;2047:254::-;2107:13;2200:12;2189:7;:5;:7::i;:::-;:23;;;2181:65;;;;-1:-1:-1;;;2181:65:10;;10118:2:26;2181:65:10;;;10100:21:26;10157:2;10137:18;;;10130:30;10196:31;10176:18;;;10169:59;10245:18;;2181:65:10;9916:353:26;2181:65:10;-1:-1:-1;2256:38:10;;;;;;;;;;;;;;;;;;2047:254::o;6275:112::-;6346:34;734:10:13;6370:9:10;6346;:34::i;:::-;6275:112;:::o;2601:149::-;-1:-1:-1;;;;;2714:21:10;;2671:6;2714:21;;;:12;:21;;;;;:28;2696:47;;:17;:47::i;2603:126:9:-;-1:-1:-1;;;;;2698:14:9;;2672:7;2698:14;;;:7;:14;;;;;918::14;2698:24:9;827:112:14;5021:633:19;5136:13;5163:18;;5136:13;;;5163:18;5427:41;:5;5454:13;5427:26;:41::i;:::-;5482:47;:8;5512:16;5482:29;:47::i;:::-;5621:16;;;5605:1;5621:16;;;;;;;;;5376:271;;;;-1:-1:-1;5376:271:19;;-1:-1:-1;5543:13:19;;-1:-1:-1;5578:4:19;;-1:-1:-1;5605:1:19;-1:-1:-1;5621:16:19;-1:-1:-1;5376:271:19;-1:-1:-1;5021:633:19:o;3976:239:10:-;4061:7;4100;:5;:7::i;:::-;4088:19;;:9;:19;4080:57;;;;-1:-1:-1;;;4080:57:10;;9764:2:26;4080:57:10;;;9746:21:26;9803:2;9783:18;;;9776:30;9842:27;9822:18;;;9815:55;9887:18;;4080:57:10;9562:349:26;4080:57:10;4154:54;4173:23;4198:9;4154:18;:54::i;1817:118::-;1872:6;1897:31;1915:12;1897:17;:31::i;2369:102:7:-;2425:13;2457:7;2450:14;;;;;:::i;3043:243:10:-;-1:-1:-1;;;;;3149:21:10;;3116:7;3149:21;;;:12;:21;;;;;:28;3218:8;;:51;;-1:-1:-1;;;;;3233:21:10;;;;;;:12;:21;;;;;:30;;3255:7;;;;3233:30;;;;;;:::i;:::-;;;;;;;;;;:36;;;;;;3218:51;;;3229:1;3218:51;3211:58;;;3043:243;-1:-1:-1;;;3043:243:10:o;6575:427:7:-;734:10:13;6668:4:7;4102:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4102:27:7;;;;;;;;;;6668:4;;734:10:13;6812:15:7;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:7;;10854:2:26;6784:85:7;;;10836:21:26;10893:2;10873:18;;;10866:30;10932:34;10912:18;;;10905:62;11003:7;10983:18;;;10976:35;11028:19;;6784:85:7;10652:401:26;6784:85:7;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;956:365:25:-;1023:1;1014:6;:10;1006:41;;;;-1:-1:-1;;;1006:41:25;;7823:2:26;1006:41:25;;;7805:21:26;7862:2;7842:18;;;7835:30;7901:20;7881:18;;;7874:48;7939:18;;1006:41:25;7621:342:26;1006:41:25;1118:57;;;;;1141:10;1118:57;;;11321:34:26;1161:4:25;11371:18:26;;;11364:43;11423:18;;;11416:34;;;1118:9:25;-1:-1:-1;;;;;1118:22:25;;;;11233:18:26;;1118:57:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1110:85;;;;-1:-1:-1;;;1110:85:25;;9101:2:26;1110:85:25;;;9083:21:26;9140:2;9120:18;;;9113:30;9179:17;9159:18;;;9152:45;9214:18;;1110:85:25;8899:339:26;1110:85:25;1240:25;1246:10;1258:6;1240:5;:25::i;:::-;1289;;1524::26;;;1295:10:25;;1289:25;;1512:2:26;1497:18;1289:25:25;1378:177:26;3740:189:7;3819:4;734:10:13;3873:28:7;734:10:13;3890:2:7;3894:6;3873:9;:28::i;6464:574:10:-;6683:6;6664:15;:25;;6656:67;;;;-1:-1:-1;;;6656:67:10;;11663:2:26;6656:67:10;;;11645:21:26;11702:2;11682:18;;;11675:30;11741:31;11721:18;;;11714:59;11790:18;;6656:67:10;11461:353:26;6656:67:10;6804:58;;;1439:71;6804:58;;;12050:25:26;-1:-1:-1;;;;;12111:55:26;;12091:18;;;12084:83;;;;12183:18;;;12176:34;;;12226:18;;;12219:34;;;6733:14:10;;6750:169;;6777:87;;12022:19:26;;6804:58:10;;;;;;;;;;;;6794:69;;;;;;6777:16;:87::i;:::-;6878:1;6893;6908;6750:13;:169::i;:::-;6733:186;;6946:17;6956:6;6946:9;:17::i;:::-;6937:5;:26;6929:64;;;;-1:-1:-1;;;6929:64:10;;12466:2:26;6929:64:10;;;12448:21:26;12505:2;12485:18;;;12478:30;12544:27;12524:18;;;12517:55;12589:18;;6929:64:10;12264:349:26;6929:64:10;7003:28;7013:6;7021:9;7003;:28::i;:::-;6646:392;6464:574;;;;;;:::o;1923:626:9:-;2158:8;2139:15;:27;;2131:69;;;;-1:-1:-1;;;2131:69:9;;12820:2:26;2131:69:9;;;12802:21:26;12859:2;12839:18;;;12832:30;12898:31;12878:18;;;12871:59;12947:18;;2131:69:9;12618:353:26;2131:69:9;2211:18;1125:95;2271:5;2278:7;2287:5;2294:16;2304:5;2294:9;:16::i;:::-;2242:79;;;;;;13263:25:26;;;;-1:-1:-1;;;;;13385:15:26;;;13365:18;;;13358:43;13437:15;;;;13417:18;;;13410:43;13469:18;;;13462:34;13512:19;;;13505:35;13556:19;;;13549:35;;;13235:19;;2242:79:9;;;;;;;;;;;;2232:90;;;;;;2211:111;;2333:12;2348:28;2365:10;2348:16;:28::i;:::-;2333:43;;2387:14;2404:28;2418:4;2424:1;2427;2430;2404:13;:28::i;:::-;2387:45;;2460:5;-1:-1:-1;;;;;2450:15:9;:6;-1:-1:-1;;;;;2450:15:9;;2442:58;;;;-1:-1:-1;;;2442:58:9;;13797:2:26;2442:58:9;;;13779:21:26;13836:2;13816:18;;;13809:30;13875:32;13855:18;;;13848:60;13925:18;;2442:58:9;13595:354:26;2442:58:9;2511:31;2520:5;2527:7;2536:5;2511:8;:31::i;:::-;2121:428;;;1923:626;;;;;;;:::o;1896:309:25:-;1954:13;1979:15;1997;2007:4;-1:-1:-1;;;;;3519:18:7;3493:7;3519:18;;;;;;;;;;;;3419:125;1997:15:25;1979:33;;2046:10;2035:7;:21;2031:43;;-1:-1:-1;;2058:16:25;;;;;;;;;;;;;;;;;;1896:309;-1:-1:-1;1896:309:25:o;2031:43::-;2099:9;2088:7;:20;2084:38;;-1:-1:-1;;2110:12:25;;;;;;;;;;;;;;;;;;1896:309;-1:-1:-1;1896:309:25:o;2084:38::-;2148:9;2137:7;:20;2133:42;;-1:-1:-1;;2159:16:25;;;;;;;;;;;;;;;;;;1896:309;-1:-1:-1;1896:309:25:o;2133:42::-;-1:-1:-1;;2185:13:25;;;;;;;;;;;;;;;;;;1896:309;-1:-1:-1;1896:309:25:o;2378:148:10:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;2493:21:10;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2486:33;;;;;;;;;2493:26;;2486:33;;;;;;;;;;;;;;;;;;;2378:148;-1:-1:-1;;;2378:148:10:o;10457:340:7:-;-1:-1:-1;;;;;10558:19:7;;10550:68;;;;-1:-1:-1;;;10550:68:7;;14156:2:26;10550:68:7;;;14138:21:26;14195:2;14175:18;;;14168:30;14234:34;14214:18;;;14207:62;14305:6;14285:18;;;14278:34;14329:19;;10550:68:7;13954:400:26;10550:68:7;-1:-1:-1;;;;;10636:21:7;;10628:68;;;;-1:-1:-1;;;10628:68:7;;14561:2:26;10628:68:7;;;14543:21:26;14600:2;14580:18;;;14573:30;14639:34;14619:18;;;14612:62;14710:4;14690:18;;;14683:32;14732:19;;10628:68:7;14359:398:26;10628:68:7;-1:-1:-1;;;;;10707:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1524:25:26;;;10758:32:7;;1497:18:26;10758:32:7;;;;;;;10457:340;;;:::o;11078:411::-;-1:-1:-1;;;;;4102:18:7;;;11178:24;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;11264:17;11244:37;;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:7;;14964:2:26;11297:68:7;;;14946:21:26;15003:2;14983:18;;;14976:30;15042:31;15022:18;;;15015:59;15091:18;;11297:68:7;14762:353:26;11297:68:7;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:7;;7544:68;;;;-1:-1:-1;;;7544:68:7;;15322:2:26;7544:68:7;;;15304:21:26;15361:2;15341:18;;;15334:30;15400:34;15380:18;;;15373:62;15471:7;15451:18;;;15444:35;15496:19;;7544:68:7;15120:401:26;7544:68:7;-1:-1:-1;;;;;7630:16:7;;7622:64;;;;-1:-1:-1;;;7622:64:7;;15728:2:26;7622:64:7;;;15710:21:26;15767:2;15747:18;;;15740:30;15806:34;15786:18;;;15779:62;15877:5;15857:18;;;15850:33;15900:19;;7622:64:7;15526:399:26;7622:64:7;-1:-1:-1;;;;;7768:15:7;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:7;;16132:2:26;7793:72:7;;;16114:21:26;16171:2;16151:18;;;16144:30;16210:34;16190:18;;;16183:62;16281:8;16261:18;;;16254:36;16307:19;;7793:72:7;15930:402:26;7793:72:7;-1:-1:-1;;;;;7899:15:7;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1524:25:26;;;8114:13:7;;8163:26;;1497:18:26;8163:26:7;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;2810:150:25:-;2925:28;2937:7;2946:6;2925:11;:28::i;:::-;2810:150;;:::o;3695:262:19:-;3748:7;3779:4;-1:-1:-1;;;;;3788:11:19;3771:28;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;-1:-1:-1;3857:22:19;;3695:262::o;3767:184::-;3917:23;4054:81;;;1929:95;4054:81;;;17543:25:26;4077:11:19;17584:18:26;;;17577:34;;;;4090:14:19;17627:18:26;;;17620:34;4106:13:19;17670:18:26;;;17663:34;4129:4:19;17713:19:26;;;17706:84;4018:7:19;;17515:19:26;;4054:81:19;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;4299:1895:10;5510:12;;4396:7;;;5510:12;5603:1;5594:10;;5590:242;;;5620:11;5643:17;5653:6;5643:9;:17::i;:::-;5634:26;;:6;:26;:::i;:::-;10626:25;10686:21;;;10752:4;10739:18;;5620:40;;-1:-1:-1;5716:9:10;;10735:28;;5678:35;;;:47;5674:148;;;5752:3;5745:10;;5674:148;;;5800:7;:3;5806:1;5800:7;:::i;:::-;5794:13;;5674:148;5606:226;5590:242;5855:4;5849:3;:10;5842:242;;;5875:11;5889:23;5902:3;5907:4;5889:12;:23::i;:::-;10626:25;10686:21;;;10752:4;10739:18;;5875:37;;-1:-1:-1;5968:9:10;;10735:28;;5930:35;;;:47;5926:148;;;6004:3;5997:10;;5926:148;;;6052:7;:3;6058:1;6052:7;:::i;:::-;6046:13;;5926:148;5861:223;5842:242;;;6125:9;;:52;;10626:25;10686:21;;;10752:4;10739:18;;10735:28;;6162:8;10735:28;6141:36;;;;;;6125:52;;;6137:1;6125:52;6118:59;;;4299:1895;-1:-1:-1;;;;;;4299:1895:10:o;8431:380::-;-1:-1:-1;;;;;2938:19:10;;;8515:23;2938:19;;;:10;:19;;;;;;;;;;3519:18:7;;;;;;;8628:21:10;;;;:33;;;;;;;;;;;8677:54;;2938:19;;;;;3519:18:7;;8628:33:10;;2938:19;;;8677:54;;8515:23;8677:54;8742:62;8759:15;8776:9;8787:16;8742;:62::i;15264:187:21:-;15320:6;15355:16;15346:25;;;15338:76;;;;-1:-1:-1;;;15338:76:21;;16672:2:26;15338:76:21;;;16654:21:26;16711:2;16691:18;;;16684:30;16750:34;16730:18;;;16723:62;16821:8;16801:18;;;16794:36;16847:19;;15338:76:21;16470:402:26;15338:76:21;-1:-1:-1;15438:5:21;15264:187::o;3367:268:15:-;3461:13;1371:66;3490:47;;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14240:187:21;14296:6;14331:16;14322:25;;;14314:76;;;;-1:-1:-1;;;14314:76:21;;17079:2:26;14314:76:21;;;17061:21:26;17118:2;17098:18;;;17091:30;17157:34;17137:18;;;17130:62;17228:8;17208:18;;;17201:36;17254:19;;14314:76:21;16877:402:26;2664:140:25;2774:23;2786:2;2790:6;2774:11;:23::i;4768:165:19:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;8536:4:18;8530:11;8566:10;8554:23;;8606:4;8597:14;;8590:39;;;;8658:4;8649:14;;8642:34;8712:4;8697:20;;;8336:397;6598:232;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;-1:-1:-1;6814:9:18;6598:232;-1:-1:-1;;;;;6598:232:18:o;3080:203:9:-;-1:-1:-1;;;;;3200:14:9;;3140:15;3200:14;;;:7;:14;;;;;918::14;;1050:1;1032:19;;;;918:14;3259:17:9;3157:126;3080:203;;;:::o;12073:91:7:-;;;;:::o;2470:188:25:-;2608:43;2634:4;2640:2;2644:6;2608:25;:43::i;7706:190:10:-;7790:28;7802:7;7811:6;7790:11;:28::i;:::-;7829:60;7846:23;7871:9;7882:6;7829:16;:60::i;6530:1642:20:-;6578:7;6601:1;6606;6601:6;6597:45;;-1:-1:-1;6630:1:20;;6530:1642;-1:-1:-1;6530:1642:20:o;6597:45::-;7321:14;7355:1;7344:7;7349:1;7344:4;:7::i;:::-;:12;;7338:1;:19;;7321:36;;7816:1;7805:6;7801:1;:10;;;;;:::i;:::-;;7792:6;:19;7791:26;;7782:35;;7865:1;7854:6;7850:1;:10;;;;;:::i;:::-;;7841:6;:19;7840:26;;7831:35;;7914:1;7903:6;7899:1;:10;;;;;:::i;:::-;;7890:6;:19;7889:26;;7880:35;;7963:1;7952:6;7948:1;:10;;;;;:::i;:::-;;7939:6;:19;7938:26;;7929:35;;8012:1;8001:6;7997:1;:10;;;;;:::i;:::-;;7988:6;:19;7987:26;;7978:35;;8061:1;8050:6;8046:1;:10;;;;;:::i;:::-;;8037:6;:19;8036:26;;8027:35;;8110:1;8099:6;8095:1;:10;;;;;:::i;:::-;;8086:6;:19;8085:26;;8076:35;;8132:23;8136:6;8148;8144:1;:10;;;;;:::i;:::-;;8132:3;:23::i;805:153::-;867:7;940:11;950:1;941:5;;;940:11;:::i;:::-;930:21;;931:5;;;930:21;:::i;8817:597:10:-;8914:3;-1:-1:-1;;;;;8907:10:10;:3;-1:-1:-1;;;;;8907:10:10;;;:24;;;;;8930:1;8921:6;:10;8907:24;8903:505;;;-1:-1:-1;;;;;8951:17:10;;;8947:221;;-1:-1:-1;;;;;9046:17:10;;8989;9046;;;:12;:17;;;;;8989;;9029:54;;9065:9;9076:6;9029:16;:54::i;:::-;8988:95;;;;9127:3;-1:-1:-1;;;;;9106:47:10;;9132:9;9143;9106:47;;;;;;18443:25:26;;;18499:2;18484:18;;18477:34;18431:2;18416:18;;18269:248;9106:47:10;;;;;;;;8970:198;;8947:221;-1:-1:-1;;;;;9186:17:10;;;9182:216;;-1:-1:-1;;;;;9281:17:10;;9224;9281;;;:12;:17;;;;;9224;;9264:49;;9300:4;9306:6;9264:16;:49::i;:::-;9223:90;;;;9357:3;-1:-1:-1;;;;;9336:47:10;;9362:9;9373;9336:47;;;;;;18443:25:26;;;18499:2;18484:18;;18477:34;18431:2;18416:18;;18269:248;9336:47:10;;;;;;;;9205:193;;8817:597;;;:::o;2059:405:15:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2281:14;;;2292:2;2281:14;;;;;;;;;2143:30;;-1:-1:-1;2261:17:15;;2281:14;;;;;;;;;-1:-1:-1;;;2371:16:15;;;-1:-1:-1;2416:4:15;2407:14;;2400:28;;;;-1:-1:-1;2371:16:15;2059:405::o;7332:285:10:-;7416:28;7428:7;7437:6;7416:11;:28::i;:::-;3342:12:7;;7219:17:10;-1:-1:-1;7462:29:10;7454:90;;;;-1:-1:-1;;;7454:90:10;;18724:2:26;7454:90:10;;;18706:21:26;18763:2;18743:18;;;18736:30;18802:34;18782:18;;;18775:62;18873:18;18853;;;18846:46;18909:19;;7454:90:10;18522:412:26;7454:90:10;7555:55;7572:23;7597:4;7603:6;7555:16;:55::i;5009:1456:18:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:18;;-1:-1:-1;6123:30:18;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;19166:25:26;;;19239:4;19227:17;;19207:18;;;19200:45;;;;19261:18;;;19254:34;;;19304:18;;;19297:34;;;6276:24:18;;19138:19:26;;6276:24:18;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:18;;;;;;-1:-1:-1;;;;;;;6314:20:18;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:18;;-1:-1:-1;5009:1456:18;;;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:18;;19733:2:26;788:34:18;;;19715:21:26;19772:2;19752:18;;;19745:30;19811:26;19791:18;;;19784:54;19855:18;;788:34:18;19531:348:26;730:345:18;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:18;;20086:2:26;903:41:18;;;20068:21:26;20125:2;20105:18;;;20098:30;20164:33;20144:18;;;20137:61;20215:18;;903:41:18;19884:355:26;839:236:18;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:18;;20446:2:26;1020:44:18;;;20428:21:26;20485:2;20465:18;;;20458:30;20524:34;20504:18;;;20497:62;20595:4;20575:18;;;20568:32;20617:19;;1020:44:18;20244:398:26;8036:224:10;-1:-1:-1;;;;;2938:19:10;;;2912:7;2938:19;;;:10;:19;;;;;;;;;;;;;;;8197:56;;2938:19;;;;;8246:6;8197:16;:56::i;9375:659:7:-;-1:-1:-1;;;;;9458:21:7;;9450:67;;;;-1:-1:-1;;;9450:67:7;;20849:2:26;9450:67:7;;;20831:21:26;20888:2;20868:18;;;20861:30;20927:34;20907:18;;;20900:62;20998:3;20978:18;;;20971:31;21019:19;;9450:67:7;20647:397:26;9450:67:7;-1:-1:-1;;;;;9613:18:7;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:7;;21251:2:26;9641:71:7;;;21233:21:26;21290:2;21270:18;;;21263:30;21329:34;21309:18;;;21302:62;21400:4;21380:18;;;21373:32;21422:19;;9641:71:7;21049:398:26;9641:71:7;-1:-1:-1;;;;;9746:18:7;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1524:25:26;;;9746:9:7;;:18;9931:37;;1497:18:26;9931:37:7;;;;;;;9979:48;9999:7;10016:1;10020:6;9979:19;:48::i;10296:101:10:-;10359:7;10385:5;10389:1;10385;:5;:::i;9420:768::-;9652:12;;9590:17;;;;;9727:8;;:59;;10626:25;10686:21;;;10752:4;10739:18;;10735:28;;9778:7;10735:28;9727:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;9738:16;;;;;;;;;-1:-1:-1;9738:16:10;;;;;;;9727:59;9699:87;;9813:7;:13;;;9801:25;;;;9852:20;9855:9;9866:5;9852:2;:20;;:::i;:::-;9840:32;;9897:1;9891:3;:7;:39;;;;;9923:7;:5;:7::i;:::-;9902:28;;:7;:17;;;:28;;;9891:39;9887:285;;;9988:29;10007:9;9988:18;:29::i;:::-;10626:25;10686:21;;;10752:4;10739:18;;10735:28;;9971:7;10735:28;9950:67;;;;;;;;;;;;;;;;;;;9887:285;;;10056:5;10067:89;;;;;;;;10090:26;10108:7;:5;:7::i;:::-;10090:26;;:17;:26::i;:::-;10067:89;;;;;;10125:29;10144:9;10125:18;:29::i;:::-;10067:89;;;;;;;10056:101;;;;;;;-1:-1:-1;10056:101:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9887:285;9675:507;9628:560;9420:768;;;;;;:::o;8633:983:20:-;8685:7;;8769:3;8760:12;;;:16;8756:99;;8806:3;8796:13;;;;8827;8756:99;8881:2;8872:11;;;:15;8868:96;;8917:2;8907:12;;;;8937;8868:96;8990:2;8981:11;;;:15;8977:96;;9026:2;9016:12;;;;9046;8977:96;9099:2;9090:11;;;:15;9086:96;;9135:2;9125:12;;;;9155;9086:96;9208:1;9199:10;;;:14;9195:93;;9243:1;9233:11;;;;9262;9195:93;9314:1;9305:10;;;:14;9301:93;;9349:1;9339:11;;;;9368;9301:93;9420:1;9411:10;;;:14;9407:93;;9455:1;9445:11;;;;9474;9407:93;9526:1;9517:10;;;:14;9513:64;;9561:1;9551:11;9603:6;8633:983;-1:-1:-1;;8633:983:20:o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;-1:-1:-1;680:1:20;;588:104;-1:-1:-1;588:104:20:o;10194:96:10:-;10252:7;10278:5;10282:1;10278;:5;:::i;2536:245:15:-;2597:7;2669:4;2633:40;;2696:2;2687:11;;2683:69;;;2721:20;;;;;;;;;;;;;;8520:535:7;-1:-1:-1;;;;;8603:21:7;;8595:65;;;;-1:-1:-1;;;8595:65:7;;21654:2:26;8595:65:7;;;21636:21:26;21693:2;21673:18;;;21666:30;21732:33;21712:18;;;21705:61;21783:18;;8595:65:7;21452:355:26;8595:65:7;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:7;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1524:25:26;;;8952:37:7;;1497:18:26;8952:37:7;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;2836:192:21:-;2893:7;2929:17;2920:26;;;2912:78;;;;-1:-1:-1;;;2912:78:21;;22014:2:26;2912:78:21;;;21996:21:26;22053:2;22033:18;;;22026:30;22092:34;22072:18;;;22065:62;22163:9;22143:18;;;22136:37;22190:19;;2912:78:21;21812:403:26;14:482;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;485:4;415:66;410:2;402:6;398:15;394:88;389:3;385:98;381:109;374:116;;;14:482;;;;:::o;501:220::-;650:2;639:9;632:21;613:4;670:45;711:2;700:9;696:18;688:6;670:45;:::i;726:196::-;794:20;;-1:-1:-1;;;;;843:54:26;;833:65;;823:93;;912:1;909;902:12;823:93;726:196;;;:::o;927:254::-;995:6;1003;1056:2;1044:9;1035:7;1031:23;1027:32;1024:52;;;1072:1;1069;1062:12;1024:52;1095:29;1114:9;1095:29;:::i;:::-;1085:39;1171:2;1156:18;;;;1143:32;;-1:-1:-1;;;927:254:26:o;1560:328::-;1637:6;1645;1653;1706:2;1694:9;1685:7;1681:23;1677:32;1674:52;;;1722:1;1719;1712:12;1674:52;1745:29;1764:9;1745:29;:::i;:::-;1735:39;;1793:38;1827:2;1816:9;1812:18;1793:38;:::i;:::-;1783:48;;1878:2;1867:9;1863:18;1850:32;1840:42;;1560:328;;;;;:::o;1893:180::-;1952:6;2005:2;1993:9;1984:7;1980:23;1976:32;1973:52;;;2021:1;2018;2011:12;1973:52;-1:-1:-1;2044:23:26;;1893:180;-1:-1:-1;1893:180:26:o;2449:186::-;2508:6;2561:2;2549:9;2540:7;2536:23;2532:32;2529:52;;;2577:1;2574;2567:12;2529:52;2600:29;2619:9;2600:29;:::i;3068:1335::-;3465:66;3457:6;3453:79;3442:9;3435:98;3416:4;3552:2;3590:3;3585:2;3574:9;3570:18;3563:31;3617:46;3658:3;3647:9;3643:19;3635:6;3617:46;:::i;:::-;3711:9;3703:6;3699:22;3694:2;3683:9;3679:18;3672:50;3745:33;3771:6;3763;3745:33;:::i;:::-;3809:2;3794:18;;3787:34;;;-1:-1:-1;;;;;3858:55:26;;3852:3;3837:19;;3830:84;3945:3;3930:19;;3923:35;;;3995:22;;;3989:3;3974:19;;3967:51;4067:13;;4089:22;;;4165:15;;;;-1:-1:-1;4127:15:26;;;;-1:-1:-1;4208:169:26;4222:6;4219:1;4216:13;4208:169;;;4283:13;;4271:26;;4352:15;;;;4317:12;;;;4244:1;4237:9;4208:169;;;-1:-1:-1;4394:3:26;;3068:1335;-1:-1:-1;;;;;;;;;;;;3068:1335:26:o;4861:156::-;4927:20;;4987:4;4976:16;;4966:27;;4956:55;;5007:1;5004;4997:12;5022:531;5124:6;5132;5140;5148;5156;5164;5217:3;5205:9;5196:7;5192:23;5188:33;5185:53;;;5234:1;5231;5224:12;5185:53;5257:29;5276:9;5257:29;:::i;:::-;5247:39;;5333:2;5322:9;5318:18;5305:32;5295:42;;5384:2;5373:9;5369:18;5356:32;5346:42;;5407:36;5439:2;5428:9;5424:18;5407:36;:::i;:::-;5397:46;;5490:3;5479:9;5475:19;5462:33;5452:43;;5542:3;5531:9;5527:19;5514:33;5504:43;;5022:531;;;;;;;;:::o;5558:606::-;5669:6;5677;5685;5693;5701;5709;5717;5770:3;5758:9;5749:7;5745:23;5741:33;5738:53;;;5787:1;5784;5777:12;5738:53;5810:29;5829:9;5810:29;:::i;:::-;5800:39;;5858:38;5892:2;5881:9;5877:18;5858:38;:::i;:::-;5848:48;;5943:2;5932:9;5928:18;5915:32;5905:42;;5994:2;5983:9;5979:18;5966:32;5956:42;;6017:37;6049:3;6038:9;6034:19;6017:37;:::i;:::-;6007:47;;6101:3;6090:9;6086:19;6073:33;6063:43;;6153:3;6142:9;6138:19;6125:33;6115:43;;5558:606;;;;;;;;;;:::o;6169:260::-;6237:6;6245;6298:2;6286:9;6277:7;6273:23;6269:32;6266:52;;;6314:1;6311;6304:12;6266:52;6337:29;6356:9;6337:29;:::i;:::-;6327:39;;6385:38;6419:2;6408:9;6404:18;6385:38;:::i;:::-;6375:48;;6169:260;;;;;:::o;6434:350::-;6501:6;6509;6562:2;6550:9;6541:7;6537:23;6533:32;6530:52;;;6578:1;6575;6568:12;6530:52;6601:29;6620:9;6601:29;:::i;:::-;6591:39;;6680:2;6669:9;6665:18;6652:32;6724:10;6717:5;6713:22;6706:5;6703:33;6693:61;;6750:1;6747;6740:12;6693:61;6773:5;6763:15;;;6434:350;;;;;:::o;7179:437::-;7258:1;7254:12;;;;7301;;;7322:61;;7376:4;7368:6;7364:17;7354:27;;7322:61;7429:2;7421:6;7418:14;7398:18;7395:38;7392:218;;7466:77;7463:1;7456:88;7567:4;7564:1;7557:15;7595:4;7592:1;7585:15;8617:277;8684:6;8737:2;8725:9;8716:7;8712:23;8708:32;8705:52;;;8753:1;8750;8743:12;8705:52;8785:9;8779:16;8838:5;8831:13;8824:21;8817:5;8814:32;8804:60;;8860:1;8857;8850:12;9243:184;9295:77;9292:1;9285:88;9392:4;9389:1;9382:15;9416:4;9413:1;9406:15;9432:125;9497:9;;;9518:10;;;9515:36;;;9531:18;;:::i;10463:184::-;10515:77;10512:1;10505:88;10612:4;10609:1;10602:15;10636:4;10633:1;10626:15;16337:128;16404:9;;;16425:11;;;16422:37;;;16439:18;;:::i;17801:184::-;17853:77;17850:1;17843:88;17950:4;17947:1;17940:15;17974:4;17971:1;17964:15;17990:274;18030:1;18056;18046:189;;18091:77;18088:1;18081:88;18192:4;18189:1;18182:15;18220:4;18217:1;18210:15;18046:189;-1:-1:-1;18249:9:26;;17990:274::o;19342:184::-;19394:77;19391:1;19384:88;19491:4;19488:1;19481:15;19515:4;19512:1;19505:15"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","codeToken()":"904d2022","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getUserTier(address)":"e4d2620e","getVotes(address)":"9ab24eb0","hasMinStake(address,uint256)":"eaccb43f","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","stake(uint256)":"a694fc3a","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unstake(uint256)":"2e17de78"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_codeToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"codeToken\",\"outputs\":[{\"internalType\":\"contract CodeDAOToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserTier\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"}],\"name\":\"hasMinStake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Also serves as governance token with delegation support\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"StakingVault (sCODE)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getUserTier(address)\":{\"notice\":\"Get user's staking tier based on sCODE balance\"},\"hasMinStake(address,uint256)\":{\"notice\":\"Check if user qualifies for specific tier\"},\"stake(uint256)\":{\"notice\":\"Stake CODE tokens to receive sCODE 1:1\"},\"unstake(uint256)\":{\"notice\":\"Unstake sCODE to receive CODE 1:1\"}},\"notice\":\"Liquid staking: stake CODE \\u2192 receive sCODE 1:1sCODE balance unlocks premium features in CodeDAO platform\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingVault.sol\":\"StakingVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"bzzr1\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xbb16110ffe0b625944fe7dd97adcf1158e514185c956a5628bc09be90d606174\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b412e554a4dd37a50f89ffcd7b9a6ef2ae5064f37619f89343b23d58ce89ca\",\"dweb:/ipfs/QmPWMdBvdFk8WBVv625wd1Ar7aehnBWtj1XfFRrRL5KpxJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/CodeDAOToken.sol\":{\"keccak256\":\"0xec23401fc3ce05876b669927cc92c54a2eccfbca101927687568fa9da9082532\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6dc9150d83ce9c485e8d485fa2d5eaf510fb31c283f27c16111cfc8af0b5dd1\",\"dweb:/ipfs/QmaGeLfTEc1fc6BbK9tr5YXU4zLQpkrq3Q52ZseKZ22iVD\"]},\"contracts/StakingVault.sol\":{\"keccak256\":\"0x14153b8e788bede7a40103fe5b14ee2e210320b5286ea680f69d0144d0cda965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d80cbbc8362b20242ae8d5d4b90cf9ae3c2e6f560e69346af1857db8799addb\",\"dweb:/ipfs/QmS1VuEqx74LxFoZ5fDzbe7F5myKf4bsya41TDPDZmuumY\"]}},\"version\":1}"}}}}}