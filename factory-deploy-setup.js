const { ethers } = require('ethers');

// EIP-2470 Singleton Factory setup for Safe Transaction Builder
const FACTORY_ADDRESS = '0x0000000000FFe8B47B3e2130213B802212439497';
const SAFE_ADDRESS = '0x813343d30065eAe9D1Be6521203f5C0874818C28';

// Contract bytecode + constructor args
const INIT_CODE = '0x608060405234801561001057600080fd5b506040516200115338038062001153833981810160405281019061003491906100f7565b6040518060400160405280600d81526020017f436f646544414f20546f6b656e000000000000000000000000000000000000008152506040518060400160405280600481526020017f434f44450000000000000000000000000000000000000000000000000000008152508160039081610092919061033a565b5080600490816100a2919061033a565b5050506000811690506100ba81610147565b6100f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e7906104c8565b60405180910390fd5b6100ff816a52b7d2dcc80cd2e4000000610218565b505061058e565b60008151905061010c81610577565b92915050565b60006020828403121561012857610127610572565b5b6000610136848285016100fd565b91505092915050565b600061014a82610155565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1682169050919050565b6000610180600083610298565b915061018b826105a5565b600082019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061020f57601f821691505b602082108103610222576102216101c8565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546102558161020f565b61025f8186610228565b94506001821660008114610278576001811461028d576102c0565b60ff19831686528115158202860193506102c0565b61029685610233565b60005b838110156102b857815481890152600082019150602081019050610299565b838801955050505b50505092915050565b60006102d482610173565b6102de8185610228565b93506102ee8185602086016102f9565b80840191505092915050565b60005b838110156103175780820151818401526020810190506102fc565b60008484015250505050565b600061032f8284610248565b915081905092915050565b600061034682610173565b6103508185610298565b93506103608185602086016102f9565b610369816103a9565b840191505092915050565b600082825260208201905092915050565b600061039082610173565b61039a8185610374565b93506103aa8185602086016102f9565b6103b3816103a9565b840191505092915050565b600060208201905081810360008301526103d78184610385565b905092915050565b60006103eb82610196565b9050919050565b6103fb816103e0565b811461040657600080fd5b50565b600081519050610418816103f2565b92915050565b60006020828403121561043457610433610572565b5b600061044284828501610409565b91505092915050565b7f436f646544414f546f6b656e3a206d696e7420746f207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006104a7602383610374565b91506104b28261044b565b604082019050919050565b600060208201905081810360008301526104d68161049a565b9050919050565b600080fd5b600080fd5b6105058161013f565b811461051057600080fd5b50565b600081519050610522816104fc565b92915050565b60006020828403121561053e5761053d6104dd565b5b600061054c84828501610513565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061059082610196565b915061059b83610196565b92508282039050818111156105b3576105b2610555565b5b92915050565b60006105c482610196565b91506105cf83610196565b92508282019050808211156105e7576105e6610555565b5b92915050565b6105f6816103e0565b811461060157600080fd5b50565b600081519050610613816105ed565b92915050565b60006020828403121561062f5761062e6104dd565b5b600061063d84828501610604565b91505092915050565b610c8f80610655000396000f3fe000000000000000000000000813343d30065eae9d1be6521203f5c0874818c28';

const SALT = '0x0000000000000000000000000000000000000000000000000000000000000001';

console.log('üè≠ EIP-2470 Factory Deployment Setup');
console.log('=====================================');
console.log();

console.log('üìã Instructions for Safe Transaction Builder:');
console.log('1. Open Safe ‚Üí Apps ‚Üí Transaction Builder');
console.log('2. Add Transaction with these EXACT values:');
console.log();

console.log('üéØ Target Contract:');
console.log('  to:', FACTORY_ADDRESS);
console.log();

console.log('üí∞ Value:');
console.log('  value: 0');
console.log();

console.log('üìù Method:');
console.log('  Function: deploy(bytes memory _initCode, bytes32 _salt)');
console.log();

console.log('üìä ABI for Transaction Builder:');
console.log('[');
console.log('  {');
console.log('    "inputs": [');
console.log('      {"name": "_initCode", "type": "bytes"},');
console.log('      {"name": "_salt", "type": "bytes32"}');
console.log('    ],');
console.log('    "name": "deploy",');
console.log('    "outputs": [{"name": "", "type": "address"}],');
console.log('    "stateMutability": "nonpayable",');
console.log('    "type": "function"');
console.log('  }');
console.log(']');
console.log();

console.log('üìã Parameters to copy-paste:');
console.log();
console.log('_initCode:');
console.log(INIT_CODE);
console.log();
console.log('_salt:');
console.log(SALT);
console.log();

console.log('üîç Verification Info:');
console.log('  Init code byte length:', (INIT_CODE.length - 2) / 2, 'bytes');
console.log('  Last 40 hex chars (should be Safe address):');
console.log('  ' + INIT_CODE.slice(-40));
console.log('  Expected Safe address: 813343d30065eae9d1be6521203f5c0874818c28');
console.log('  ‚úÖ Address match:', INIT_CODE.slice(-40).toLowerCase() === '813343d30065eae9d1be6521203f5c0874818c28');

console.log();
console.log('üìç Once deployed, the contract will appear in the factory\'s internal transaction list.');
console.log('üìç Look for the contract address in the transaction receipt logs.');
console.log();

console.log('üöÄ After deployment, run these commands:');
console.log('  /token verify-mainnet address=<CONTRACT_ADDRESS>');
console.log('  /token canary-transfer address=<CONTRACT_ADDRESS>');
console.log('  /token publish address=<CONTRACT_ADDRESS>');

module.exports = {
    FACTORY_ADDRESS,
    INIT_CODE,
    SALT,
    SAFE_ADDRESS
}; 