version: '3.8'

services:
  twitter-bot:
    build: .
    container_name: codedao-twitter-bot
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - BOT_ENVIRONMENT=production
    env_file:
      - .env
    depends_on:
      - mongodb
    volumes:
      - ./logs:/app/logs
    networks:
      - codedao-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:6.0-rc
    container_name: codedao-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=codedao2024
      - MONGO_INITDB_DATABASE=codedao_twitter_bot
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - codedao-network

  # Optional: MongoDB management interface
  mongo-express:
    image: mongo-express:latest
    container_name: codedao-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=codedao2024
      - ME_CONFIG_MONGODB_URL=mongodb://admin:codedao2024@mongodb:27017/
    depends_on:
      - mongodb
    networks:
      - codedao-network
    profiles:
      - debug

  # Optional: Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    container_name: codedao-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - codedao-network
    profiles:
      - cache

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  codedao-network:
    driver: bridge 